

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 10 03:24:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Generated 12/10/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     009F                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0094                     	;# 
   180     0098                     	;# 
   181     0099                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     009F                     	;# 
   186     010C                     	;# 
   187     010D                     	;# 
   188     010E                     	;# 
   189     010F                     	;# 
   190     018C                     	;# 
   191     018D                     	;# 
   192     0000                     	;# 
   193     0001                     	;# 
   194     0002                     	;# 
   195     0003                     	;# 
   196     0004                     	;# 
   197     0005                     	;# 
   198     0006                     	;# 
   199     0007                     	;# 
   200     0008                     	;# 
   201     0009                     	;# 
   202     000A                     	;# 
   203     000B                     	;# 
   204     000C                     	;# 
   205     000D                     	;# 
   206     000E                     	;# 
   207     000E                     	;# 
   208     000F                     	;# 
   209     0010                     	;# 
   210     0011                     	;# 
   211     0012                     	;# 
   212     0013                     	;# 
   213     0014                     	;# 
   214     0015                     	;# 
   215     0015                     	;# 
   216     0016                     	;# 
   217     0017                     	;# 
   218     0018                     	;# 
   219     0019                     	;# 
   220     001A                     	;# 
   221     001B                     	;# 
   222     001B                     	;# 
   223     001C                     	;# 
   224     001D                     	;# 
   225     001E                     	;# 
   226     001F                     	;# 
   227     0081                     	;# 
   228     0085                     	;# 
   229     0086                     	;# 
   230     0087                     	;# 
   231     0088                     	;# 
   232     0089                     	;# 
   233     008C                     	;# 
   234     008D                     	;# 
   235     008E                     	;# 
   236     0091                     	;# 
   237     0092                     	;# 
   238     0093                     	;# 
   239     0094                     	;# 
   240     0098                     	;# 
   241     0099                     	;# 
   242     009C                     	;# 
   243     009D                     	;# 
   244     009E                     	;# 
   245     009F                     	;# 
   246     010C                     	;# 
   247     010D                     	;# 
   248     010E                     	;# 
   249     010F                     	;# 
   250     018C                     	;# 
   251     018D                     	;# 
   252     0000                     	;# 
   253     0001                     	;# 
   254     0002                     	;# 
   255     0003                     	;# 
   256     0004                     	;# 
   257     0005                     	;# 
   258     0006                     	;# 
   259     0007                     	;# 
   260     0008                     	;# 
   261     0009                     	;# 
   262     000A                     	;# 
   263     000B                     	;# 
   264     000C                     	;# 
   265     000D                     	;# 
   266     000E                     	;# 
   267     000E                     	;# 
   268     000F                     	;# 
   269     0010                     	;# 
   270     0011                     	;# 
   271     0012                     	;# 
   272     0013                     	;# 
   273     0014                     	;# 
   274     0015                     	;# 
   275     0015                     	;# 
   276     0016                     	;# 
   277     0017                     	;# 
   278     0018                     	;# 
   279     0019                     	;# 
   280     001A                     	;# 
   281     001B                     	;# 
   282     001B                     	;# 
   283     001C                     	;# 
   284     001D                     	;# 
   285     001E                     	;# 
   286     001F                     	;# 
   287     0081                     	;# 
   288     0085                     	;# 
   289     0086                     	;# 
   290     0087                     	;# 
   291     0088                     	;# 
   292     0089                     	;# 
   293     008C                     	;# 
   294     008D                     	;# 
   295     008E                     	;# 
   296     0091                     	;# 
   297     0092                     	;# 
   298     0093                     	;# 
   299     0094                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009C                     	;# 
   303     009D                     	;# 
   304     009E                     	;# 
   305     009F                     	;# 
   306     010C                     	;# 
   307     010D                     	;# 
   308     010E                     	;# 
   309     010F                     	;# 
   310     018C                     	;# 
   311     018D                     	;# 
   312     0006                     _PORTBbits	set	6
   313     0001                     _TMR0	set	1
   314     0041                     _RD1	set	65
   315     0040                     _RD0	set	64
   316     0045                     _RD5	set	69
   317     0044                     _RD4	set	68
   318     0043                     _RD3	set	67
   319     0042                     _RD2	set	66
   320     005D                     _TMR0IE	set	93
   321     005A                     _TMR0IF	set	90
   322     005F                     _GIE	set	95
   323     0059                     _INTF	set	89
   324     005C                     _INTE	set	92
   325     009F                     _ADCON1	set	159
   326     0081                     _OPTION_REG	set	129
   327     0086                     _TRISB	set	134
   328     0081                     _OPTION_REGbits	set	129
   329     042C                     _TRISA4	set	1068
   330     0445                     _TRISD5	set	1093
   331     0444                     _TRISD4	set	1092
   332     0443                     _TRISD3	set	1091
   333     0442                     _TRISD2	set	1090
   334     0441                     _TRISD1	set	1089
   335     0440                     _TRISD0	set	1088
   336     040E                     _INTEDG	set	1038
   337                           
   338                           	psect	strings
   339     0561                     __pstrings:
   340     0561                     stringtab:
   341     0561                     __stringtab:
   342     0561                     stringcode:	
   343                           ;	String table - string pointers are 1 byte each
   344                           
   345     0561                     stringdir:
   346     0561  3005               	movlw	high stringdir
   347     0562  008A               	movwf	10
   348     0563  0804               	movf	4,w
   349     0564  0A84               	incf	4,f
   350     0565  0782               	addwf	2,f
   351     0566                     __stringbase:
   352     0566  3400               	retlw	0
   353     0567                     __end_of__stringtab:
   354     0567                     STR_2:
   355     0567  3420               	retlw	32	;' '
   356     0568  3420               	retlw	32	;' '
   357     0569  3457               	retlw	87	;'W'
   358     056A  3445               	retlw	69	;'E'
   359     056B  344C               	retlw	76	;'L'
   360     056C  3443               	retlw	67	;'C'
   361     056D  344F               	retlw	79	;'O'
   362     056E  344D               	retlw	77	;'M'
   363     056F  3445               	retlw	69	;'E'
   364     0570  3420               	retlw	32	;' '
   365     0571  3455               	retlw	85	;'U'
   366     0572  3453               	retlw	83	;'S'
   367     0573  3445               	retlw	69	;'E'
   368     0574  3452               	retlw	82	;'R'
   369     0575  3400               	retlw	0
   370     0576                     STR_4:
   371     0576  3457               	retlw	87	;'W'
   372     0577  3461               	retlw	97	;'a'
   373     0578  346B               	retlw	107	;'k'
   374     0579  3465               	retlw	101	;'e'
   375     057A  3420               	retlw	32	;' '
   376     057B  3475               	retlw	117	;'u'
   377     057C  3470               	retlw	112	;'p'
   378     057D  3420               	retlw	32	;' '
   379     057E  3441               	retlw	65	;'A'
   380     057F  3479               	retlw	121	;'y'
   381     0580  346D               	retlw	109	;'m'
   382     0581  3461               	retlw	97	;'a'
   383     0582  346E               	retlw	110	;'n'
   384     0583  3400               	retlw	0
   385     0584                     STR_3:
   386     0584  3443               	retlw	67	;'C'
   387     0585  346F               	retlw	111	;'o'
   388     0586  3475               	retlw	117	;'u'
   389     0587  346E               	retlw	110	;'n'
   390     0588  3474               	retlw	116	;'t'
   391     0589  3420               	retlw	32	;' '
   392     058A  343D               	retlw	61	;'='
   393     058B  3420               	retlw	32	;' '
   394     058C  3400               	retlw	0
   395     058D                     STR_1:
   396     058D  3425               	retlw	37	;'%'
   397     058E  3464               	retlw	100	;'d'
   398     058F  3400               	retlw	0
   399                           
   400                           	psect	cinit
   401     000F                     start_initialization:	
   402                           ; #config settings
   403                           
   404     000F                     __initialization:
   405                           
   406                           ; Clear objects allocated to COMMON
   407     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   408     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   409                           
   410                           ; Clear objects allocated to BANK0
   411     0011  1383               	bcf	3,7	;select IRP bank0
   412     0012  305D               	movlw	low __pbssBANK0
   413     0013  0084               	movwf	4
   414     0014  3066               	movlw	low (__pbssBANK0+9)
   415     0015  120A  118A  26A8  120A  118A  	fcall	clear_ram0
   416                           
   417                           ; Clear objects allocated to BANK1
   418     001A  30A0               	movlw	low __pbssBANK1
   419     001B  0084               	movwf	4
   420     001C  30C0               	movlw	low (__pbssBANK1+32)
   421     001D  120A  118A  26A8  120A  118A  	fcall	clear_ram0
   422     0022                     end_of_initialization:	
   423                           ;End of C runtime variable initialization code
   424                           
   425     0022                     __end_of__initialization:
   426     0022  0183               	clrf	3
   427     0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   428                           
   429                           	psect	bssCOMMON
   430     007A                     __pbssCOMMON:
   431     007A                     _overflow_cnt:
   432     007A                     	ds	2
   433                           
   434                           	psect	bssBANK0
   435     005D                     __pbssBANK0:
   436     005D                     _timer0_time_passed_ms:
   437     005D                     	ds	4
   438     0061                     _width:
   439     0061                     	ds	2
   440     0063                     _prec:
   441     0063                     	ds	2
   442     0065                     _flags:
   443     0065                     	ds	1
   444                           
   445                           	psect	bssBANK1
   446     00A0                     __pbssBANK1:
   447     00A0                     _dbuf:
   448     00A0                     	ds	32
   449                           
   450                           	psect	clrtext
   451     06A8                     clear_ram0:	
   452                           ;	Called with FSR containing the base address, and
   453                           ;	W with the last address+1
   454                           
   455     06A8  0064               	clrwdt	;clear the watchdog before getting into this loop
   456     06A9                     clrloop0:
   457     06A9  0180               	clrf	0	;clear RAM location pointed to by FSR
   458     06AA  0A84               	incf	4,f	;increment pointer
   459     06AB  0604               	xorwf	4,w	;XOR with final address
   460     06AC  1903               	btfsc	3,2	;have we reached the end yet?
   461     06AD  3400               	retlw	0	;all done for this memory range, return
   462     06AE  0604               	xorwf	4,w	;XOR again to restore value
   463     06AF  2EA9               	goto	clrloop0	;do the next byte
   464                           
   465                           	psect	cstackCOMMON
   466     0070                     __pcstackCOMMON:
   467     0070                     ?_lcd_init:
   468     0070                     ?_timer0_init:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0070                     ?_lcd_cmd:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0070                     ?_lcd_out_cp:	
   475                           ; 1 bytes @ 0x0
   476                           
   477     0070                     ?_putch:	
   478                           ; 1 bytes @ 0x0
   479                           
   480     0070                     ?_My_init_Function:	
   481                           ; 1 bytes @ 0x0
   482                           
   483     0070                     ?_ISR:	
   484                           ; 1 bytes @ 0x0
   485                           
   486     0070                     ??_ISR:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     ?_main:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_SET_LCD_DATA_PINS:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     ?_LCD_SEND_4BIT_CMD:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ?_LCD_Write_Char:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     putch@c:	
   502                           ; 1 bytes @ 0x0
   503                           
   504                           
   505                           ; 1 bytes @ 0x0
   506     0070                     	ds	2
   507     0072                     ??_timer0_init:
   508     0072                     ??_timer_get_time_since_init:	
   509                           ; 1 bytes @ 0x2
   510                           
   511     0072                     ??_fputc:	
   512                           ; 1 bytes @ 0x2
   513                           
   514     0072                     ??_putch:	
   515                           ; 1 bytes @ 0x2
   516                           
   517     0072                     ??_my_delay:	
   518                           ; 1 bytes @ 0x2
   519                           
   520     0072                     ??_SET_LCD_DATA_PINS:	
   521                           ; 1 bytes @ 0x2
   522                           
   523     0072                     ??___awdiv:	
   524                           ; 1 bytes @ 0x2
   525                           
   526     0072                     ??___awmod:	
   527                           ; 1 bytes @ 0x2
   528                           
   529     0072                     SET_LCD_DATA_PINS@Data:	
   530                           ; 1 bytes @ 0x2
   531                           
   532     0072                     ___awdiv@counter:	
   533                           ; 1 bytes @ 0x2
   534                           
   535     0072                     ___awmod@counter:	
   536                           ; 1 bytes @ 0x2
   537                           
   538                           
   539                           ; 1 bytes @ 0x2
   540     0072                     	ds	1
   541     0073                     ??_LCD_SEND_4BIT_CMD:
   542     0073                     ??_LCD_Write_Char:	
   543                           ; 1 bytes @ 0x3
   544                           
   545     0073                     timer0_init@prescaler:	
   546                           ; 1 bytes @ 0x3
   547                           
   548     0073                     ___awdiv@sign:	
   549                           ; 1 bytes @ 0x3
   550                           
   551     0073                     ___awmod@sign:	
   552                           ; 1 bytes @ 0x3
   553                           
   554                           
   555                           ; 1 bytes @ 0x3
   556     0073                     	ds	1
   557     0074                     ??_abs:
   558     0074                     ___awdiv@quotient:	
   559                           ; 1 bytes @ 0x4
   560                           
   561                           
   562                           ; 2 bytes @ 0x4
   563     0074                     	ds	1
   564     0075                     LCD_SEND_4BIT_CMD@CMD:
   565     0075                     LCD_Write_Char@Low4:	
   566                           ; 1 bytes @ 0x5
   567                           
   568                           
   569                           ; 1 bytes @ 0x5
   570     0075                     	ds	1
   571     0076                     ??_lcd_init:
   572     0076                     ??_lcd_cmd:	
   573                           ; 1 bytes @ 0x6
   574                           
   575     0076                     ??_lcd_set_cursor:	
   576                           ; 1 bytes @ 0x6
   577                           
   578     0076                     LCD_Write_Char@High4:	
   579                           ; 1 bytes @ 0x6
   580                           
   581                           
   582                           ; 1 bytes @ 0x6
   583     0076                     	ds	1
   584     0077                     ??_vfpfcnvrt:
   585     0077                     LCD_Write_Char@Data:	
   586                           ; 1 bytes @ 0x7
   587                           
   588     0077                     lcd_cmd@command:	
   589                           ; 1 bytes @ 0x7
   590                           
   591                           
   592                           ; 1 bytes @ 0x7
   593     0077                     	ds	1
   594     0078                     ??_lcd_out_cp:
   595     0078                     ??_lcd_out:	
   596                           ; 1 bytes @ 0x8
   597                           
   598     0078                     ??_My_init_Function:	
   599                           ; 1 bytes @ 0x8
   600                           
   601                           
   602                           ; 1 bytes @ 0x8
   603     0078                     	ds	1
   604     0079                     ??_sprintf:
   605     0079                     ??_vfprintf:	
   606                           ; 1 bytes @ 0x9
   607                           
   608                           
   609                           ; 1 bytes @ 0x9
   610     0079                     	ds	1
   611     007A                     ??_Print:
   612                           
   613                           	psect	cstackBANK0
   614     0020                     __pcstackBANK0:	
   615                           ; 1 bytes @ 0xA
   616                           
   617     0020                     ?_lcd_set_cursor:
   618     0020                     ?_fputc:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0020                     ?___awdiv:	
   622                           ; 2 bytes @ 0x0
   623                           
   624     0020                     ?___awmod:	
   625                           ; 2 bytes @ 0x0
   626                           
   627     0020                     ?_timer_get_time_since_init:	
   628                           ; 2 bytes @ 0x0
   629                           
   630     0020                     lcd_set_cursor@c:	
   631                           ; 4 bytes @ 0x0
   632                           
   633     0020                     lcd_out_cp@str:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0020                     ___awdiv@divisor:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0020                     ___awmod@divisor:	
   640                           ; 2 bytes @ 0x0
   641                           
   642     0020                     fputc@c:	
   643                           ; 2 bytes @ 0x0
   644                           
   645                           
   646                           ; 2 bytes @ 0x0
   647     0020                     	ds	1
   648     0021                     lcd_set_cursor@r:
   649     0021                     lcd_out_cp@i:	
   650                           ; 1 bytes @ 0x1
   651                           
   652                           
   653                           ; 2 bytes @ 0x1
   654     0021                     	ds	1
   655     0022                     lcd_set_cursor@Low4:
   656     0022                     fputc@fp:	
   657                           ; 1 bytes @ 0x2
   658                           
   659     0022                     ___awdiv@dividend:	
   660                           ; 1 bytes @ 0x2
   661                           
   662     0022                     ___awmod@dividend:	
   663                           ; 2 bytes @ 0x2
   664                           
   665                           
   666                           ; 2 bytes @ 0x2
   667     0022                     	ds	1
   668     0023                     lcd_set_cursor@High4:
   669                           
   670                           ; 1 bytes @ 0x3
   671     0023                     	ds	1
   672     0024                     ?_my_delay:
   673     0024                     ?_abs:	
   674                           ; 1 bytes @ 0x4
   675                           
   676     0024                     lcd_set_cursor@Temp:	
   677                           ; 2 bytes @ 0x4
   678                           
   679     0024                     abs@a:	
   680                           ; 1 bytes @ 0x4
   681                           
   682     0024                     my_delay@mytime:	
   683                           ; 2 bytes @ 0x4
   684                           
   685                           
   686                           ; 4 bytes @ 0x4
   687     0024                     	ds	1
   688     0025                     ?_lcd_out:
   689     0025                     lcd_out@col:	
   690                           ; 1 bytes @ 0x5
   691                           
   692                           
   693                           ; 1 bytes @ 0x5
   694     0025                     	ds	1
   695     0026                     ?_vfpfcnvrt:
   696     0026                     lcd_out@str:	
   697                           ; 1 bytes @ 0x6
   698                           
   699     0026                     vfpfcnvrt@fmt:	
   700                           ; 1 bytes @ 0x6
   701                           
   702                           
   703                           ; 1 bytes @ 0x6
   704     0026                     	ds	1
   705     0027                     lcd_out@row:
   706     0027                     vfpfcnvrt@ap:	
   707                           ; 1 bytes @ 0x7
   708                           
   709                           
   710                           ; 1 bytes @ 0x7
   711     0027                     	ds	1
   712     0028                     vfpfcnvrt@done:
   713     0028                     lcd_out@i:	
   714                           ; 1 bytes @ 0x8
   715                           
   716     0028                     my_delay@start_time:	
   717                           ; 2 bytes @ 0x8
   718                           
   719                           
   720                           ; 4 bytes @ 0x8
   721     0028                     	ds	1
   722     0029                     vfpfcnvrt@fp:
   723                           
   724                           ; 1 bytes @ 0x9
   725     0029                     	ds	1
   726     002A                     vfpfcnvrt@cp:
   727                           
   728                           ; 1 bytes @ 0xA
   729     002A                     	ds	1
   730     002B                     vfpfcnvrt@convarg:
   731                           
   732                           ; 4 bytes @ 0xB
   733     002B                     	ds	1
   734     002C                     my_delay@end_time:
   735                           
   736                           ; 4 bytes @ 0xC
   737     002C                     	ds	3
   738     002F                     vfpfcnvrt@c:
   739                           
   740                           ; 1 bytes @ 0xF
   741     002F                     	ds	1
   742     0030                     ?_vfprintf:
   743     0030                     vfprintf@fmt:	
   744                           ; 2 bytes @ 0x10
   745                           
   746                           
   747                           ; 1 bytes @ 0x10
   748     0030                     	ds	1
   749     0031                     vfprintf@ap:
   750                           
   751                           ; 1 bytes @ 0x11
   752     0031                     	ds	1
   753     0032                     vfprintf@fp:
   754                           
   755                           ; 1 bytes @ 0x12
   756     0032                     	ds	1
   757     0033                     vfprintf@cfmt:
   758                           
   759                           ; 1 bytes @ 0x13
   760     0033                     	ds	1
   761     0034                     ?_sprintf:
   762     0034                     sprintf@fmt:	
   763                           ; 2 bytes @ 0x14
   764                           
   765                           
   766                           ; 1 bytes @ 0x14
   767     0034                     	ds	3
   768     0037                     sprintf@ap:
   769                           
   770                           ; 1 bytes @ 0x17
   771     0037                     	ds	1
   772     0038                     sprintf@s:
   773                           
   774                           ; 1 bytes @ 0x18
   775     0038                     	ds	1
   776     0039                     sprintf@f:
   777                           
   778                           ; 11 bytes @ 0x19
   779     0039                     	ds	11
   780     0044                     ?_Print:
   781     0044                     Print@mynum:	
   782                           ; 1 bytes @ 0x24
   783                           
   784                           
   785                           ; 2 bytes @ 0x24
   786     0044                     	ds	2
   787     0046                     Print@My_Buffer:
   788                           
   789                           ; 9 bytes @ 0x26
   790     0046                     	ds	9
   791     004F                     ??_main:
   792                           
   793                           ; 1 bytes @ 0x2F
   794     004F                     	ds	4
   795     0053                     main@start_time:
   796                           
   797                           ; 4 bytes @ 0x33
   798     0053                     	ds	4
   799     0057                     main@end_time:
   800                           
   801                           ; 4 bytes @ 0x37
   802     0057                     	ds	4
   803     005B                     main@count:
   804                           
   805                           ; 2 bytes @ 0x3B
   806     005B                     	ds	2
   807                           
   808                           	psect	maintext
   809     0026                     __pmaintext:	
   810 ;;
   811 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   812 ;;
   813 ;; *************** function _main *****************
   814 ;; Defined at:
   815 ;;		line 83 in file "main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  end_time        4   55[BANK0 ] unsigned long 
   820 ;;  start_time      4   51[BANK0 ] unsigned long 
   821 ;;  count           2   59[BANK0 ] int 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : B00/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         0      10       0       0       0
   833 ;;      Temps:          0       4       0       0       0
   834 ;;      Totals:         0      14       0       0       0
   835 ;;Total ram usage:       14 bytes
   836 ;; Hardware stack levels required when called: 7
   837 ;; This function calls:
   838 ;;		_My_init_Function
   839 ;;		_Print
   840 ;;		_lcd_cmd
   841 ;;		_lcd_out
   842 ;;		_my_delay
   843 ;;		_timer_get_time_since_init
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849     0026                     _main:	
   850                           ;psect for function _main
   851                           
   852     0026                     l1969:	
   853                           ;incstack = 0
   854                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   855                           
   856                           
   857                           ;main.c: 84:     My_init_Function();
   858     0026  120A  118A  2617  120A  118A  	fcall	_My_init_Function
   859     002B                     l1971:
   860                           
   861                           ;main.c: 85:     int count = 0;
   862     002B  1283               	bcf	3,5	;RP0=0, select bank0
   863     002C  1303               	bcf	3,6	;RP1=0, select bank0
   864     002D  01DB               	clrf	main@count
   865     002E  01DC               	clrf	main@count+1
   866     002F                     l1973:
   867                           
   868                           ;main.c: 87:     lcd_out(1,1,"  WELCOME USER");
   869     002F  01A5               	clrf	lcd_out@col
   870     0030  0AA5               	incf	lcd_out@col,f
   871     0031  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   872     0032  00A6               	movwf	lcd_out@str
   873     0033  3001               	movlw	1
   874     0034  120A  118A  252E  120A  118A  	fcall	_lcd_out
   875     0039                     l1975:
   876                           
   877                           ;main.c: 88:     my_delay(3000);
   878     0039  3000               	movlw	0
   879     003A  1283               	bcf	3,5	;RP0=0, select bank0
   880     003B  1303               	bcf	3,6	;RP1=0, select bank0
   881     003C  00A7               	movwf	my_delay@mytime+3
   882     003D  3000               	movlw	0
   883     003E  00A6               	movwf	my_delay@mytime+2
   884     003F  300B               	movlw	11
   885     0040  00A5               	movwf	my_delay@mytime+1
   886     0041  30B8               	movlw	184
   887     0042  00A4               	movwf	my_delay@mytime
   888     0043  120A  118A  23F8  120A  118A  	fcall	_my_delay
   889     0048                     l1977:
   890                           
   891                           ;main.c: 89:     lcd_cmd((0x01));
   892     0048  3001               	movlw	1
   893     0049  120A  118A  264C  120A  118A  	fcall	_lcd_cmd
   894     004E                     l1979:
   895                           
   896                           ;main.c: 90:     unsigned long start_time=0,end_time=0;
   897     004E  3000               	movlw	0
   898     004F  1283               	bcf	3,5	;RP0=0, select bank0
   899     0050  1303               	bcf	3,6	;RP1=0, select bank0
   900     0051  00D6               	movwf	main@start_time+3
   901     0052  3000               	movlw	0
   902     0053  00D5               	movwf	main@start_time+2
   903     0054  3000               	movlw	0
   904     0055  00D4               	movwf	main@start_time+1
   905     0056  3000               	movlw	0
   906     0057  00D3               	movwf	main@start_time
   907     0058                     l1981:
   908     0058  3000               	movlw	0
   909     0059  00DA               	movwf	main@end_time+3
   910     005A  3000               	movlw	0
   911     005B  00D9               	movwf	main@end_time+2
   912     005C  3000               	movlw	0
   913     005D  00D8               	movwf	main@end_time+1
   914     005E  3000               	movlw	0
   915     005F  00D7               	movwf	main@end_time
   916     0060                     l1983:
   917                           
   918                           ;main.c: 92:     {;main.c: 93:         if(end_time-start_time<=4000)
   919     0060  0857               	movf	main@end_time,w
   920     0061  00CF               	movwf	??_main
   921     0062  0858               	movf	main@end_time+1,w
   922     0063  00D0               	movwf	??_main+1
   923     0064  0859               	movf	main@end_time+2,w
   924     0065  00D1               	movwf	??_main+2
   925     0066  085A               	movf	main@end_time+3,w
   926     0067  00D2               	movwf	??_main+3
   927     0068  0853               	movf	main@start_time,w
   928     0069  02CF               	subwf	??_main,f
   929     006A  0854               	movf	main@start_time+1,w
   930     006B  1C03               	skipc
   931     006C  0F54               	incfsz	main@start_time+1,w
   932     006D  286F               	goto	u1701
   933     006E  2870               	goto	u1702
   934     006F                     u1701:
   935     006F  02D0               	subwf	??_main+1,f
   936     0070                     u1702:
   937     0070  0855               	movf	main@start_time+2,w
   938     0071  1C03               	skipc
   939     0072  0F55               	incfsz	main@start_time+2,w
   940     0073  2875               	goto	u1703
   941     0074  2876               	goto	u1704
   942     0075                     u1703:
   943     0075  02D1               	subwf	??_main+2,f
   944     0076                     u1704:
   945     0076  0856               	movf	main@start_time+3,w
   946     0077  1C03               	skipc
   947     0078  0F56               	incfsz	main@start_time+3,w
   948     0079  287B               	goto	u1705
   949     007A  287C               	goto	u1706
   950     007B                     u1705:
   951     007B  02D2               	subwf	??_main+3,f
   952     007C                     u1706:
   953     007C  0852               	movf	??_main+3,w
   954     007D  1D03               	btfss	3,2
   955     007E  288D               	goto	u1711
   956     007F  0851               	movf	??_main+2,w
   957     0080  1D03               	btfss	3,2
   958     0081  288D               	goto	u1711
   959     0082  300F               	movlw	15
   960     0083  0250               	subwf	??_main+1,w
   961     0084  1D03               	skipz
   962     0085  288A               	goto	u1713
   963     0086  30A1               	movlw	161
   964     0087  024F               	subwf	??_main,w
   965     0088  1D03               	skipz
   966     0089  288A               	goto	u1713
   967     008A                     u1713:
   968     008A  1803               	btfsc	3,0
   969     008B  288D               	goto	u1711
   970     008C  288E               	goto	u1710
   971     008D                     u1711:
   972     008D  2902               	goto	l2011
   973     008E                     u1710:
   974     008E                     l1985:
   975                           
   976                           ;main.c: 94:         {;main.c: 95:             lcd_out(1,1,"Count = ");
   977     008E  1283               	bcf	3,5	;RP0=0, select bank0
   978     008F  1303               	bcf	3,6	;RP1=0, select bank0
   979     0090  01A5               	clrf	lcd_out@col
   980     0091  0AA5               	incf	lcd_out@col,f
   981     0092  301E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   982     0093  00A6               	movwf	lcd_out@str
   983     0094  3001               	movlw	1
   984     0095  120A  118A  252E  120A  118A  	fcall	_lcd_out
   985     009A                     l1987:
   986                           
   987                           ;main.c: 97:             Print(count);
   988     009A  1283               	bcf	3,5	;RP0=0, select bank0
   989     009B  1303               	bcf	3,6	;RP1=0, select bank0
   990     009C  085C               	movf	main@count+1,w
   991     009D  00C5               	movwf	Print@mynum+1
   992     009E  085B               	movf	main@count,w
   993     009F  00C4               	movwf	Print@mynum
   994     00A0  120A  118A  2664  120A  118A  	fcall	_Print
   995     00A5                     l1989:
   996                           
   997                           ;main.c: 98:             if(PORTBbits.RB5 == 0)
   998     00A5  1283               	bcf	3,5	;RP0=0, select bank0
   999     00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1000     00A7  1A86               	btfsc	6,5	;volatile
  1001     00A8  28AA               	goto	u1721
  1002     00A9  28AB               	goto	u1720
  1003     00AA                     u1721:
  1004     00AA  28C3               	goto	l1995
  1005     00AB                     u1720:
  1006     00AB                     l1991:
  1007                           
  1008                           ;main.c: 99:             {;main.c: 100:                 count++;
  1009     00AB  3001               	movlw	1
  1010     00AC  07DB               	addwf	main@count,f
  1011     00AD  1803               	skipnc
  1012     00AE  0ADC               	incf	main@count+1,f
  1013     00AF  3000               	movlw	0
  1014     00B0  07DC               	addwf	main@count+1,f
  1015                           
  1016                           ;main.c: 101:                 timer0_time_passed_ms=0;
  1017     00B1  3000               	movlw	0
  1018     00B2  00E0               	movwf	_timer0_time_passed_ms+3
  1019     00B3  3000               	movlw	0
  1020     00B4  00DF               	movwf	_timer0_time_passed_ms+2
  1021     00B5  3000               	movlw	0
  1022     00B6  00DE               	movwf	_timer0_time_passed_ms+1
  1023     00B7  3000               	movlw	0
  1024     00B8  00DD               	movwf	_timer0_time_passed_ms
  1025     00B9                     l66:	
  1026                           ;main.c: 102:                 while(PORTBbits.RB5 == 0);
  1027                           
  1028     00B9  1E86               	btfss	6,5	;volatile
  1029     00BA  28BC               	goto	u1731
  1030     00BB  28BD               	goto	u1730
  1031     00BC                     u1731:
  1032     00BC  28B9               	goto	l66
  1033     00BD                     u1730:
  1034     00BD                     l1993:
  1035                           
  1036                           ;main.c: 103:                 lcd_cmd((0x01));
  1037     00BD  3001               	movlw	1
  1038     00BE  120A  118A  264C  120A  118A  	fcall	_lcd_cmd
  1039     00C3                     l1995:
  1040                           
  1041                           ;main.c: 105:             if(PORTBbits.RB6 == 0)
  1042     00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1043     00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1044     00C5  1B06               	btfsc	6,6	;volatile
  1045     00C6  28C8               	goto	u1741
  1046     00C7  28C9               	goto	u1740
  1047     00C8                     u1741:
  1048     00C8  28E7               	goto	l2003
  1049     00C9                     u1740:
  1050     00C9                     l1997:
  1051                           
  1052                           ;main.c: 106:             {;main.c: 107:                 if(count!=0)
  1053     00C9  085B               	movf	main@count,w
  1054     00CA  045C               	iorwf	main@count+1,w
  1055     00CB  1903               	btfsc	3,2
  1056     00CC  28CE               	goto	u1751
  1057     00CD  28CF               	goto	u1750
  1058     00CE                     u1751:
  1059     00CE  28D5               	goto	l70
  1060     00CF                     u1750:
  1061     00CF                     l1999:
  1062                           
  1063                           ;main.c: 108:                 {;main.c: 109:                     count--;
  1064     00CF  30FF               	movlw	255
  1065     00D0  07DB               	addwf	main@count,f
  1066     00D1  1803               	skipnc
  1067     00D2  0ADC               	incf	main@count+1,f
  1068     00D3  30FF               	movlw	255
  1069     00D4  07DC               	addwf	main@count+1,f
  1070     00D5                     l70:	
  1071                           ;main.c: 110:                 }
  1072                           
  1073                           
  1074                           ;main.c: 111:                 timer0_time_passed_ms=0;
  1075     00D5  3000               	movlw	0
  1076     00D6  00E0               	movwf	_timer0_time_passed_ms+3
  1077     00D7  3000               	movlw	0
  1078     00D8  00DF               	movwf	_timer0_time_passed_ms+2
  1079     00D9  3000               	movlw	0
  1080     00DA  00DE               	movwf	_timer0_time_passed_ms+1
  1081     00DB  3000               	movlw	0
  1082     00DC  00DD               	movwf	_timer0_time_passed_ms
  1083     00DD                     l71:	
  1084                           ;main.c: 112:                 while(PORTBbits.RB6 == 0);
  1085                           
  1086     00DD  1F06               	btfss	6,6	;volatile
  1087     00DE  28E0               	goto	u1761
  1088     00DF  28E1               	goto	u1760
  1089     00E0                     u1761:
  1090     00E0  28DD               	goto	l71
  1091     00E1                     u1760:
  1092     00E1                     l2001:
  1093                           
  1094                           ;main.c: 113:                 lcd_cmd((0x01));
  1095     00E1  3001               	movlw	1
  1096     00E2  120A  118A  264C  120A  118A  	fcall	_lcd_cmd
  1097     00E7                     l2003:
  1098                           
  1099                           ;main.c: 115:             if(PORTBbits.RB7 == 0)
  1100     00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1101     00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1102     00E9  1B86               	btfsc	6,7	;volatile
  1103     00EA  28EC               	goto	u1771
  1104     00EB  28ED               	goto	u1770
  1105     00EC                     u1771:
  1106     00EC  296E               	goto	l2025
  1107     00ED                     u1770:
  1108     00ED                     l2005:
  1109                           
  1110                           ;main.c: 116:             {;main.c: 117:                 count = 0;
  1111     00ED  01DB               	clrf	main@count
  1112     00EE  01DC               	clrf	main@count+1
  1113     00EF                     l2007:
  1114                           
  1115                           ;main.c: 118:                 timer0_time_passed_ms=0;
  1116     00EF  3000               	movlw	0
  1117     00F0  00E0               	movwf	_timer0_time_passed_ms+3
  1118     00F1  3000               	movlw	0
  1119     00F2  00DF               	movwf	_timer0_time_passed_ms+2
  1120     00F3  3000               	movlw	0
  1121     00F4  00DE               	movwf	_timer0_time_passed_ms+1
  1122     00F5  3000               	movlw	0
  1123     00F6  00DD               	movwf	_timer0_time_passed_ms
  1124     00F7                     l75:	
  1125                           ;main.c: 119:                 while(PORTBbits.RB7 == 0);
  1126                           
  1127     00F7  1F86               	btfss	6,7	;volatile
  1128     00F8  28FA               	goto	u1781
  1129     00F9  28FB               	goto	u1780
  1130     00FA                     u1781:
  1131     00FA  28F7               	goto	l75
  1132     00FB                     u1780:
  1133     00FB                     l2009:
  1134                           
  1135                           ;main.c: 120:                 lcd_cmd((0x01));
  1136     00FB  3001               	movlw	1
  1137     00FC  120A  118A  264C  120A  118A  	fcall	_lcd_cmd
  1138     0101  296E               	goto	l2025
  1139     0102                     l2011:
  1140                           
  1141                           ;main.c: 124:         {;main.c: 125:             lcd_cmd((0x01));
  1142     0102  3001               	movlw	1
  1143     0103  120A  118A  264C  120A  118A  	fcall	_lcd_cmd
  1144                           
  1145                           ;main.c: 126:             while(end_time-start_time>4000)
  1146     0108  2913               	goto	l2015
  1147     0109                     l2013:
  1148                           
  1149                           ;main.c: 127:             {;main.c: 128:                 end_time = timer0_time_passed_m
      +                          s ;
  1150     0109  1283               	bcf	3,5	;RP0=0, select bank0
  1151     010A  1303               	bcf	3,6	;RP1=0, select bank0
  1152     010B  0860               	movf	_timer0_time_passed_ms+3,w
  1153     010C  00DA               	movwf	main@end_time+3
  1154     010D  085F               	movf	_timer0_time_passed_ms+2,w
  1155     010E  00D9               	movwf	main@end_time+2
  1156     010F  085E               	movf	_timer0_time_passed_ms+1,w
  1157     0110  00D8               	movwf	main@end_time+1
  1158     0111  085D               	movf	_timer0_time_passed_ms,w
  1159     0112  00D7               	movwf	main@end_time
  1160     0113                     l2015:
  1161                           
  1162                           ;main.c: 126:             while(end_time-start_time>4000)
  1163     0113  1283               	bcf	3,5	;RP0=0, select bank0
  1164     0114  1303               	bcf	3,6	;RP1=0, select bank0
  1165     0115  0857               	movf	main@end_time,w
  1166     0116  00CF               	movwf	??_main
  1167     0117  0858               	movf	main@end_time+1,w
  1168     0118  00D0               	movwf	??_main+1
  1169     0119  0859               	movf	main@end_time+2,w
  1170     011A  00D1               	movwf	??_main+2
  1171     011B  085A               	movf	main@end_time+3,w
  1172     011C  00D2               	movwf	??_main+3
  1173     011D  0853               	movf	main@start_time,w
  1174     011E  02CF               	subwf	??_main,f
  1175     011F  0854               	movf	main@start_time+1,w
  1176     0120  1C03               	skipc
  1177     0121  0F54               	incfsz	main@start_time+1,w
  1178     0122  2924               	goto	u1791
  1179     0123  2925               	goto	u1792
  1180     0124                     u1791:
  1181     0124  02D0               	subwf	??_main+1,f
  1182     0125                     u1792:
  1183     0125  0855               	movf	main@start_time+2,w
  1184     0126  1C03               	skipc
  1185     0127  0F55               	incfsz	main@start_time+2,w
  1186     0128  292A               	goto	u1793
  1187     0129  292B               	goto	u1794
  1188     012A                     u1793:
  1189     012A  02D1               	subwf	??_main+2,f
  1190     012B                     u1794:
  1191     012B  0856               	movf	main@start_time+3,w
  1192     012C  1C03               	skipc
  1193     012D  0F56               	incfsz	main@start_time+3,w
  1194     012E  2930               	goto	u1795
  1195     012F  2931               	goto	u1796
  1196     0130                     u1795:
  1197     0130  02D2               	subwf	??_main+3,f
  1198     0131                     u1796:
  1199     0131  0852               	movf	??_main+3,w
  1200     0132  1D03               	btfss	3,2
  1201     0133  2942               	goto	u1801
  1202     0134  0851               	movf	??_main+2,w
  1203     0135  1D03               	btfss	3,2
  1204     0136  2942               	goto	u1801
  1205     0137  300F               	movlw	15
  1206     0138  0250               	subwf	??_main+1,w
  1207     0139  1D03               	skipz
  1208     013A  293F               	goto	u1803
  1209     013B  30A1               	movlw	161
  1210     013C  024F               	subwf	??_main,w
  1211     013D  1D03               	skipz
  1212     013E  293F               	goto	u1803
  1213     013F                     u1803:
  1214     013F  1803               	btfsc	3,0
  1215     0140  2942               	goto	u1801
  1216     0141  2943               	goto	u1800
  1217     0142                     u1801:
  1218     0142  2909               	goto	l2013
  1219     0143                     u1800:
  1220     0143                     l2017:
  1221                           
  1222                           ;main.c: 130:             lcd_out(1,1,"Wake up Ayman");
  1223     0143  1283               	bcf	3,5	;RP0=0, select bank0
  1224     0144  1303               	bcf	3,6	;RP1=0, select bank0
  1225     0145  01A5               	clrf	lcd_out@col
  1226     0146  0AA5               	incf	lcd_out@col,f
  1227     0147  3010               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1228     0148  00A6               	movwf	lcd_out@str
  1229     0149  3001               	movlw	1
  1230     014A  120A  118A  252E  120A  118A  	fcall	_lcd_out
  1231     014F                     l2019:
  1232                           
  1233                           ;main.c: 131:             my_delay(2000);
  1234     014F  3000               	movlw	0
  1235     0150  1283               	bcf	3,5	;RP0=0, select bank0
  1236     0151  1303               	bcf	3,6	;RP1=0, select bank0
  1237     0152  00A7               	movwf	my_delay@mytime+3
  1238     0153  3000               	movlw	0
  1239     0154  00A6               	movwf	my_delay@mytime+2
  1240     0155  3007               	movlw	7
  1241     0156  00A5               	movwf	my_delay@mytime+1
  1242     0157  30D0               	movlw	208
  1243     0158  00A4               	movwf	my_delay@mytime
  1244     0159  120A  118A  23F8  120A  118A  	fcall	_my_delay
  1245     015E                     l2021:
  1246                           
  1247                           ;main.c: 132:             timer0_time_passed_ms = 0 ;
  1248     015E  3000               	movlw	0
  1249     015F  1283               	bcf	3,5	;RP0=0, select bank0
  1250     0160  1303               	bcf	3,6	;RP1=0, select bank0
  1251     0161  00E0               	movwf	_timer0_time_passed_ms+3
  1252     0162  3000               	movlw	0
  1253     0163  00DF               	movwf	_timer0_time_passed_ms+2
  1254     0164  3000               	movlw	0
  1255     0165  00DE               	movwf	_timer0_time_passed_ms+1
  1256     0166  3000               	movlw	0
  1257     0167  00DD               	movwf	_timer0_time_passed_ms
  1258     0168                     l2023:
  1259                           
  1260                           ;main.c: 133:             lcd_cmd((0x01));
  1261     0168  3001               	movlw	1
  1262     0169  120A  118A  264C  120A  118A  	fcall	_lcd_cmd
  1263     016E                     l2025:
  1264                           
  1265                           ;main.c: 135:         end_time = timer_get_time_since_init();
  1266     016E  120A  118A  269D  120A  118A  	fcall	_timer_get_time_since_init
  1267     0173  1283               	bcf	3,5	;RP0=0, select bank0
  1268     0174  1303               	bcf	3,6	;RP1=0, select bank0
  1269     0175  0823               	movf	?_timer_get_time_since_init+3,w
  1270     0176  00DA               	movwf	main@end_time+3
  1271     0177  0822               	movf	?_timer_get_time_since_init+2,w
  1272     0178  00D9               	movwf	main@end_time+2
  1273     0179  0821               	movf	?_timer_get_time_since_init+1,w
  1274     017A  00D8               	movwf	main@end_time+1
  1275     017B  0820               	movf	?_timer_get_time_since_init,w
  1276     017C  00D7               	movwf	main@end_time
  1277     017D  2860               	goto	l1983
  1278     017E  120A  118A  280C   	ljmp	start
  1279     0181                     __end_of_main:
  1280                           
  1281                           	psect	text1
  1282     03F8                     __ptext1:	
  1283 ;; *************** function _my_delay *****************
  1284 ;; Defined at:
  1285 ;;		line 72 in file "main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  mytime          4    4[BANK0 ] unsigned long 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  end_time        4   12[BANK0 ] unsigned long 
  1290 ;;  start_time      4    8[BANK0 ] unsigned long 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       4       0       0       0
  1301 ;;      Locals:         0       8       0       0       0
  1302 ;;      Temps:          4       0       0       0       0
  1303 ;;      Totals:         4      12       0       0       0
  1304 ;;Total ram usage:       16 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 2
  1307 ;; This function calls:
  1308 ;;		_timer_get_time_since_init
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314     03F8                     _my_delay:	
  1315                           ;psect for function _my_delay
  1316                           
  1317     03F8                     l1949:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _my_delay: [wreg+pclath+cstack]
  1320                           
  1321                           
  1322                           ;main.c: 72: void my_delay(unsigned long mytime);main.c: 73: {;main.c: 74:     unsigned 
      +                          long start_time=0,end_time=0;
  1323     03F8  3000               	movlw	0
  1324     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1325     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1326     03FB  00AB               	movwf	my_delay@start_time+3
  1327     03FC  3000               	movlw	0
  1328     03FD  00AA               	movwf	my_delay@start_time+2
  1329     03FE  3000               	movlw	0
  1330     03FF  00A9               	movwf	my_delay@start_time+1
  1331     0400  3000               	movlw	0
  1332     0401  00A8               	movwf	my_delay@start_time
  1333     0402                     l1951:
  1334                           
  1335                           ;main.c: 75:     end_time = timer_get_time_since_init();
  1336     0402  120A  118A  269D  120A  118A  	fcall	_timer_get_time_since_init
  1337     0407  1283               	bcf	3,5	;RP0=0, select bank0
  1338     0408  1303               	bcf	3,6	;RP1=0, select bank0
  1339     0409  0823               	movf	?_timer_get_time_since_init+3,w
  1340     040A  00AF               	movwf	my_delay@end_time+3
  1341     040B  0822               	movf	?_timer_get_time_since_init+2,w
  1342     040C  00AE               	movwf	my_delay@end_time+2
  1343     040D  0821               	movf	?_timer_get_time_since_init+1,w
  1344     040E  00AD               	movwf	my_delay@end_time+1
  1345     040F  0820               	movf	?_timer_get_time_since_init,w
  1346     0410  00AC               	movwf	my_delay@end_time
  1347     0411                     l1955:	
  1348                           ;main.c: 76:     while(end_time-start_time<=mytime)
  1349                           
  1350                           
  1351                           ;main.c: 76:     while(end_time-start_time<=mytime)
  1352     0411  082C               	movf	my_delay@end_time,w
  1353     0412  00F2               	movwf	??_my_delay
  1354     0413  082D               	movf	my_delay@end_time+1,w
  1355     0414  00F3               	movwf	??_my_delay+1
  1356     0415  082E               	movf	my_delay@end_time+2,w
  1357     0416  00F4               	movwf	??_my_delay+2
  1358     0417  082F               	movf	my_delay@end_time+3,w
  1359     0418  00F5               	movwf	??_my_delay+3
  1360     0419  0828               	movf	my_delay@start_time,w
  1361     041A  02F2               	subwf	??_my_delay,f
  1362     041B  0829               	movf	my_delay@start_time+1,w
  1363     041C  1C03               	skipc
  1364     041D  0F29               	incfsz	my_delay@start_time+1,w
  1365     041E  2C20               	goto	u1671
  1366     041F  2C21               	goto	u1672
  1367     0420                     u1671:
  1368     0420  02F3               	subwf	??_my_delay+1,f
  1369     0421                     u1672:
  1370     0421  082A               	movf	my_delay@start_time+2,w
  1371     0422  1C03               	skipc
  1372     0423  0F2A               	incfsz	my_delay@start_time+2,w
  1373     0424  2C26               	goto	u1673
  1374     0425  2C27               	goto	u1674
  1375     0426                     u1673:
  1376     0426  02F4               	subwf	??_my_delay+2,f
  1377     0427                     u1674:
  1378     0427  082B               	movf	my_delay@start_time+3,w
  1379     0428  1C03               	skipc
  1380     0429  0F2B               	incfsz	my_delay@start_time+3,w
  1381     042A  2C2C               	goto	u1675
  1382     042B  2C2D               	goto	u1676
  1383     042C                     u1675:
  1384     042C  02F5               	subwf	??_my_delay+3,f
  1385     042D                     u1676:
  1386     042D  0875               	movf	??_my_delay+3,w
  1387     042E  0227               	subwf	my_delay@mytime+3,w
  1388     042F  1D03               	skipz
  1389     0430  2C3B               	goto	u1685
  1390     0431  0874               	movf	??_my_delay+2,w
  1391     0432  0226               	subwf	my_delay@mytime+2,w
  1392     0433  1D03               	skipz
  1393     0434  2C3B               	goto	u1685
  1394     0435  0873               	movf	??_my_delay+1,w
  1395     0436  0225               	subwf	my_delay@mytime+1,w
  1396     0437  1D03               	skipz
  1397     0438  2C3B               	goto	u1685
  1398     0439  0872               	movf	??_my_delay,w
  1399     043A  0224               	subwf	my_delay@mytime,w
  1400     043B                     u1685:
  1401     043B  1803               	skipnc
  1402     043C  2C3E               	goto	u1681
  1403     043D  2C3F               	goto	u1680
  1404     043E                     u1681:
  1405     043E  2C02               	goto	l1951
  1406     043F                     u1680:
  1407     043F                     l1957:
  1408                           
  1409                           ;main.c: 80:     timer0_time_passed_ms=0;
  1410     043F  3000               	movlw	0
  1411     0440  00E0               	movwf	_timer0_time_passed_ms+3
  1412     0441  3000               	movlw	0
  1413     0442  00DF               	movwf	_timer0_time_passed_ms+2
  1414     0443  3000               	movlw	0
  1415     0444  00DE               	movwf	_timer0_time_passed_ms+1
  1416     0445  3000               	movlw	0
  1417     0446  00DD               	movwf	_timer0_time_passed_ms
  1418     0447                     l58:
  1419     0447  0008               	return
  1420     0448                     __end_of_my_delay:
  1421                           
  1422                           	psect	text2
  1423     069D                     __ptext2:	
  1424 ;; *************** function _timer_get_time_since_init *****************
  1425 ;; Defined at:
  1426 ;;		line 41 in file "timer.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  4    0[BANK0 ] unsigned long 
  1433 ;; Registers used:
  1434 ;;		wreg
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       4       0       0       0
  1441 ;;      Locals:         0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0
  1443 ;;      Totals:         0       4       0       0       0
  1444 ;;Total ram usage:        4 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 1
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_my_delay
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455     069D                     _timer_get_time_since_init:	
  1456                           ;psect for function _timer_get_time_since_init
  1457                           
  1458     069D                     l1525:	
  1459                           ;incstack = 0
  1460                           ; Regs used in _timer_get_time_since_init: [wreg]
  1461                           
  1462                           
  1463                           ;timer.c: 43:     return timer0_time_passed_ms;
  1464     069D  1283               	bcf	3,5	;RP0=0, select bank0
  1465     069E  1303               	bcf	3,6	;RP1=0, select bank0
  1466     069F  0860               	movf	_timer0_time_passed_ms+3,w
  1467     06A0  00A3               	movwf	?_timer_get_time_since_init+3
  1468     06A1  085F               	movf	_timer0_time_passed_ms+2,w
  1469     06A2  00A2               	movwf	?_timer_get_time_since_init+2
  1470     06A3  085E               	movf	_timer0_time_passed_ms+1,w
  1471     06A4  00A1               	movwf	?_timer_get_time_since_init+1
  1472     06A5  085D               	movf	_timer0_time_passed_ms,w
  1473     06A6  00A0               	movwf	?_timer_get_time_since_init
  1474     06A7                     l185:
  1475     06A7  0008               	return
  1476     06A8                     __end_of_timer_get_time_since_init:
  1477                           
  1478                           	psect	text3
  1479     052E                     __ptext3:	
  1480 ;; *************** function _lcd_out *****************
  1481 ;; Defined at:
  1482 ;;		line 116 in file "lcd.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  row             1    wreg     unsigned char 
  1485 ;;  col             1    5[BANK0 ] unsigned char 
  1486 ;;  str             1    6[BANK0 ] PTR unsigned char 
  1487 ;;		 -> STR_4(14), STR_3(9), STR_2(15), 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  row             1    7[BANK0 ] unsigned char 
  1490 ;;  i               2    8[BANK0 ] int 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1500 ;;      Params:         0       2       0       0       0
  1501 ;;      Locals:         0       3       0       0       0
  1502 ;;      Temps:          0       0       0       0       0
  1503 ;;      Totals:         0       5       0       0       0
  1504 ;;Total ram usage:        5 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 4
  1507 ;; This function calls:
  1508 ;;		_LCD_Write_Char
  1509 ;;		_lcd_set_cursor
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515     052E                     _lcd_out:	
  1516                           ;psect for function _lcd_out
  1517                           
  1518                           
  1519                           ;incstack = 0
  1520                           ; Regs used in _lcd_out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1521                           ;lcd_out@row stored from wreg
  1522     052E  1283               	bcf	3,5	;RP0=0, select bank0
  1523     052F  1303               	bcf	3,6	;RP1=0, select bank0
  1524     0530  00A7               	movwf	lcd_out@row
  1525     0531                     l1959:
  1526                           
  1527                           ;lcd.c: 116: void lcd_out(unsigned char row, unsigned char col,char *str);lcd.c: 117: {;
      +                          lcd.c: 118:   int i;;lcd.c: 119:   lcd_set_cursor(row,col);
  1528     0531  0825               	movf	lcd_out@col,w
  1529     0532  00A0               	movwf	lcd_set_cursor@c
  1530     0533  0827               	movf	lcd_out@row,w
  1531     0534  120A  118A  2497  120A  118A  	fcall	_lcd_set_cursor
  1532     0539                     l1961:
  1533                           
  1534                           ;lcd.c: 120:   for(i=0;str[i]!='\0';i++)
  1535     0539  1283               	bcf	3,5	;RP0=0, select bank0
  1536     053A  1303               	bcf	3,6	;RP1=0, select bank0
  1537     053B  01A8               	clrf	lcd_out@i
  1538     053C  01A9               	clrf	lcd_out@i+1
  1539     053D  2D53               	goto	l1967
  1540     053E                     l1963:
  1541                           
  1542                           ;lcd.c: 121:     LCD_Write_Char(str[i]);
  1543     053E  0828               	movf	lcd_out@i,w
  1544     053F  0726               	addwf	lcd_out@str,w
  1545     0540  0084               	movwf	4
  1546     0541  120A  118A  2561  120A  118A  	fcall	stringdir
  1547     0546  120A  118A  2448  120A  118A  	fcall	_LCD_Write_Char
  1548     054B                     l1965:
  1549     054B  3001               	movlw	1
  1550     054C  1283               	bcf	3,5	;RP0=0, select bank0
  1551     054D  1303               	bcf	3,6	;RP1=0, select bank0
  1552     054E  07A8               	addwf	lcd_out@i,f
  1553     054F  1803               	skipnc
  1554     0550  0AA9               	incf	lcd_out@i+1,f
  1555     0551  3000               	movlw	0
  1556     0552  07A9               	addwf	lcd_out@i+1,f
  1557     0553                     l1967:
  1558     0553  0828               	movf	lcd_out@i,w
  1559     0554  0726               	addwf	lcd_out@str,w
  1560     0555  0084               	movwf	4
  1561     0556  120A  118A  2561  120A  118A  	fcall	stringdir
  1562     055B  3A00               	xorlw	0
  1563     055C  1D03               	skipz
  1564     055D  2D5F               	goto	u1691
  1565     055E  2D60               	goto	u1690
  1566     055F                     u1691:
  1567     055F  2D3E               	goto	l1963
  1568     0560                     u1690:
  1569     0560                     l150:
  1570     0560  0008               	return
  1571     0561                     __end_of_lcd_out:
  1572                           
  1573                           	psect	text4
  1574     0497                     __ptext4:	
  1575 ;; *************** function _lcd_set_cursor *****************
  1576 ;; Defined at:
  1577 ;;		line 87 in file "lcd.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  r               1    wreg     unsigned char 
  1580 ;;  c               1    0[BANK0 ] unsigned char 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  r               1    1[BANK0 ] unsigned char 
  1583 ;;  Temp            1    4[BANK0 ] unsigned char 
  1584 ;;  High4           1    3[BANK0 ] unsigned char 
  1585 ;;  Low4            1    2[BANK0 ] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       1       0       0       0
  1596 ;;      Locals:         0       4       0       0       0
  1597 ;;      Temps:          1       0       0       0       0
  1598 ;;      Totals:         1       5       0       0       0
  1599 ;;Total ram usage:        6 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 3
  1602 ;; This function calls:
  1603 ;;		_LCD_SEND_4BIT_CMD
  1604 ;; This function is called by:
  1605 ;;		_lcd_out
  1606 ;;		_lcd_chr
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610     0497                     _lcd_set_cursor:	
  1611                           ;psect for function _lcd_set_cursor
  1612                           
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1616                           ;lcd_set_cursor@r stored from wreg
  1617     0497  1283               	bcf	3,5	;RP0=0, select bank0
  1618     0498  1303               	bcf	3,6	;RP1=0, select bank0
  1619     0499  00A1               	movwf	lcd_set_cursor@r
  1620     049A                     l1911:
  1621                           
  1622                           ;lcd.c: 87: void lcd_set_cursor(unsigned char r, unsigned char c);lcd.c: 88: {;lcd.c: 89
      +                          :   unsigned char Temp,Low4,High4;;lcd.c: 90:   if(r == 1)
  1623     049A  0321               	decf	lcd_set_cursor@r,w
  1624     049B  1D03               	btfss	3,2
  1625     049C  2C9E               	goto	u1631
  1626     049D  2C9F               	goto	u1630
  1627     049E                     u1631:
  1628     049E  2CBD               	goto	l1921
  1629     049F                     u1630:
  1630     049F                     l1913:
  1631                           
  1632                           ;lcd.c: 91:   {;lcd.c: 92:     Temp = 0x80 + c - 1;
  1633     049F  0820               	movf	lcd_set_cursor@c,w
  1634     04A0  3E7F               	addlw	127
  1635     04A1  00A4               	movwf	lcd_set_cursor@Temp
  1636                           
  1637                           ;lcd.c: 93:     High4 = Temp >> 4;
  1638     04A2  0824               	movf	lcd_set_cursor@Temp,w
  1639     04A3  00F6               	movwf	??_lcd_set_cursor
  1640     04A4  3004               	movlw	4
  1641     04A5                     u1645:
  1642     04A5  1003               	clrc
  1643     04A6  0CF6               	rrf	??_lcd_set_cursor,f
  1644     04A7  3EFF               	addlw	-1
  1645     04A8  1D03               	skipz
  1646     04A9  2CA5               	goto	u1645
  1647     04AA  0876               	movf	??_lcd_set_cursor,w
  1648     04AB  00A3               	movwf	lcd_set_cursor@High4
  1649     04AC                     l1915:
  1650                           
  1651                           ;lcd.c: 94:     Low4 = Temp & 0x0F;
  1652     04AC  0824               	movf	lcd_set_cursor@Temp,w
  1653     04AD  390F               	andlw	15
  1654     04AE  00A2               	movwf	lcd_set_cursor@Low4
  1655     04AF                     l1917:
  1656                           
  1657                           ;lcd.c: 95:     LCD_SEND_4BIT_CMD(High4);
  1658     04AF  0823               	movf	lcd_set_cursor@High4,w
  1659     04B0  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1660     04B5                     l1919:
  1661                           
  1662                           ;lcd.c: 96:     LCD_SEND_4BIT_CMD(Low4);
  1663     04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1664     04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1665     04B7  0822               	movf	lcd_set_cursor@Low4,w
  1666     04B8  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1667     04BD                     l1921:
  1668                           
  1669                           ;lcd.c: 98:   if(r == 2)
  1670     04BD  3002               	movlw	2
  1671     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  1672     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  1673     04C0  0621               	xorwf	lcd_set_cursor@r,w
  1674     04C1  1D03               	btfss	3,2
  1675     04C2  2CC4               	goto	u1651
  1676     04C3  2CC5               	goto	u1650
  1677     04C4                     u1651:
  1678     04C4  2CE3               	goto	l138
  1679     04C5                     u1650:
  1680     04C5                     l1923:
  1681                           
  1682                           ;lcd.c: 99:   {;lcd.c: 100:     Temp = 0xC0 + c - 1;
  1683     04C5  0820               	movf	lcd_set_cursor@c,w
  1684     04C6  3EBF               	addlw	191
  1685     04C7  00A4               	movwf	lcd_set_cursor@Temp
  1686                           
  1687                           ;lcd.c: 101:     High4 = Temp >> 4;
  1688     04C8  0824               	movf	lcd_set_cursor@Temp,w
  1689     04C9  00F6               	movwf	??_lcd_set_cursor
  1690     04CA  3004               	movlw	4
  1691     04CB                     u1665:
  1692     04CB  1003               	clrc
  1693     04CC  0CF6               	rrf	??_lcd_set_cursor,f
  1694     04CD  3EFF               	addlw	-1
  1695     04CE  1D03               	skipz
  1696     04CF  2CCB               	goto	u1665
  1697     04D0  0876               	movf	??_lcd_set_cursor,w
  1698     04D1  00A3               	movwf	lcd_set_cursor@High4
  1699     04D2                     l1925:
  1700                           
  1701                           ;lcd.c: 102:     Low4 = Temp & 0x0F;
  1702     04D2  0824               	movf	lcd_set_cursor@Temp,w
  1703     04D3  390F               	andlw	15
  1704     04D4  00A2               	movwf	lcd_set_cursor@Low4
  1705     04D5                     l1927:
  1706                           
  1707                           ;lcd.c: 103:     LCD_SEND_4BIT_CMD(High4);
  1708     04D5  0823               	movf	lcd_set_cursor@High4,w
  1709     04D6  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1710     04DB                     l1929:
  1711                           
  1712                           ;lcd.c: 104:     LCD_SEND_4BIT_CMD(Low4);
  1713     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1714     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1715     04DD  0822               	movf	lcd_set_cursor@Low4,w
  1716     04DE  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1717     04E3                     l138:
  1718     04E3  0008               	return
  1719     04E4                     __end_of_lcd_set_cursor:
  1720                           
  1721                           	psect	text5
  1722     0664                     __ptext5:	
  1723 ;; *************** function _Print *****************
  1724 ;; Defined at:
  1725 ;;		line 40 in file "main.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  mynum           2   36[BANK0 ] int 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  My_Buffer       9   38[BANK0 ] unsigned char [9]
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       2       0       0       0
  1740 ;;      Locals:         0       9       0       0       0
  1741 ;;      Temps:          0       0       0       0       0
  1742 ;;      Totals:         0      11       0       0       0
  1743 ;;Total ram usage:       11 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 6
  1746 ;; This function calls:
  1747 ;;		_lcd_out_cp
  1748 ;;		_sprintf
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754     0664                     _Print:	
  1755                           ;psect for function _Print
  1756                           
  1757     0664                     l1945:	
  1758                           ;incstack = 0
  1759                           ; Regs used in _Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1760                           
  1761                           
  1762                           ;main.c: 40: void Print(int mynum);main.c: 41: {;main.c: 42:     char My_Buffer[9];;main
      +                          .c: 43:     sprintf(My_Buffer,"%d",mynum);
  1763     0664  3027               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1764     0665  1283               	bcf	3,5	;RP0=0, select bank0
  1765     0666  1303               	bcf	3,6	;RP1=0, select bank0
  1766     0667  00B4               	movwf	sprintf@fmt
  1767     0668  0845               	movf	Print@mynum+1,w
  1768     0669  00B6               	movwf	?_sprintf+2
  1769     066A  0844               	movf	Print@mynum,w
  1770     066B  00B5               	movwf	?_sprintf+1
  1771     066C  3046               	movlw	(low (Print@My_Buffer| 0))& (0+255)
  1772     066D  120A  118A  25F8  120A  118A  	fcall	_sprintf
  1773     0672                     l1947:
  1774                           
  1775                           ;main.c: 44:     lcd_out_cp(My_Buffer);
  1776     0672  3046               	movlw	(low (Print@My_Buffer| 0))& (0+255)
  1777     0673  120A  118A  2590  120A  118A  	fcall	_lcd_out_cp
  1778     0678                     l44:
  1779     0678  0008               	return
  1780     0679                     __end_of_Print:
  1781                           
  1782                           	psect	text6
  1783     05F8                     __ptext6:	
  1784 ;; *************** function _sprintf *****************
  1785 ;; Defined at:
  1786 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  s               1    wreg     PTR unsigned char 
  1789 ;;		 -> Print@My_Buffer(9), 
  1790 ;;  fmt             1   20[BANK0 ] PTR const unsigned char 
  1791 ;;		 -> STR_1(3), 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  s               1   24[BANK0 ] PTR unsigned char 
  1794 ;;		 -> Print@My_Buffer(9), 
  1795 ;;  f              11   25[BANK0 ] struct _IO_FILE
  1796 ;;  ret             2    0        int 
  1797 ;;  ap              1   23[BANK0 ] PTR void [1]
  1798 ;;		 -> ?_sprintf(2), 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2   20[BANK0 ] int 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       3       0       0       0
  1809 ;;      Locals:         0      13       0       0       0
  1810 ;;      Temps:          1       0       0       0       0
  1811 ;;      Totals:         1      16       0       0       0
  1812 ;;Total ram usage:       17 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 5
  1815 ;; This function calls:
  1816 ;;		_vfprintf
  1817 ;; This function is called by:
  1818 ;;		_Print
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822     05F8                     _sprintf:	
  1823                           ;psect for function _sprintf
  1824                           
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1828                           ;sprintf@s stored from wreg
  1829     05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1830     05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1831     05FA  00B8               	movwf	sprintf@s
  1832     05FB                     l1891:
  1833     05FB  3035               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1834     05FC  00B7               	movwf	sprintf@ap
  1835     05FD  0838               	movf	sprintf@s,w
  1836     05FE  00B9               	movwf	sprintf@f
  1837     05FF                     l1893:
  1838     05FF  01BB               	clrf	sprintf@f+2
  1839     0600  01BC               	clrf	sprintf@f+3
  1840     0601                     l1895:
  1841     0601  01C2               	clrf	sprintf@f+9
  1842     0602  01C3               	clrf	sprintf@f+10
  1843     0603                     l1897:
  1844     0603  0834               	movf	sprintf@fmt,w
  1845     0604  00B0               	movwf	vfprintf@fmt
  1846     0605  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  1847     0606  00B1               	movwf	vfprintf@ap
  1848     0607  3039               	movlw	(low (sprintf@f| 0))& (0+255)
  1849     0608  120A  118A  25D7  120A  118A  	fcall	_vfprintf
  1850     060D                     l1899:
  1851     060D  1283               	bcf	3,5	;RP0=0, select bank0
  1852     060E  1303               	bcf	3,6	;RP1=0, select bank0
  1853     060F  083B               	movf	sprintf@f+2,w
  1854     0610  0738               	addwf	sprintf@s,w
  1855     0611  00F9               	movwf	??_sprintf
  1856     0612  0879               	movf	??_sprintf,w
  1857     0613  0084               	movwf	4
  1858     0614  1383               	bcf	3,7	;select IRP bank0
  1859     0615  0180               	clrf	0
  1860     0616                     l737:
  1861     0616  0008               	return
  1862     0617                     __end_of_sprintf:
  1863                           
  1864                           	psect	text7
  1865     05D7                     __ptext7:	
  1866 ;; *************** function _vfprintf *****************
  1867 ;; Defined at:
  1868 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  fp              1    wreg     PTR struct _IO_FILE
  1871 ;;		 -> sprintf@f(11), 
  1872 ;;  fmt             1   16[BANK0 ] PTR const unsigned char 
  1873 ;;		 -> STR_1(3), 
  1874 ;;  ap              1   17[BANK0 ] PTR PTR void 
  1875 ;;		 -> sprintf@ap(1), 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  fp              1   18[BANK0 ] PTR struct _IO_FILE
  1878 ;;		 -> sprintf@f(11), 
  1879 ;;  cfmt            1   19[BANK0 ] PTR unsigned char 
  1880 ;;		 -> STR_1(3), 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  2   16[BANK0 ] int 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       2       0       0       0
  1891 ;;      Locals:         0       2       0       0       0
  1892 ;;      Temps:          0       0       0       0       0
  1893 ;;      Totals:         0       4       0       0       0
  1894 ;;Total ram usage:        4 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 4
  1897 ;; This function calls:
  1898 ;;		_vfpfcnvrt
  1899 ;; This function is called by:
  1900 ;;		_sprintf
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904     05D7                     _vfprintf:	
  1905                           ;psect for function _vfprintf
  1906                           
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1910                           ;vfprintf@fp stored from wreg
  1911     05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1912     05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1913     05D9  00B2               	movwf	vfprintf@fp
  1914     05DA                     l1851:
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1917     05DA  0830               	movf	vfprintf@fmt,w
  1918     05DB  00B3               	movwf	vfprintf@cfmt
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1921     05DC  2DE7               	goto	l1855
  1922     05DD                     l1853:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1925     05DD  3033               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1926     05DE  00A6               	movwf	vfpfcnvrt@fmt
  1927     05DF  0831               	movf	vfprintf@ap,w
  1928     05E0  00A7               	movwf	vfpfcnvrt@ap
  1929     05E1  0832               	movf	vfprintf@fp,w
  1930     05E2  120A  118A  2181  120A  118A  	fcall	_vfpfcnvrt
  1931     05E7                     l1855:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1934     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1935     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1936     05E9  0833               	movf	vfprintf@cfmt,w
  1937     05EA  0084               	movwf	4
  1938     05EB  120A  118A  2561  120A  118A  	fcall	stringdir
  1939     05F0  3A00               	xorlw	0
  1940     05F1  1D03               	skipz
  1941     05F2  2DF4               	goto	u1601
  1942     05F3  2DF5               	goto	u1600
  1943     05F4                     u1601:
  1944     05F4  2DDD               	goto	l1853
  1945     05F5                     u1600:
  1946     05F5                     l1857:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1949     05F5  01B0               	clrf	?_vfprintf
  1950     05F6  01B1               	clrf	?_vfprintf+1
  1951     05F7                     l781:
  1952     05F7  0008               	return
  1953     05F8                     __end_of_vfprintf:
  1954                           
  1955                           	psect	text8
  1956     0181                     __ptext8:	
  1957 ;; *************** function _vfpfcnvrt *****************
  1958 ;; Defined at:
  1959 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  fp              1    wreg     PTR struct _IO_FILE
  1962 ;;		 -> sprintf@f(11), 
  1963 ;;  fmt             1    6[BANK0 ] PTR PTR unsigned char 
  1964 ;;		 -> vfprintf@cfmt(1), 
  1965 ;;  ap              1    7[BANK0 ] PTR PTR void 
  1966 ;;		 -> sprintf@ap(1), 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  1969 ;;		 -> sprintf@f(11), 
  1970 ;;  convarg         4   11[BANK0 ] struct .
  1971 ;;  c               1   15[BANK0 ] unsigned char 
  1972 ;;  cp              1   10[BANK0 ] PTR unsigned char 
  1973 ;;		 -> STR_1(3), 
  1974 ;;  done            1    8[BANK0 ] _Bool 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         0       2       0       0       0
  1985 ;;      Locals:         0       8       0       0       0
  1986 ;;      Temps:          2       0       0       0       0
  1987 ;;      Totals:         2      10       0       0       0
  1988 ;;Total ram usage:       12 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 3
  1991 ;; This function calls:
  1992 ;;		___awdiv
  1993 ;;		___awmod
  1994 ;;		_abs
  1995 ;;		_fputc
  1996 ;; This function is called by:
  1997 ;;		_vfprintf
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001     0181                     _vfpfcnvrt:	
  2002                           ;psect for function _vfpfcnvrt
  2003                           
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2007                           ;vfpfcnvrt@fp stored from wreg
  2008     0181  1283               	bcf	3,5	;RP0=0, select bank0
  2009     0182  1303               	bcf	3,6	;RP1=0, select bank0
  2010     0183  00A9               	movwf	vfpfcnvrt@fp
  2011     0184                     l1765:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2014     0184  0826               	movf	vfpfcnvrt@fmt,w
  2015     0185  0084               	movwf	4
  2016     0186  1383               	bcf	3,7	;select IRP bank0
  2017     0187  0800               	movf	0,w
  2018     0188  0084               	movwf	4
  2019     0189  120A  118A  2561  120A  118A  	fcall	stringdir
  2020     018E  3A25               	xorlw	37
  2021     018F  1D03               	skipz
  2022     0190  2992               	goto	u1491
  2023     0191  2993               	goto	u1490
  2024     0192                     u1491:
  2025     0192  2A58               	goto	l1811
  2026     0193                     u1490:
  2027     0193                     l1767:
  2028                           
  2029                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2030     0193  3001               	movlw	1
  2031     0194  00FF               	movwf	btemp+1
  2032     0195  0826               	movf	vfpfcnvrt@fmt,w
  2033     0196  0084               	movwf	4
  2034     0197  087F               	movf	btemp+1,w
  2035     0198  0780               	addwf	0,f
  2036     0199                     l1769:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2039     0199  01E1               	clrf	_width
  2040     019A  01E2               	clrf	_width+1
  2041     019B  1003               	clrc
  2042     019C  3000               	movlw	0
  2043     019D  1803               	btfsc	3,0
  2044     019E  3001               	movlw	1
  2045     019F  00E5               	movwf	_flags
  2046     01A0                     l1771:
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2049     01A0  30FF               	movlw	255
  2050     01A1  00E3               	movwf	_prec
  2051     01A2  30FF               	movlw	255
  2052     01A3  00E4               	movwf	_prec+1
  2053     01A4                     l1773:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2056     01A4  0826               	movf	vfpfcnvrt@fmt,w
  2057     01A5  0084               	movwf	4
  2058     01A6  0800               	movf	0,w
  2059     01A7  00AA               	movwf	vfpfcnvrt@cp
  2060     01A8                     l1775:
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2063     01A8  082A               	movf	vfpfcnvrt@cp,w
  2064     01A9  0084               	movwf	4
  2065     01AA  120A  118A  2561  120A  118A  	fcall	stringdir
  2066     01AF  3A64               	xorlw	100
  2067     01B0  1903               	skipnz
  2068     01B1  29B3               	goto	u1501
  2069     01B2  29B4               	goto	u1500
  2070     01B3                     u1501:
  2071     01B3  29C0               	goto	l1779
  2072     01B4                     u1500:
  2073     01B4                     l1777:
  2074     01B4  082A               	movf	vfpfcnvrt@cp,w
  2075     01B5  0084               	movwf	4
  2076     01B6  120A  118A  2561  120A  118A  	fcall	stringdir
  2077     01BB  3A69               	xorlw	105
  2078     01BC  1D03               	skipz
  2079     01BD  29BF               	goto	u1511
  2080     01BE  29C0               	goto	u1510
  2081     01BF                     u1511:
  2082     01BF  2A4E               	goto	l1807
  2083     01C0                     u1510:
  2084     01C0                     l1779:
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2087     01C0  0827               	movf	vfpfcnvrt@ap,w
  2088     01C1  0084               	movwf	4
  2089     01C2  0800               	movf	0,w
  2090     01C3  00FF               	movwf	btemp+1
  2091     01C4  3002               	movlw	2
  2092     01C5  0780               	addwf	0,f
  2093     01C6  087F               	movf	btemp+1,w
  2094     01C7  0084               	movwf	4
  2095     01C8  0800               	movf	0,w
  2096     01C9  00AB               	movwf	vfpfcnvrt@convarg
  2097     01CA  0A84               	incf	4,f
  2098     01CB  0800               	movf	0,w
  2099     01CC  00AC               	movwf	vfpfcnvrt@convarg+1
  2100     01CD                     l1781:
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2103     01CD  0826               	movf	vfpfcnvrt@fmt,w
  2104     01CE  0084               	movwf	4
  2105     01CF  082A               	movf	vfpfcnvrt@cp,w
  2106     01D0  3E01               	addlw	1
  2107     01D1  0080               	movwf	0
  2108     01D2                     l1783:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2111     01D2  3020               	movlw	32
  2112     01D3  00AF               	movwf	vfpfcnvrt@c
  2113     01D4                     l1785:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2116     01D4  1BAC               	btfsc	vfpfcnvrt@convarg+1,7
  2117     01D5  29D7               	goto	u1521
  2118     01D6  29D9               	goto	u1520
  2119     01D7                     u1521:
  2120     01D7  3001               	movlw	1
  2121     01D8  29DA               	goto	u1530
  2122     01D9                     u1520:
  2123     01D9  3000               	movlw	0
  2124     01DA                     u1530:
  2125     01DA  00A8               	movwf	vfpfcnvrt@done
  2126     01DB                     l1787:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2129     01DB  3001               	movlw	1
  2130     01DC  02AF               	subwf	vfpfcnvrt@c,f
  2131     01DD  082F               	movf	vfpfcnvrt@c,w
  2132     01DE  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2133     01DF  0084               	movwf	4
  2134     01E0  300A               	movlw	10
  2135     01E1  00A0               	movwf	___awmod@divisor
  2136     01E2  3000               	movlw	0
  2137     01E3  00A1               	movwf	___awmod@divisor+1
  2138     01E4  082C               	movf	vfpfcnvrt@convarg+1,w
  2139     01E5  00A3               	movwf	___awmod@dividend+1
  2140     01E6  082B               	movf	vfpfcnvrt@convarg,w
  2141     01E7  00A2               	movwf	___awmod@dividend
  2142     01E8  120A  118A  2343  120A  118A  	fcall	___awmod
  2143     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2144     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2145     01EF  0821               	movf	?___awmod+1,w
  2146     01F0  00A5               	movwf	abs@a+1
  2147     01F1  0820               	movf	?___awmod,w
  2148     01F2  00A4               	movwf	abs@a
  2149     01F3  120A  118A  2679  120A  118A  	fcall	_abs
  2150     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2151     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2152     01FA  0824               	movf	?_abs,w
  2153     01FB  3E30               	addlw	48
  2154     01FC  1383               	bcf	3,7	;select IRP bank1
  2155     01FD  0080               	movwf	0
  2156     01FE                     l1789:
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2159     01FE  300A               	movlw	10
  2160     01FF  00A0               	movwf	___awdiv@divisor
  2161     0200  3000               	movlw	0
  2162     0201  00A1               	movwf	___awdiv@divisor+1
  2163     0202  082C               	movf	vfpfcnvrt@convarg+1,w
  2164     0203  00A3               	movwf	___awdiv@dividend+1
  2165     0204  082B               	movf	vfpfcnvrt@convarg,w
  2166     0205  00A2               	movwf	___awdiv@dividend
  2167     0206  120A  118A  22DA  120A  118A  	fcall	___awdiv
  2168     020B  1283               	bcf	3,5	;RP0=0, select bank0
  2169     020C  1303               	bcf	3,6	;RP1=0, select bank0
  2170     020D  0821               	movf	?___awdiv+1,w
  2171     020E  00AC               	movwf	vfpfcnvrt@convarg+1
  2172     020F  0820               	movf	?___awdiv,w
  2173     0210  00AB               	movwf	vfpfcnvrt@convarg
  2174     0211                     l1791:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2177     0211  082B               	movf	vfpfcnvrt@convarg,w
  2178     0212  042C               	iorwf	vfpfcnvrt@convarg+1,w
  2179     0213  1903               	btfsc	3,2
  2180     0214  2A16               	goto	u1541
  2181     0215  2A17               	goto	u1540
  2182     0216                     u1541:
  2183     0216  2A1C               	goto	l1795
  2184     0217                     u1540:
  2185     0217                     l1793:
  2186     0217  082F               	movf	vfpfcnvrt@c,w
  2187     0218  1D03               	btfss	3,2
  2188     0219  2A1B               	goto	u1551
  2189     021A  2A1C               	goto	u1550
  2190     021B                     u1551:
  2191     021B  29DB               	goto	l1787
  2192     021C                     u1550:
  2193     021C                     l1795:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2196     021C  082F               	movf	vfpfcnvrt@c,w
  2197     021D  1903               	btfsc	3,2
  2198     021E  2A20               	goto	u1561
  2199     021F  2A21               	goto	u1560
  2200     0220                     u1561:
  2201     0220  2A47               	goto	l1805
  2202     0221                     u1560:
  2203     0221                     l1797:
  2204     0221  0828               	movf	vfpfcnvrt@done,w
  2205     0222  1903               	btfsc	3,2
  2206     0223  2A25               	goto	u1571
  2207     0224  2A26               	goto	u1570
  2208     0225                     u1571:
  2209     0225  2A47               	goto	l1805
  2210     0226                     u1570:
  2211     0226                     l1799:
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2214     0226  3001               	movlw	1
  2215     0227  02AF               	subwf	vfpfcnvrt@c,f
  2216     0228  082F               	movf	vfpfcnvrt@c,w
  2217     0229  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2218     022A  0084               	movwf	4
  2219     022B  302D               	movlw	45
  2220     022C  1383               	bcf	3,7	;select IRP bank1
  2221     022D  0080               	movwf	0
  2222     022E  2A47               	goto	l1805
  2223     022F                     l1801:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2226     022F  082F               	movf	vfpfcnvrt@c,w
  2227     0230  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2228     0231  0084               	movwf	4
  2229     0232  1383               	bcf	3,7	;select IRP bank1
  2230     0233  0800               	movf	0,w
  2231     0234  00F7               	movwf	??_vfpfcnvrt
  2232     0235  01F8               	clrf	??_vfpfcnvrt+1
  2233     0236  0877               	movf	??_vfpfcnvrt,w
  2234     0237  00A0               	movwf	fputc@c
  2235     0238  0878               	movf	??_vfpfcnvrt+1,w
  2236     0239  00A1               	movwf	fputc@c+1
  2237     023A  0829               	movf	vfpfcnvrt@fp,w
  2238     023B  00A2               	movwf	fputc@fp
  2239     023C  120A  118A  239E  120A  118A  	fcall	_fputc
  2240     0241                     l1803:
  2241     0241  3001               	movlw	1
  2242     0242  00FF               	movwf	btemp+1
  2243     0243  087F               	movf	btemp+1,w
  2244     0244  1283               	bcf	3,5	;RP0=0, select bank0
  2245     0245  1303               	bcf	3,6	;RP1=0, select bank0
  2246     0246  07AF               	addwf	vfpfcnvrt@c,f
  2247     0247                     l1805:
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2250     0247  3020               	movlw	32
  2251     0248  062F               	xorwf	vfpfcnvrt@c,w
  2252     0249  1D03               	btfss	3,2
  2253     024A  2A4C               	goto	u1581
  2254     024B  2A4D               	goto	u1580
  2255     024C                     u1581:
  2256     024C  2A2F               	goto	l1801
  2257     024D                     u1580:
  2258     024D  2A6F               	goto	l775
  2259     024E                     l1807:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2262     024E  3001               	movlw	1
  2263     024F  00FF               	movwf	btemp+1
  2264     0250  1283               	bcf	3,5	;RP0=0, select bank0
  2265     0251  1303               	bcf	3,6	;RP1=0, select bank0
  2266     0252  0826               	movf	vfpfcnvrt@fmt,w
  2267     0253  0084               	movwf	4
  2268     0254  087F               	movf	btemp+1,w
  2269     0255  1383               	bcf	3,7	;select IRP bank0
  2270     0256  0780               	addwf	0,f
  2271     0257  2A6F               	goto	l775
  2272     0258                     l1811:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2275     0258  0826               	movf	vfpfcnvrt@fmt,w
  2276     0259  0084               	movwf	4
  2277     025A  0800               	movf	0,w
  2278     025B  0084               	movwf	4
  2279     025C  120A  118A  2561  120A  118A  	fcall	stringdir
  2280     0261  00F7               	movwf	??_vfpfcnvrt
  2281     0262  01F8               	clrf	??_vfpfcnvrt+1
  2282     0263  0877               	movf	??_vfpfcnvrt,w
  2283     0264  00A0               	movwf	fputc@c
  2284     0265  0878               	movf	??_vfpfcnvrt+1,w
  2285     0266  00A1               	movwf	fputc@c+1
  2286     0267  0829               	movf	vfpfcnvrt@fp,w
  2287     0268  00A2               	movwf	fputc@fp
  2288     0269  120A  118A  239E  120A  118A  	fcall	_fputc
  2289     026E  2A4E               	goto	l1807
  2290     026F                     l775:
  2291     026F  0008               	return
  2292     0270                     __end_of_vfpfcnvrt:
  2293                           
  2294                           	psect	text9
  2295     039E                     __ptext9:	
  2296 ;; *************** function _fputc *****************
  2297 ;; Defined at:
  2298 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  c               2    0[BANK0 ] int 
  2301 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  2302 ;;		 -> sprintf@f(11), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  2    0[BANK0 ] int 
  2307 ;; Registers used:
  2308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2314 ;;      Params:         0       3       0       0       0
  2315 ;;      Locals:         0       0       0       0       0
  2316 ;;      Temps:          5       0       0       0       0
  2317 ;;      Totals:         5       3       0       0       0
  2318 ;;Total ram usage:        8 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 2
  2321 ;; This function calls:
  2322 ;;		_putch
  2323 ;; This function is called by:
  2324 ;;		_vfpfcnvrt
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328     039E                     _fputc:	
  2329                           ;psect for function _fputc
  2330                           
  2331     039E                     l1733:	
  2332                           ;incstack = 0
  2333                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2334                           
  2335     039E  1283               	bcf	3,5	;RP0=0, select bank0
  2336     039F  1303               	bcf	3,6	;RP1=0, select bank0
  2337     03A0  0822               	movf	fputc@fp,w
  2338     03A1  1903               	btfsc	3,2
  2339     03A2  2BA4               	goto	u1401
  2340     03A3  2BA5               	goto	u1400
  2341     03A4                     u1401:
  2342     03A4  2BAA               	goto	l1737
  2343     03A5                     u1400:
  2344     03A5                     l1735:
  2345     03A5  0822               	movf	fputc@fp,w
  2346     03A6  1D03               	btfss	3,2
  2347     03A7  2BA9               	goto	u1411
  2348     03A8  2BAA               	goto	u1410
  2349     03A9                     u1411:
  2350     03A9  2BB1               	goto	l1739
  2351     03AA                     u1410:
  2352     03AA                     l1737:
  2353     03AA  0820               	movf	fputc@c,w
  2354     03AB  120A  118A  26B0  120A  118A  	fcall	_putch
  2355     03B0  2BF7               	goto	l800
  2356     03B1                     l1739:
  2357     03B1  0822               	movf	fputc@fp,w
  2358     03B2  3E09               	addlw	9
  2359     03B3  0084               	movwf	4
  2360     03B4  1383               	bcf	3,7	;select IRP bank0
  2361     03B5  0800               	movf	0,w
  2362     03B6  00F2               	movwf	??_fputc
  2363     03B7  0A84               	incf	4,f
  2364     03B8  0800               	movf	0,w
  2365     03B9  00F3               	movwf	??_fputc+1
  2366     03BA  0872               	movf	??_fputc,w
  2367     03BB  0473               	iorwf	??_fputc+1,w
  2368     03BC  1903               	btfsc	3,2
  2369     03BD  2BBF               	goto	u1421
  2370     03BE  2BC0               	goto	u1420
  2371     03BF                     u1421:
  2372     03BF  2BDE               	goto	l1743
  2373     03C0                     u1420:
  2374     03C0                     l1741:
  2375     03C0  0822               	movf	fputc@fp,w
  2376     03C1  3E09               	addlw	9
  2377     03C2  0084               	movwf	4
  2378     03C3  0800               	movf	0,w
  2379     03C4  00F2               	movwf	??_fputc
  2380     03C5  0A84               	incf	4,f
  2381     03C6  0800               	movf	0,w
  2382     03C7  00F3               	movwf	??_fputc+1
  2383     03C8  0822               	movf	fputc@fp,w
  2384     03C9  3E02               	addlw	2
  2385     03CA  0084               	movwf	4
  2386     03CB  0800               	movf	0,w
  2387     03CC  00F4               	movwf	??_fputc+2
  2388     03CD  0A84               	incf	4,f
  2389     03CE  0800               	movf	0,w
  2390     03CF  00F5               	movwf	??_fputc+3
  2391     03D0  0875               	movf	??_fputc+3,w
  2392     03D1  3A80               	xorlw	128
  2393     03D2  00F6               	movwf	??_fputc+4
  2394     03D3  0873               	movf	??_fputc+1,w
  2395     03D4  3A80               	xorlw	128
  2396     03D5  0276               	subwf	??_fputc+4,w
  2397     03D6  1D03               	skipz
  2398     03D7  2BDA               	goto	u1435
  2399     03D8  0872               	movf	??_fputc,w
  2400     03D9  0274               	subwf	??_fputc+2,w
  2401     03DA                     u1435:
  2402     03DA  1803               	skipnc
  2403     03DB  2BDD               	goto	u1431
  2404     03DC  2BDE               	goto	u1430
  2405     03DD                     u1431:
  2406     03DD  2BF7               	goto	l800
  2407     03DE                     u1430:
  2408     03DE                     l1743:
  2409     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2410     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2411     03E0  0822               	movf	fputc@fp,w
  2412     03E1  3E02               	addlw	2
  2413     03E2  0084               	movwf	4
  2414     03E3  1383               	bcf	3,7	;select IRP bank0
  2415     03E4  0800               	movf	0,w
  2416     03E5  00F2               	movwf	??_fputc
  2417     03E6  0822               	movf	fputc@fp,w
  2418     03E7  0084               	movwf	4
  2419     03E8  0800               	movf	0,w
  2420     03E9  0772               	addwf	??_fputc,w
  2421     03EA  00F3               	movwf	??_fputc+1
  2422     03EB  0873               	movf	??_fputc+1,w
  2423     03EC  0084               	movwf	4
  2424     03ED  0820               	movf	fputc@c,w
  2425     03EE  0080               	movwf	0
  2426     03EF  0822               	movf	fputc@fp,w
  2427     03F0  3E02               	addlw	2
  2428     03F1  0084               	movwf	4
  2429     03F2  3001               	movlw	1
  2430     03F3  0780               	addwf	0,f
  2431     03F4  0A84               	incf	4,f
  2432     03F5  1803               	skipnc
  2433     03F6  0A80               	incf	0,f
  2434     03F7                     l800:
  2435     03F7  0008               	return
  2436     03F8                     __end_of_fputc:
  2437                           
  2438                           	psect	text10
  2439     06B0                     __ptext10:	
  2440 ;; *************** function _putch *****************
  2441 ;; Defined at:
  2442 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  c               1    wreg     unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  c               1    0[COMMON] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2456 ;;      Params:         0       0       0       0       0
  2457 ;;      Locals:         0       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0
  2459 ;;      Totals:         0       0       0       0       0
  2460 ;;Total ram usage:        0 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_fputc
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470     06B0                     _putch:	
  2471                           ;psect for function _putch
  2472                           
  2473     06B0                     l811:	
  2474                           ;incstack = 0
  2475                           ; Regs used in _putch: [wreg]
  2476                           
  2477     06B0  0008               	return
  2478     06B1                     __end_of_putch:
  2479                           
  2480                           	psect	text11
  2481     0679                     __ptext11:	
  2482 ;; *************** function _abs *****************
  2483 ;; Defined at:
  2484 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  a               2    4[BANK0 ] int 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  2    4[BANK0 ] int 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2498 ;;      Params:         0       2       0       0       0
  2499 ;;      Locals:         0       0       0       0       0
  2500 ;;      Temps:          2       0       0       0       0
  2501 ;;      Totals:         2       2       0       0       0
  2502 ;;Total ram usage:        4 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 1
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_vfpfcnvrt
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512     0679                     _abs:	
  2513                           ;psect for function _abs
  2514                           
  2515     0679                     l1747:	
  2516                           ;incstack = 0
  2517                           ; Regs used in _abs: [wreg+status,2+status,0]
  2518                           
  2519     0679  1283               	bcf	3,5	;RP0=0, select bank0
  2520     067A  1303               	bcf	3,6	;RP1=0, select bank0
  2521     067B  1BA5               	btfsc	abs@a+1,7
  2522     067C  2E7E               	goto	u1441
  2523     067D  2E7F               	goto	u1440
  2524     067E                     u1441:
  2525     067E  2E80               	goto	l1751
  2526     067F                     u1440:
  2527     067F                     l1749:
  2528     067F  2E8B               	goto	l788
  2529     0680                     l1751:
  2530     0680  0924               	comf	abs@a,w
  2531     0681  00F4               	movwf	??_abs
  2532     0682  0925               	comf	abs@a+1,w
  2533     0683  00F5               	movwf	??_abs+1
  2534     0684  0AF4               	incf	??_abs,f
  2535     0685  1903               	skipnz
  2536     0686  0AF5               	incf	??_abs+1,f
  2537     0687  0874               	movf	??_abs,w
  2538     0688  00A4               	movwf	?_abs
  2539     0689  0875               	movf	??_abs+1,w
  2540     068A  00A5               	movwf	?_abs+1
  2541     068B                     l788:
  2542     068B  0008               	return
  2543     068C                     __end_of_abs:
  2544                           
  2545                           	psect	text12
  2546     0343                     __ptext12:	
  2547 ;; *************** function ___awmod *****************
  2548 ;; Defined at:
  2549 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  divisor         2    0[BANK0 ] int 
  2552 ;;  dividend        2    2[BANK0 ] int 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  sign            1    3[COMMON] unsigned char 
  2555 ;;  counter         1    2[COMMON] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  2    0[BANK0 ] int 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, status,0, btemp+1
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       4       0       0       0
  2566 ;;      Locals:         2       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0
  2568 ;;      Totals:         2       4       0       0       0
  2569 ;;Total ram usage:        6 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_vfpfcnvrt
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579     0343                     ___awmod:	
  2580                           ;psect for function ___awmod
  2581                           
  2582     0343                     l1295:	
  2583                           ;incstack = 0
  2584                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2585                           
  2586     0343  01F3               	clrf	___awmod@sign
  2587     0344                     l1297:
  2588     0344  1283               	bcf	3,5	;RP0=0, select bank0
  2589     0345  1303               	bcf	3,6	;RP1=0, select bank0
  2590     0346  1FA3               	btfss	___awmod@dividend+1,7
  2591     0347  2B49               	goto	u751
  2592     0348  2B4A               	goto	u750
  2593     0349                     u751:
  2594     0349  2B51               	goto	l1303
  2595     034A                     u750:
  2596     034A                     l1299:
  2597     034A  09A2               	comf	___awmod@dividend,f
  2598     034B  09A3               	comf	___awmod@dividend+1,f
  2599     034C  0AA2               	incf	___awmod@dividend,f
  2600     034D  1903               	skipnz
  2601     034E  0AA3               	incf	___awmod@dividend+1,f
  2602     034F                     l1301:
  2603     034F  01F3               	clrf	___awmod@sign
  2604     0350  0AF3               	incf	___awmod@sign,f
  2605     0351                     l1303:
  2606     0351  1FA1               	btfss	___awmod@divisor+1,7
  2607     0352  2B54               	goto	u761
  2608     0353  2B55               	goto	u760
  2609     0354                     u761:
  2610     0354  2B5A               	goto	l1307
  2611     0355                     u760:
  2612     0355                     l1305:
  2613     0355  09A0               	comf	___awmod@divisor,f
  2614     0356  09A1               	comf	___awmod@divisor+1,f
  2615     0357  0AA0               	incf	___awmod@divisor,f
  2616     0358  1903               	skipnz
  2617     0359  0AA1               	incf	___awmod@divisor+1,f
  2618     035A                     l1307:
  2619     035A  0820               	movf	___awmod@divisor,w
  2620     035B  0421               	iorwf	___awmod@divisor+1,w
  2621     035C  1903               	btfsc	3,2
  2622     035D  2B5F               	goto	u771
  2623     035E  2B60               	goto	u770
  2624     035F                     u771:
  2625     035F  2B8F               	goto	l1325
  2626     0360                     u770:
  2627     0360                     l1309:
  2628     0360  01F2               	clrf	___awmod@counter
  2629     0361  0AF2               	incf	___awmod@counter,f
  2630     0362  2B6E               	goto	l1315
  2631     0363                     l1311:
  2632     0363  3001               	movlw	1
  2633     0364                     u785:
  2634     0364  1003               	clrc
  2635     0365  0DA0               	rlf	___awmod@divisor,f
  2636     0366  0DA1               	rlf	___awmod@divisor+1,f
  2637     0367  3EFF               	addlw	-1
  2638     0368  1D03               	skipz
  2639     0369  2B64               	goto	u785
  2640     036A                     l1313:
  2641     036A  3001               	movlw	1
  2642     036B  00FF               	movwf	btemp+1
  2643     036C  087F               	movf	btemp+1,w
  2644     036D  07F2               	addwf	___awmod@counter,f
  2645     036E                     l1315:
  2646     036E  1FA1               	btfss	___awmod@divisor+1,7
  2647     036F  2B71               	goto	u791
  2648     0370  2B72               	goto	u790
  2649     0371                     u791:
  2650     0371  2B63               	goto	l1311
  2651     0372                     u790:
  2652     0372                     l1317:
  2653     0372  0821               	movf	___awmod@divisor+1,w
  2654     0373  0223               	subwf	___awmod@dividend+1,w
  2655     0374  1D03               	skipz
  2656     0375  2B78               	goto	u805
  2657     0376  0820               	movf	___awmod@divisor,w
  2658     0377  0222               	subwf	___awmod@dividend,w
  2659     0378                     u805:
  2660     0378  1C03               	skipc
  2661     0379  2B7B               	goto	u801
  2662     037A  2B7C               	goto	u800
  2663     037B                     u801:
  2664     037B  2B82               	goto	l1321
  2665     037C                     u800:
  2666     037C                     l1319:
  2667     037C  0820               	movf	___awmod@divisor,w
  2668     037D  02A2               	subwf	___awmod@dividend,f
  2669     037E  0821               	movf	___awmod@divisor+1,w
  2670     037F  1C03               	skipc
  2671     0380  03A3               	decf	___awmod@dividend+1,f
  2672     0381  02A3               	subwf	___awmod@dividend+1,f
  2673     0382                     l1321:
  2674     0382  3001               	movlw	1
  2675     0383                     u815:
  2676     0383  1003               	clrc
  2677     0384  0CA1               	rrf	___awmod@divisor+1,f
  2678     0385  0CA0               	rrf	___awmod@divisor,f
  2679     0386  3EFF               	addlw	-1
  2680     0387  1D03               	skipz
  2681     0388  2B83               	goto	u815
  2682     0389                     l1323:
  2683     0389  3001               	movlw	1
  2684     038A  02F2               	subwf	___awmod@counter,f
  2685     038B  1D03               	btfss	3,2
  2686     038C  2B8E               	goto	u821
  2687     038D  2B8F               	goto	u820
  2688     038E                     u821:
  2689     038E  2B72               	goto	l1317
  2690     038F                     u820:
  2691     038F                     l1325:
  2692     038F  0873               	movf	___awmod@sign,w
  2693     0390  1903               	btfsc	3,2
  2694     0391  2B93               	goto	u831
  2695     0392  2B94               	goto	u830
  2696     0393                     u831:
  2697     0393  2B99               	goto	l1329
  2698     0394                     u830:
  2699     0394                     l1327:
  2700     0394  09A2               	comf	___awmod@dividend,f
  2701     0395  09A3               	comf	___awmod@dividend+1,f
  2702     0396  0AA2               	incf	___awmod@dividend,f
  2703     0397  1903               	skipnz
  2704     0398  0AA3               	incf	___awmod@dividend+1,f
  2705     0399                     l1329:
  2706     0399  0823               	movf	___awmod@dividend+1,w
  2707     039A  00A1               	movwf	?___awmod+1
  2708     039B  0822               	movf	___awmod@dividend,w
  2709     039C  00A0               	movwf	?___awmod
  2710     039D                     l440:
  2711     039D  0008               	return
  2712     039E                     __end_of___awmod:
  2713                           
  2714                           	psect	text13
  2715     02DA                     __ptext13:	
  2716 ;; *************** function ___awdiv *****************
  2717 ;; Defined at:
  2718 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  divisor         2    0[BANK0 ] int 
  2721 ;;  dividend        2    2[BANK0 ] int 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  quotient        2    4[COMMON] int 
  2724 ;;  sign            1    3[COMMON] unsigned char 
  2725 ;;  counter         1    2[COMMON] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  2    0[BANK0 ] int 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, btemp+1
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         0       4       0       0       0
  2736 ;;      Locals:         4       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0
  2738 ;;      Totals:         4       4       0       0       0
  2739 ;;Total ram usage:        8 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_vfpfcnvrt
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749     02DA                     ___awdiv:	
  2750                           ;psect for function ___awdiv
  2751                           
  2752     02DA                     l1689:	
  2753                           ;incstack = 0
  2754                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2755                           
  2756     02DA  01F3               	clrf	___awdiv@sign
  2757     02DB                     l1691:
  2758     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2759     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2760     02DD  1FA1               	btfss	___awdiv@divisor+1,7
  2761     02DE  2AE0               	goto	u1301
  2762     02DF  2AE1               	goto	u1300
  2763     02E0                     u1301:
  2764     02E0  2AE8               	goto	l1697
  2765     02E1                     u1300:
  2766     02E1                     l1693:
  2767     02E1  09A0               	comf	___awdiv@divisor,f
  2768     02E2  09A1               	comf	___awdiv@divisor+1,f
  2769     02E3  0AA0               	incf	___awdiv@divisor,f
  2770     02E4  1903               	skipnz
  2771     02E5  0AA1               	incf	___awdiv@divisor+1,f
  2772     02E6                     l1695:
  2773     02E6  01F3               	clrf	___awdiv@sign
  2774     02E7  0AF3               	incf	___awdiv@sign,f
  2775     02E8                     l1697:
  2776     02E8  1FA3               	btfss	___awdiv@dividend+1,7
  2777     02E9  2AEB               	goto	u1311
  2778     02EA  2AEC               	goto	u1310
  2779     02EB                     u1311:
  2780     02EB  2AF5               	goto	l1703
  2781     02EC                     u1310:
  2782     02EC                     l1699:
  2783     02EC  09A2               	comf	___awdiv@dividend,f
  2784     02ED  09A3               	comf	___awdiv@dividend+1,f
  2785     02EE  0AA2               	incf	___awdiv@dividend,f
  2786     02EF  1903               	skipnz
  2787     02F0  0AA3               	incf	___awdiv@dividend+1,f
  2788     02F1                     l1701:
  2789     02F1  3001               	movlw	1
  2790     02F2  00FF               	movwf	btemp+1
  2791     02F3  087F               	movf	btemp+1,w
  2792     02F4  06F3               	xorwf	___awdiv@sign,f
  2793     02F5                     l1703:
  2794     02F5  01F4               	clrf	___awdiv@quotient
  2795     02F6  01F5               	clrf	___awdiv@quotient+1
  2796     02F7                     l1705:
  2797     02F7  0820               	movf	___awdiv@divisor,w
  2798     02F8  0421               	iorwf	___awdiv@divisor+1,w
  2799     02F9  1903               	btfsc	3,2
  2800     02FA  2AFC               	goto	u1321
  2801     02FB  2AFD               	goto	u1320
  2802     02FC                     u1321:
  2803     02FC  2B34               	goto	l1725
  2804     02FD                     u1320:
  2805     02FD                     l1707:
  2806     02FD  01F2               	clrf	___awdiv@counter
  2807     02FE  0AF2               	incf	___awdiv@counter,f
  2808     02FF  2B0B               	goto	l1713
  2809     0300                     l1709:
  2810     0300  3001               	movlw	1
  2811     0301                     u1335:
  2812     0301  1003               	clrc
  2813     0302  0DA0               	rlf	___awdiv@divisor,f
  2814     0303  0DA1               	rlf	___awdiv@divisor+1,f
  2815     0304  3EFF               	addlw	-1
  2816     0305  1D03               	skipz
  2817     0306  2B01               	goto	u1335
  2818     0307                     l1711:
  2819     0307  3001               	movlw	1
  2820     0308  00FF               	movwf	btemp+1
  2821     0309  087F               	movf	btemp+1,w
  2822     030A  07F2               	addwf	___awdiv@counter,f
  2823     030B                     l1713:
  2824     030B  1FA1               	btfss	___awdiv@divisor+1,7
  2825     030C  2B0E               	goto	u1341
  2826     030D  2B0F               	goto	u1340
  2827     030E                     u1341:
  2828     030E  2B00               	goto	l1709
  2829     030F                     u1340:
  2830     030F                     l1715:
  2831     030F  3001               	movlw	1
  2832     0310                     u1355:
  2833     0310  1003               	clrc
  2834     0311  0DF4               	rlf	___awdiv@quotient,f
  2835     0312  0DF5               	rlf	___awdiv@quotient+1,f
  2836     0313  3EFF               	addlw	-1
  2837     0314  1D03               	skipz
  2838     0315  2B10               	goto	u1355
  2839     0316  0821               	movf	___awdiv@divisor+1,w
  2840     0317  0223               	subwf	___awdiv@dividend+1,w
  2841     0318  1D03               	skipz
  2842     0319  2B1C               	goto	u1365
  2843     031A  0820               	movf	___awdiv@divisor,w
  2844     031B  0222               	subwf	___awdiv@dividend,w
  2845     031C                     u1365:
  2846     031C  1C03               	skipc
  2847     031D  2B1F               	goto	u1361
  2848     031E  2B20               	goto	u1360
  2849     031F                     u1361:
  2850     031F  2B27               	goto	l1721
  2851     0320                     u1360:
  2852     0320                     l1717:
  2853     0320  0820               	movf	___awdiv@divisor,w
  2854     0321  02A2               	subwf	___awdiv@dividend,f
  2855     0322  0821               	movf	___awdiv@divisor+1,w
  2856     0323  1C03               	skipc
  2857     0324  03A3               	decf	___awdiv@dividend+1,f
  2858     0325  02A3               	subwf	___awdiv@dividend+1,f
  2859     0326                     l1719:
  2860     0326  1474               	bsf	___awdiv@quotient,0
  2861     0327                     l1721:
  2862     0327  3001               	movlw	1
  2863     0328                     u1375:
  2864     0328  1003               	clrc
  2865     0329  0CA1               	rrf	___awdiv@divisor+1,f
  2866     032A  0CA0               	rrf	___awdiv@divisor,f
  2867     032B  3EFF               	addlw	-1
  2868     032C  1D03               	skipz
  2869     032D  2B28               	goto	u1375
  2870     032E                     l1723:
  2871     032E  3001               	movlw	1
  2872     032F  02F2               	subwf	___awdiv@counter,f
  2873     0330  1D03               	btfss	3,2
  2874     0331  2B33               	goto	u1381
  2875     0332  2B34               	goto	u1380
  2876     0333                     u1381:
  2877     0333  2B0F               	goto	l1715
  2878     0334                     u1380:
  2879     0334                     l1725:
  2880     0334  0873               	movf	___awdiv@sign,w
  2881     0335  1903               	btfsc	3,2
  2882     0336  2B38               	goto	u1391
  2883     0337  2B39               	goto	u1390
  2884     0338                     u1391:
  2885     0338  2B3E               	goto	l1729
  2886     0339                     u1390:
  2887     0339                     l1727:
  2888     0339  09F4               	comf	___awdiv@quotient,f
  2889     033A  09F5               	comf	___awdiv@quotient+1,f
  2890     033B  0AF4               	incf	___awdiv@quotient,f
  2891     033C  1903               	skipnz
  2892     033D  0AF5               	incf	___awdiv@quotient+1,f
  2893     033E                     l1729:
  2894     033E  0875               	movf	___awdiv@quotient+1,w
  2895     033F  00A1               	movwf	?___awdiv+1
  2896     0340  0874               	movf	___awdiv@quotient,w
  2897     0341  00A0               	movwf	?___awdiv
  2898     0342                     l427:
  2899     0342  0008               	return
  2900     0343                     __end_of___awdiv:
  2901                           
  2902                           	psect	text14
  2903     0590                     __ptext14:	
  2904 ;; *************** function _lcd_out_cp *****************
  2905 ;; Defined at:
  2906 ;;		line 123 in file "lcd.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  str             1    wreg     PTR unsigned char 
  2909 ;;		 -> Print@My_Buffer(9), 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  str             1    0[BANK0 ] PTR unsigned char 
  2912 ;;		 -> Print@My_Buffer(9), 
  2913 ;;  i               2    1[BANK0 ] int 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       0       0       0       0
  2924 ;;      Locals:         0       3       0       0       0
  2925 ;;      Temps:          1       0       0       0       0
  2926 ;;      Totals:         1       3       0       0       0
  2927 ;;Total ram usage:        4 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 3
  2930 ;; This function calls:
  2931 ;;		_LCD_Write_Char
  2932 ;; This function is called by:
  2933 ;;		_Print
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937     0590                     _lcd_out_cp:	
  2938                           ;psect for function _lcd_out_cp
  2939                           
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in _lcd_out_cp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2943                           ;lcd_out_cp@str stored from wreg
  2944     0590  1283               	bcf	3,5	;RP0=0, select bank0
  2945     0591  1303               	bcf	3,6	;RP1=0, select bank0
  2946     0592  00A0               	movwf	lcd_out_cp@str
  2947     0593                     l1903:
  2948                           
  2949                           ;lcd.c: 123: void lcd_out_cp(char *str);lcd.c: 124: {;lcd.c: 125:   int i;;lcd.c: 126:  
      +                           for(i=0;str[i]!='\0';i++)
  2950     0593  01A1               	clrf	lcd_out_cp@i
  2951     0594  01A2               	clrf	lcd_out_cp@i+1
  2952     0595  2DA9               	goto	l1909
  2953     0596                     l1905:
  2954                           
  2955                           ;lcd.c: 127:     LCD_Write_Char(str[i]);
  2956     0596  0821               	movf	lcd_out_cp@i,w
  2957     0597  0720               	addwf	lcd_out_cp@str,w
  2958     0598  00F8               	movwf	??_lcd_out_cp
  2959     0599  0878               	movf	??_lcd_out_cp,w
  2960     059A  0084               	movwf	4
  2961     059B  0800               	movf	0,w
  2962     059C  120A  118A  2448  120A  118A  	fcall	_LCD_Write_Char
  2963     05A1                     l1907:
  2964     05A1  3001               	movlw	1
  2965     05A2  1283               	bcf	3,5	;RP0=0, select bank0
  2966     05A3  1303               	bcf	3,6	;RP1=0, select bank0
  2967     05A4  07A1               	addwf	lcd_out_cp@i,f
  2968     05A5  1803               	skipnc
  2969     05A6  0AA2               	incf	lcd_out_cp@i+1,f
  2970     05A7  3000               	movlw	0
  2971     05A8  07A2               	addwf	lcd_out_cp@i+1,f
  2972     05A9                     l1909:
  2973     05A9  0821               	movf	lcd_out_cp@i,w
  2974     05AA  0720               	addwf	lcd_out_cp@str,w
  2975     05AB  00F8               	movwf	??_lcd_out_cp
  2976     05AC  0878               	movf	??_lcd_out_cp,w
  2977     05AD  0084               	movwf	4
  2978     05AE  1383               	bcf	3,7	;select IRP bank0
  2979     05AF  0800               	movf	0,w
  2980     05B0  1D03               	btfss	3,2
  2981     05B1  2DB3               	goto	u1621
  2982     05B2  2DB4               	goto	u1620
  2983     05B3                     u1621:
  2984     05B3  2D96               	goto	l1905
  2985     05B4                     u1620:
  2986     05B4                     l156:
  2987     05B4  0008               	return
  2988     05B5                     __end_of_lcd_out_cp:
  2989                           
  2990                           	psect	text15
  2991     0448                     __ptext15:	
  2992 ;; *************** function _LCD_Write_Char *****************
  2993 ;; Defined at:
  2994 ;;		line 34 in file "lcd.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  Data            1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  Data            1    7[COMMON] unsigned char 
  2999 ;;  High4           1    6[COMMON] unsigned char 
  3000 ;;  Low4            1    5[COMMON] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3010 ;;      Params:         0       0       0       0       0
  3011 ;;      Locals:         3       0       0       0       0
  3012 ;;      Temps:          2       0       0       0       0
  3013 ;;      Totals:         5       0       0       0       0
  3014 ;;Total ram usage:        5 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 2
  3017 ;; This function calls:
  3018 ;;		_SET_LCD_DATA_PINS
  3019 ;; This function is called by:
  3020 ;;		_lcd_out
  3021 ;;		_lcd_out_cp
  3022 ;;		_lcd_chr
  3023 ;;		_lcd_chr_cp
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027     0448                     _LCD_Write_Char:	
  3028                           ;psect for function _LCD_Write_Char
  3029                           
  3030                           
  3031                           ;incstack = 0
  3032                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3033                           ;LCD_Write_Char@Data stored from wreg
  3034     0448  00F7               	movwf	LCD_Write_Char@Data
  3035     0449                     l1827:
  3036                           
  3037                           ;lcd.c: 34: static void LCD_Write_Char(char Data);lcd.c: 35: {;lcd.c: 36:   char Low4,Hi
      +                          gh4;;lcd.c: 37:   Low4 = Data & 0x0F;
  3038     0449  0877               	movf	LCD_Write_Char@Data,w
  3039     044A  390F               	andlw	15
  3040     044B  00F5               	movwf	LCD_Write_Char@Low4
  3041                           
  3042                           ;lcd.c: 38:   High4 = Data & 0xF0;
  3043     044C  0877               	movf	LCD_Write_Char@Data,w
  3044     044D  39F0               	andlw	240
  3045     044E  00F6               	movwf	LCD_Write_Char@High4
  3046     044F                     l1829:
  3047                           
  3048                           ;lcd.c: 39:   RD0 = 1;
  3049     044F  1283               	bcf	3,5	;RP0=0, select bank0
  3050     0450  1303               	bcf	3,6	;RP1=0, select bank0
  3051     0451  1408               	bsf	8,0	;volatile
  3052     0452                     l1831:
  3053                           
  3054                           ;lcd.c: 40:   SET_LCD_DATA_PINS(High4>>4);
  3055     0452  0876               	movf	LCD_Write_Char@High4,w
  3056     0453  00F3               	movwf	??_LCD_Write_Char
  3057     0454  3004               	movlw	4
  3058     0455                     u1595:
  3059     0455  1003               	clrc
  3060     0456  0CF3               	rrf	??_LCD_Write_Char,f
  3061     0457  3EFF               	addlw	-1
  3062     0458  1D03               	skipz
  3063     0459  2C55               	goto	u1595
  3064     045A  0873               	movf	??_LCD_Write_Char,w
  3065     045B  120A  118A  25B5  120A  118A  	fcall	_SET_LCD_DATA_PINS
  3066     0460                     l1833:
  3067                           
  3068                           ;lcd.c: 41:   RD1 = 1;
  3069     0460  1283               	bcf	3,5	;RP0=0, select bank0
  3070     0461  1303               	bcf	3,6	;RP1=0, select bank0
  3071     0462  1488               	bsf	8,1	;volatile
  3072     0463                     l1835:
  3073                           
  3074                           ;lcd.c: 42:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3075     0463  3005               	movlw	5
  3076     0464  00F4               	movwf	??_LCD_Write_Char+1
  3077     0465  30AB               	movlw	171
  3078     0466  00F3               	movwf	??_LCD_Write_Char
  3079     0467                     u1817:
  3080     0467  0BF3               	decfsz	??_LCD_Write_Char,f
  3081     0468  2C67               	goto	u1817
  3082     0469  0BF4               	decfsz	??_LCD_Write_Char+1,f
  3083     046A  2C67               	goto	u1817
  3084     046B  2C6C               	nop2
  3085     046C                     l1837:
  3086                           
  3087                           ;lcd.c: 43:   RD1 = 0;
  3088     046C  1283               	bcf	3,5	;RP0=0, select bank0
  3089     046D  1303               	bcf	3,6	;RP1=0, select bank0
  3090     046E  1088               	bcf	8,1	;volatile
  3091     046F                     l1839:
  3092                           
  3093                           ;lcd.c: 44:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3094     046F  3005               	movlw	5
  3095     0470  00F4               	movwf	??_LCD_Write_Char+1
  3096     0471  30AB               	movlw	171
  3097     0472  00F3               	movwf	??_LCD_Write_Char
  3098     0473                     u1827:
  3099     0473  0BF3               	decfsz	??_LCD_Write_Char,f
  3100     0474  2C73               	goto	u1827
  3101     0475  0BF4               	decfsz	??_LCD_Write_Char+1,f
  3102     0476  2C73               	goto	u1827
  3103     0477  2C78               	nop2
  3104     0478                     l1841:
  3105                           
  3106                           ;lcd.c: 45:   SET_LCD_DATA_PINS(Low4);
  3107     0478  0875               	movf	LCD_Write_Char@Low4,w
  3108     0479  120A  118A  25B5  120A  118A  	fcall	_SET_LCD_DATA_PINS
  3109     047E                     l1843:
  3110                           
  3111                           ;lcd.c: 46:   RD1 = 1;
  3112     047E  1283               	bcf	3,5	;RP0=0, select bank0
  3113     047F  1303               	bcf	3,6	;RP1=0, select bank0
  3114     0480  1488               	bsf	8,1	;volatile
  3115     0481                     l1845:
  3116                           
  3117                           ;lcd.c: 47:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3118     0481  3005               	movlw	5
  3119     0482  00F4               	movwf	??_LCD_Write_Char+1
  3120     0483  30AB               	movlw	171
  3121     0484  00F3               	movwf	??_LCD_Write_Char
  3122     0485                     u1837:
  3123     0485  0BF3               	decfsz	??_LCD_Write_Char,f
  3124     0486  2C85               	goto	u1837
  3125     0487  0BF4               	decfsz	??_LCD_Write_Char+1,f
  3126     0488  2C85               	goto	u1837
  3127     0489  2C8A               	nop2
  3128     048A                     l1847:
  3129                           
  3130                           ;lcd.c: 48:   RD1 = 0;
  3131     048A  1283               	bcf	3,5	;RP0=0, select bank0
  3132     048B  1303               	bcf	3,6	;RP1=0, select bank0
  3133     048C  1088               	bcf	8,1	;volatile
  3134     048D                     l1849:
  3135                           
  3136                           ;lcd.c: 49:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3137     048D  3005               	movlw	5
  3138     048E  00F4               	movwf	??_LCD_Write_Char+1
  3139     048F  30AB               	movlw	171
  3140     0490  00F3               	movwf	??_LCD_Write_Char
  3141     0491                     u1847:
  3142     0491  0BF3               	decfsz	??_LCD_Write_Char,f
  3143     0492  2C91               	goto	u1847
  3144     0493  0BF4               	decfsz	??_LCD_Write_Char+1,f
  3145     0494  2C91               	goto	u1847
  3146     0495  2C96               	nop2
  3147     0496                     l127:
  3148     0496  0008               	return
  3149     0497                     __end_of_LCD_Write_Char:
  3150                           
  3151                           	psect	text16
  3152     0617                     __ptext16:	
  3153 ;; *************** function _My_init_Function *****************
  3154 ;; Defined at:
  3155 ;;		line 27 in file "main.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0, pclath, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0
  3172 ;;      Totals:         0       0       0       0       0
  3173 ;;Total ram usage:        0 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 4
  3176 ;; This function calls:
  3177 ;;		_lcd_cmd
  3178 ;;		_lcd_init
  3179 ;;		_timer0_init
  3180 ;; This function is called by:
  3181 ;;		_main
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185     0617                     _My_init_Function:	
  3186                           ;psect for function _My_init_Function
  3187                           
  3188     0617                     l1931:	
  3189                           ;incstack = 0
  3190                           ; Regs used in _My_init_Function: [wreg+status,2+status,0+pclath+cstack]
  3191                           
  3192                           
  3193                           ;main.c: 29:     lcd_init();
  3194     0617  120A  118A  2270  120A  118A  	fcall	_lcd_init
  3195                           
  3196                           ;main.c: 30:     timer0_init((0));
  3197     061C  3000               	movlw	0
  3198     061D  120A  118A  268C  120A  118A  	fcall	_timer0_init
  3199                           
  3200                           ;main.c: 31:     lcd_cmd((0x01));
  3201     0622  3001               	movlw	1
  3202     0623  120A  118A  264C  120A  118A  	fcall	_lcd_cmd
  3203     0628                     l1933:
  3204                           
  3205                           ;main.c: 32:     OPTION_REGbits.nRBPU = 0;
  3206     0628  1683               	bsf	3,5	;RP0=1, select bank1
  3207     0629  1303               	bcf	3,6	;RP1=0, select bank1
  3208     062A  1381               	bcf	1,7	;volatile
  3209     062B                     l1935:
  3210                           
  3211                           ;main.c: 33:     INTE = 1;
  3212     062B  160B               	bsf	11,4	;volatile
  3213     062C                     l1937:
  3214                           
  3215                           ;main.c: 34:     INTF = 0;
  3216     062C  108B               	bcf	11,1	;volatile
  3217     062D                     l1939:
  3218                           
  3219                           ;main.c: 35:     INTEDG= 1;
  3220     062D  1701               	bsf	1,6	;volatile
  3221     062E                     l1941:
  3222                           
  3223                           ;main.c: 36:     TRISB=0xff;
  3224     062E  30FF               	movlw	255
  3225     062F  0086               	movwf	6	;volatile
  3226     0630                     l1943:
  3227                           
  3228                           ;main.c: 37:     GIE=1;
  3229     0630  178B               	bsf	11,7	;volatile
  3230     0631                     l41:
  3231     0631  0008               	return
  3232     0632                     __end_of_My_init_Function:
  3233                           
  3234                           	psect	text17
  3235     068C                     __ptext17:	
  3236 ;; *************** function _timer0_init *****************
  3237 ;; Defined at:
  3238 ;;		line 11 in file "timer.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  prescaler       1    wreg     unsigned char 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  prescaler       1    3[COMMON] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3252 ;;      Params:         0       0       0       0       0
  3253 ;;      Locals:         1       0       0       0       0
  3254 ;;      Temps:          1       0       0       0       0
  3255 ;;      Totals:         2       0       0       0       0
  3256 ;;Total ram usage:        2 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 1
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_My_init_Function
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266     068C                     _timer0_init:	
  3267                           ;psect for function _timer0_init
  3268                           
  3269                           
  3270                           ;incstack = 0
  3271                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  3272                           ;timer0_init@prescaler stored from wreg
  3273     068C  00F3               	movwf	timer0_init@prescaler
  3274     068D                     l1489:
  3275                           
  3276                           ;timer.c: 11: void timer0_init(char prescaler);timer.c: 12: {;timer.c: 13:     OPTION_RE
      +                          G = (OPTION_REG & 0xF8) | (prescaler & 0x7);
  3277     068D  3007               	movlw	7
  3278     068E  0573               	andwf	timer0_init@prescaler,w
  3279     068F  00F2               	movwf	??_timer0_init
  3280     0690  1683               	bsf	3,5	;RP0=1, select bank1
  3281     0691  1303               	bcf	3,6	;RP1=0, select bank1
  3282     0692  0801               	movf	1,w	;volatile
  3283     0693  39F8               	andlw	248
  3284     0694  0472               	iorwf	??_timer0_init,w
  3285     0695  0081               	movwf	1	;volatile
  3286     0696                     l1491:
  3287                           
  3288                           ;timer.c: 14:     OPTION_REGbits.T0CS =0;
  3289     0696  1281               	bcf	1,5	;volatile
  3290     0697                     l1493:
  3291                           
  3292                           ;timer.c: 15:     OPTION_REGbits.T0SE =0;
  3293     0697  1201               	bcf	1,4	;volatile
  3294     0698                     l1495:
  3295                           
  3296                           ;timer.c: 16:     OPTION_REGbits.PSA =0;
  3297     0698  1181               	bcf	1,3	;volatile
  3298     0699                     l1497:
  3299                           
  3300                           ;timer.c: 18:     TMR0IE = 1;
  3301     0699  168B               	bsf	11,5	;volatile
  3302     069A                     l1499:
  3303                           
  3304                           ;timer.c: 19:     TMR0IF = 0;
  3305     069A  110B               	bcf	11,2	;volatile
  3306     069B                     l1501:
  3307                           
  3308                           ;timer.c: 20:     GIE =1;
  3309     069B  178B               	bsf	11,7	;volatile
  3310     069C                     l179:
  3311     069C  0008               	return
  3312     069D                     __end_of_timer0_init:
  3313                           
  3314                           	psect	text18
  3315     0270                     __ptext18:	
  3316 ;; *************** function _lcd_init *****************
  3317 ;; Defined at:
  3318 ;;		line 54 in file "lcd.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0, pclath, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3332 ;;      Params:         0       0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0
  3334 ;;      Temps:          2       0       0       0       0
  3335 ;;      Totals:         2       0       0       0       0
  3336 ;;Total ram usage:        2 bytes
  3337 ;; Hardware stack levels used: 1
  3338 ;; Hardware stack levels required when called: 3
  3339 ;; This function calls:
  3340 ;;		_LCD_SEND_4BIT_CMD
  3341 ;;		_SET_LCD_DATA_PINS
  3342 ;; This function is called by:
  3343 ;;		_My_init_Function
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347     0270                     _lcd_init:	
  3348                           ;psect for function _lcd_init
  3349                           
  3350     0270                     l1861:	
  3351                           ;incstack = 0
  3352                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3353                           
  3354                           
  3355                           ;lcd.c: 57:   TRISD0 = 0;
  3356     0270  1683               	bsf	3,5	;RP0=1, select bank1
  3357     0271  1303               	bcf	3,6	;RP1=0, select bank1
  3358     0272  1008               	bcf	8,0	;volatile
  3359                           
  3360                           ;lcd.c: 58:   TRISD1 = 0;
  3361     0273  1088               	bcf	8,1	;volatile
  3362                           
  3363                           ;lcd.c: 59:   TRISD2 = 0;
  3364     0274  1108               	bcf	8,2	;volatile
  3365                           
  3366                           ;lcd.c: 60:   TRISD3 = 0;
  3367     0275  1188               	bcf	8,3	;volatile
  3368                           
  3369                           ;lcd.c: 61:   TRISD4 = 0;
  3370     0276  1208               	bcf	8,4	;volatile
  3371                           
  3372                           ;lcd.c: 62:   TRISD5 = 0;
  3373     0277  1288               	bcf	8,5	;volatile
  3374     0278                     l1863:
  3375                           
  3376                           ;lcd.c: 64:   SET_LCD_DATA_PINS(0x00);
  3377     0278  3000               	movlw	0
  3378     0279  120A  118A  25B5  120A  118A  	fcall	_SET_LCD_DATA_PINS
  3379     027E                     l1865:
  3380                           
  3381                           ;lcd.c: 65:   _delay((unsigned long)((30)*((8000000)/4000.0)));
  3382     027E  304E               	movlw	78
  3383     027F  00F7               	movwf	??_lcd_init+1
  3384     0280  30EB               	movlw	235
  3385     0281  00F6               	movwf	??_lcd_init
  3386     0282                     u1857:
  3387     0282  0BF6               	decfsz	??_lcd_init,f
  3388     0283  2A82               	goto	u1857
  3389     0284  0BF7               	decfsz	??_lcd_init+1,f
  3390     0285  2A82               	goto	u1857
  3391     0286                     l1867:
  3392                           
  3393                           ;lcd.c: 66:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3394     0286  3005               	movlw	5
  3395     0287  00F7               	movwf	??_lcd_init+1
  3396     0288  30AB               	movlw	171
  3397     0289  00F6               	movwf	??_lcd_init
  3398     028A                     u1867:
  3399     028A  0BF6               	decfsz	??_lcd_init,f
  3400     028B  2A8A               	goto	u1867
  3401     028C  0BF7               	decfsz	??_lcd_init+1,f
  3402     028D  2A8A               	goto	u1867
  3403     028E  2A8F               	nop2
  3404                           
  3405                           ;lcd.c: 67:    LCD_SEND_4BIT_CMD(0x03);
  3406     028F  3003               	movlw	3
  3407     0290  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3408     0295                     l1869:
  3409                           
  3410                           ;lcd.c: 68:   _delay((unsigned long)((5)*((8000000)/4000.0)));
  3411     0295  300D               	movlw	13
  3412     0296  00F7               	movwf	??_lcd_init+1
  3413     0297  30FB               	movlw	251
  3414     0298  00F6               	movwf	??_lcd_init
  3415     0299                     u1877:
  3416     0299  0BF6               	decfsz	??_lcd_init,f
  3417     029A  2A99               	goto	u1877
  3418     029B  0BF7               	decfsz	??_lcd_init+1,f
  3419     029C  2A99               	goto	u1877
  3420     029D  2A9E               	nop2
  3421     029E                     l1871:
  3422                           
  3423                           ;lcd.c: 69:    LCD_SEND_4BIT_CMD(0x03);
  3424     029E  3003               	movlw	3
  3425     029F  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3426                           
  3427                           ;lcd.c: 70:   _delay((unsigned long)((150)*((8000000)/4000000.0)));
  3428     02A4  3063               	movlw	99
  3429     02A5  00F6               	movwf	??_lcd_init
  3430     02A6                     u1887:
  3431     02A6  0BF6               	decfsz	??_lcd_init,f
  3432     02A7  2AA6               	goto	u1887
  3433     02A8  2AA9               	nop2
  3434     02A9                     l1873:
  3435                           
  3436                           ;lcd.c: 71:    LCD_SEND_4BIT_CMD(0x03);
  3437     02A9  3003               	movlw	3
  3438     02AA  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3439     02AF                     l1875:
  3440                           
  3441                           ;lcd.c: 72:    LCD_SEND_4BIT_CMD(0x02);
  3442     02AF  3002               	movlw	2
  3443     02B0  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3444     02B5                     l1877:
  3445                           
  3446                           ;lcd.c: 73:    LCD_SEND_4BIT_CMD(0x02);
  3447     02B5  3002               	movlw	2
  3448     02B6  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3449     02BB                     l1879:
  3450                           
  3451                           ;lcd.c: 74:    LCD_SEND_4BIT_CMD(0x08);
  3452     02BB  3008               	movlw	8
  3453     02BC  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3454     02C1                     l1881:
  3455                           
  3456                           ;lcd.c: 75:    LCD_SEND_4BIT_CMD(0x00);
  3457     02C1  3000               	movlw	0
  3458     02C2  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3459     02C7                     l1883:
  3460                           
  3461                           ;lcd.c: 76:    LCD_SEND_4BIT_CMD(0x0C);
  3462     02C7  300C               	movlw	12
  3463     02C8  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3464     02CD                     l1885:
  3465                           
  3466                           ;lcd.c: 77:    LCD_SEND_4BIT_CMD(0x00);
  3467     02CD  3000               	movlw	0
  3468     02CE  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3469     02D3                     l1887:
  3470                           
  3471                           ;lcd.c: 78:    LCD_SEND_4BIT_CMD(0x06);
  3472     02D3  3006               	movlw	6
  3473     02D4  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3474     02D9                     l130:
  3475     02D9  0008               	return
  3476     02DA                     __end_of_lcd_init:
  3477                           
  3478                           	psect	text19
  3479     064C                     __ptext19:	
  3480 ;; *************** function _lcd_cmd *****************
  3481 ;; Defined at:
  3482 ;;		line 80 in file "lcd.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  command         1    wreg     unsigned char 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  command         1    7[COMMON] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, pclath, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3496 ;;      Params:         0       0       0       0       0
  3497 ;;      Locals:         1       0       0       0       0
  3498 ;;      Temps:          1       0       0       0       0
  3499 ;;      Totals:         2       0       0       0       0
  3500 ;;Total ram usage:        2 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 3
  3503 ;; This function calls:
  3504 ;;		_LCD_SEND_4BIT_CMD
  3505 ;; This function is called by:
  3506 ;;		_My_init_Function
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511     064C                     _lcd_cmd:	
  3512                           ;psect for function _lcd_cmd
  3513                           
  3514                           
  3515                           ;incstack = 0
  3516                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3517                           ;lcd_cmd@command stored from wreg
  3518     064C  00F7               	movwf	lcd_cmd@command
  3519     064D                     l1889:
  3520                           
  3521                           ;lcd.c: 80: void lcd_cmd(unsigned char command);lcd.c: 81: {;lcd.c: 83:   LCD_SEND_4BIT_
      +                          CMD( (command & 0xF0) >> 4 );
  3522     064D  0877               	movf	lcd_cmd@command,w
  3523     064E  00F6               	movwf	??_lcd_cmd
  3524     064F  3004               	movlw	4
  3525     0650                     u1615:
  3526     0650  1003               	clrc
  3527     0651  0CF6               	rrf	??_lcd_cmd,f
  3528     0652  3EFF               	addlw	-1
  3529     0653  1D03               	skipz
  3530     0654  2E50               	goto	u1615
  3531     0655  0876               	movf	??_lcd_cmd,w
  3532     0656  390F               	andlw	15
  3533     0657  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3534                           
  3535                           ;lcd.c: 85:   LCD_SEND_4BIT_CMD( command & 0x0F );
  3536     065C  0877               	movf	lcd_cmd@command,w
  3537     065D  390F               	andlw	15
  3538     065E  120A  118A  2632  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3539     0663                     l133:
  3540     0663  0008               	return
  3541     0664                     __end_of_lcd_cmd:
  3542                           
  3543                           	psect	text20
  3544     0632                     __ptext20:	
  3545 ;; *************** function _LCD_SEND_4BIT_CMD *****************
  3546 ;; Defined at:
  3547 ;;		line 22 in file "lcd.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  CMD             1    wreg     unsigned char 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  CMD             1    5[COMMON] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0, pclath, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         0       0       0       0       0
  3562 ;;      Locals:         1       0       0       0       0
  3563 ;;      Temps:          2       0       0       0       0
  3564 ;;      Totals:         3       0       0       0       0
  3565 ;;Total ram usage:        3 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; Hardware stack levels required when called: 2
  3568 ;; This function calls:
  3569 ;;		_SET_LCD_DATA_PINS
  3570 ;; This function is called by:
  3571 ;;		_lcd_init
  3572 ;;		_lcd_cmd
  3573 ;;		_lcd_set_cursor
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577     0632                     _LCD_SEND_4BIT_CMD:	
  3578                           ;psect for function _LCD_SEND_4BIT_CMD
  3579                           
  3580                           
  3581                           ;incstack = 0
  3582                           ; Regs used in _LCD_SEND_4BIT_CMD: [wreg+status,2+status,0+pclath+cstack]
  3583                           ;LCD_SEND_4BIT_CMD@CMD stored from wreg
  3584     0632  00F5               	movwf	LCD_SEND_4BIT_CMD@CMD
  3585     0633                     l1817:
  3586                           
  3587                           ;lcd.c: 22: static void LCD_SEND_4BIT_CMD(unsigned char CMD);lcd.c: 23: {;lcd.c: 25:   R
      +                          D0 = 0;
  3588     0633  1283               	bcf	3,5	;RP0=0, select bank0
  3589     0634  1303               	bcf	3,6	;RP1=0, select bank0
  3590     0635  1008               	bcf	8,0	;volatile
  3591     0636                     l1819:
  3592                           
  3593                           ;lcd.c: 27:   SET_LCD_DATA_PINS(CMD);
  3594     0636  0875               	movf	LCD_SEND_4BIT_CMD@CMD,w
  3595     0637  120A  118A  25B5  120A  118A  	fcall	_SET_LCD_DATA_PINS
  3596     063C                     l1821:
  3597                           
  3598                           ;lcd.c: 29:   RD1 = 1;
  3599     063C  1283               	bcf	3,5	;RP0=0, select bank0
  3600     063D  1303               	bcf	3,6	;RP1=0, select bank0
  3601     063E  1488               	bsf	8,1	;volatile
  3602     063F                     l1823:
  3603                           
  3604                           ;lcd.c: 30:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3605     063F  3005               	movlw	5
  3606     0640  00F4               	movwf	??_LCD_SEND_4BIT_CMD+1
  3607     0641  30AB               	movlw	171
  3608     0642  00F3               	movwf	??_LCD_SEND_4BIT_CMD
  3609     0643                     u1897:
  3610     0643  0BF3               	decfsz	??_LCD_SEND_4BIT_CMD,f
  3611     0644  2E43               	goto	u1897
  3612     0645  0BF4               	decfsz	??_LCD_SEND_4BIT_CMD+1,f
  3613     0646  2E43               	goto	u1897
  3614     0647  2E48               	nop2
  3615     0648                     l1825:
  3616                           
  3617                           ;lcd.c: 31:   RD1 = 0;
  3618     0648  1283               	bcf	3,5	;RP0=0, select bank0
  3619     0649  1303               	bcf	3,6	;RP1=0, select bank0
  3620     064A  1088               	bcf	8,1	;volatile
  3621     064B                     l124:
  3622     064B  0008               	return
  3623     064C                     __end_of_LCD_SEND_4BIT_CMD:
  3624                           
  3625                           	psect	text21
  3626     05B5                     __ptext21:	
  3627 ;; *************** function _SET_LCD_DATA_PINS *****************
  3628 ;; Defined at:
  3629 ;;		line 3 in file "lcd.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  Data            1    wreg     unsigned char 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  Data            1    2[COMMON] unsigned char 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3643 ;;      Params:         0       0       0       0       0
  3644 ;;      Locals:         1       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0
  3646 ;;      Totals:         1       0       0       0       0
  3647 ;;Total ram usage:        1 bytes
  3648 ;; Hardware stack levels used: 1
  3649 ;; Hardware stack levels required when called: 1
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_LCD_SEND_4BIT_CMD
  3654 ;;		_LCD_Write_Char
  3655 ;;		_lcd_init
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659     05B5                     _SET_LCD_DATA_PINS:	
  3660                           ;psect for function _SET_LCD_DATA_PINS
  3661                           
  3662                           
  3663                           ;incstack = 0
  3664                           ; Regs used in _SET_LCD_DATA_PINS: [wreg]
  3665                           ;SET_LCD_DATA_PINS@Data stored from wreg
  3666     05B5  00F2               	movwf	SET_LCD_DATA_PINS@Data
  3667     05B6                     l1755:
  3668                           
  3669                           ;lcd.c: 3: static void SET_LCD_DATA_PINS(unsigned char Data);lcd.c: 4: {;lcd.c: 5:   if(
      +                          Data & 1)
  3670     05B6  1C72               	btfss	SET_LCD_DATA_PINS@Data,0
  3671     05B7  2DB9               	goto	u1451
  3672     05B8  2DBA               	goto	u1450
  3673     05B9                     u1451:
  3674     05B9  2DBE               	goto	l113
  3675     05BA                     u1450:
  3676     05BA                     l1757:
  3677                           
  3678                           ;lcd.c: 6:     RD2 = 1;
  3679     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3680     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3681     05BC  1508               	bsf	8,2	;volatile
  3682     05BD  2DC1               	goto	l114
  3683     05BE                     l113:	
  3684                           ;lcd.c: 7:   else
  3685                           
  3686                           
  3687                           ;lcd.c: 8:     RD2 = 0;
  3688     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3689     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3690     05C0  1108               	bcf	8,2	;volatile
  3691     05C1                     l114:
  3692                           
  3693                           ;lcd.c: 9:   if(Data & 2)
  3694     05C1  1CF2               	btfss	SET_LCD_DATA_PINS@Data,1
  3695     05C2  2DC4               	goto	u1461
  3696     05C3  2DC5               	goto	u1460
  3697     05C4                     u1461:
  3698     05C4  2DC7               	goto	l115
  3699     05C5                     u1460:
  3700     05C5                     l1759:
  3701                           
  3702                           ;lcd.c: 10:     RD3 = 1;
  3703     05C5  1588               	bsf	8,3	;volatile
  3704     05C6  2DC8               	goto	l116
  3705     05C7                     l115:	
  3706                           ;lcd.c: 11:   else
  3707                           
  3708                           
  3709                           ;lcd.c: 12:     RD3 = 0;
  3710     05C7  1188               	bcf	8,3	;volatile
  3711     05C8                     l116:
  3712                           
  3713                           ;lcd.c: 13:   if(Data & 4)
  3714     05C8  1D72               	btfss	SET_LCD_DATA_PINS@Data,2
  3715     05C9  2DCB               	goto	u1471
  3716     05CA  2DCC               	goto	u1470
  3717     05CB                     u1471:
  3718     05CB  2DCE               	goto	l117
  3719     05CC                     u1470:
  3720     05CC                     l1761:
  3721                           
  3722                           ;lcd.c: 14:     RD4 = 1;
  3723     05CC  1608               	bsf	8,4	;volatile
  3724     05CD  2DCF               	goto	l118
  3725     05CE                     l117:	
  3726                           ;lcd.c: 15:   else
  3727                           
  3728                           
  3729                           ;lcd.c: 16:     RD4 = 0;
  3730     05CE  1208               	bcf	8,4	;volatile
  3731     05CF                     l118:
  3732                           
  3733                           ;lcd.c: 17:   if(Data & 8)
  3734     05CF  1DF2               	btfss	SET_LCD_DATA_PINS@Data,3
  3735     05D0  2DD2               	goto	u1481
  3736     05D1  2DD3               	goto	u1480
  3737     05D2                     u1481:
  3738     05D2  2DD5               	goto	l119
  3739     05D3                     u1480:
  3740     05D3                     l1763:
  3741                           
  3742                           ;lcd.c: 18:     RD5 = 1;
  3743     05D3  1688               	bsf	8,5	;volatile
  3744     05D4  2DD6               	goto	l121
  3745     05D5                     l119:	
  3746                           ;lcd.c: 19:   else
  3747                           
  3748                           
  3749                           ;lcd.c: 20:     RD5 = 0;
  3750     05D5  1288               	bcf	8,5	;volatile
  3751     05D6                     l121:
  3752     05D6  0008               	return
  3753     05D7                     __end_of_SET_LCD_DATA_PINS:
  3754                           
  3755                           	psect	text22
  3756     04E4                     __ptext22:	
  3757 ;; *************** function _ISR *****************
  3758 ;; Defined at:
  3759 ;;		line 47 in file "main.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;		None
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3773 ;;      Params:         0       0       0       0       0
  3774 ;;      Locals:         0       0       0       0       0
  3775 ;;      Temps:          2       0       0       0       0
  3776 ;;      Totals:         2       0       0       0       0
  3777 ;;Total ram usage:        2 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		Interrupt level 1
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786     04E4                     _ISR:	
  3787                           ;psect for function _ISR
  3788                           
  3789     04E4                     i1l1587:
  3790                           
  3791                           ;main.c: 49:     GIE = 0;
  3792     04E4  138B               	bcf	11,7	;volatile
  3793                           
  3794                           ;main.c: 50:     if(INTE == 1 && INTF == 1)
  3795     04E5  1E0B               	btfss	11,4	;volatile
  3796     04E6  2CE8               	goto	u114_21
  3797     04E7  2CE9               	goto	u114_20
  3798     04E8                     u114_21:
  3799     04E8  2CFA               	goto	i1l49
  3800     04E9                     u114_20:
  3801     04E9                     i1l1589:
  3802     04E9  1C8B               	btfss	11,1	;volatile
  3803     04EA  2CEC               	goto	u115_21
  3804     04EB  2CED               	goto	u115_20
  3805     04EC                     u115_21:
  3806     04EC  2CFA               	goto	i1l49
  3807     04ED                     u115_20:
  3808     04ED                     i1l1591:
  3809                           
  3810                           ;main.c: 51:     {;main.c: 53:         timer0_time_passed_ms = 0 ;
  3811     04ED  3000               	movlw	0
  3812     04EE  1283               	bcf	3,5	;RP0=0, select bank0
  3813     04EF  1303               	bcf	3,6	;RP1=0, select bank0
  3814     04F0  00E0               	movwf	_timer0_time_passed_ms+3
  3815     04F1  3000               	movlw	0
  3816     04F2  00DF               	movwf	_timer0_time_passed_ms+2
  3817     04F3  3000               	movlw	0
  3818     04F4  00DE               	movwf	_timer0_time_passed_ms+1
  3819     04F5  3000               	movlw	0
  3820     04F6  00DD               	movwf	_timer0_time_passed_ms
  3821     04F7                     i1l1593:
  3822                           
  3823                           ;main.c: 54:         INTF = 0;
  3824     04F7  108B               	bcf	11,1	;volatile
  3825     04F8                     i1l1595:
  3826                           
  3827                           ;main.c: 55:         GIE = 1;
  3828     04F8  178B               	bsf	11,7	;volatile
  3829     04F9  2D27               	goto	i1l50
  3830     04FA                     i1l49:	
  3831                           ;main.c: 57:     }
  3832                           
  3833                           
  3834                           ;main.c: 58:     if(TMR0IF==1 && TMR0IE==1)
  3835     04FA  1D0B               	btfss	11,2	;volatile
  3836     04FB  2CFD               	goto	u116_21
  3837     04FC  2CFE               	goto	u116_20
  3838     04FD                     u116_21:
  3839     04FD  2D22               	goto	i1l1611
  3840     04FE                     u116_20:
  3841     04FE                     i1l1599:
  3842     04FE  1E8B               	btfss	11,5	;volatile
  3843     04FF  2D01               	goto	u117_21
  3844     0500  2D02               	goto	u117_20
  3845     0501                     u117_21:
  3846     0501  2D22               	goto	i1l1611
  3847     0502                     u117_20:
  3848     0502                     i1l1601:
  3849                           
  3850                           ;main.c: 59:     {;main.c: 60:         overflow_cnt++;
  3851     0502  3001               	movlw	1
  3852     0503  07FA               	addwf	_overflow_cnt,f
  3853     0504  1803               	skipnc
  3854     0505  0AFB               	incf	_overflow_cnt+1,f
  3855     0506  3000               	movlw	0
  3856     0507  07FB               	addwf	_overflow_cnt+1,f
  3857     0508                     i1l1603:
  3858                           
  3859                           ;main.c: 61:         if(overflow_cnt==4)
  3860     0508  3004               	movlw	4
  3861     0509  067A               	xorwf	_overflow_cnt,w
  3862     050A  047B               	iorwf	_overflow_cnt+1,w
  3863     050B  1D03               	btfss	3,2
  3864     050C  2D0E               	goto	u118_21
  3865     050D  2D0F               	goto	u118_20
  3866     050E                     u118_21:
  3867     050E  2D21               	goto	i1l1609
  3868     050F                     u118_20:
  3869     050F                     i1l1605:
  3870                           
  3871                           ;main.c: 62:         {;main.c: 63:             timer0_time_passed_ms++;
  3872     050F  3001               	movlw	1
  3873     0510  1283               	bcf	3,5	;RP0=0, select bank0
  3874     0511  1303               	bcf	3,6	;RP1=0, select bank0
  3875     0512  07DD               	addwf	_timer0_time_passed_ms,f
  3876     0513  3000               	movlw	0
  3877     0514  1803               	skipnc
  3878     0515  3001               	movlw	1
  3879     0516  07DE               	addwf	_timer0_time_passed_ms+1,f
  3880     0517  3000               	movlw	0
  3881     0518  1803               	skipnc
  3882     0519  3001               	movlw	1
  3883     051A  07DF               	addwf	_timer0_time_passed_ms+2,f
  3884     051B  3000               	movlw	0
  3885     051C  1803               	skipnc
  3886     051D  3001               	movlw	1
  3887     051E  07E0               	addwf	_timer0_time_passed_ms+3,f
  3888     051F                     i1l1607:
  3889                           
  3890                           ;main.c: 64:             overflow_cnt = 0;
  3891     051F  01FA               	clrf	_overflow_cnt
  3892     0520  01FB               	clrf	_overflow_cnt+1
  3893     0521                     i1l1609:
  3894                           
  3895                           ;main.c: 66:         TMR0IF=0;
  3896     0521  110B               	bcf	11,2	;volatile
  3897     0522                     i1l1611:
  3898                           
  3899                           ;main.c: 68:     TMR0= 6+40;
  3900     0522  302E               	movlw	46
  3901     0523  1283               	bcf	3,5	;RP0=0, select bank0
  3902     0524  1303               	bcf	3,6	;RP1=0, select bank0
  3903     0525  0081               	movwf	1	;volatile
  3904     0526  2CF8               	goto	i1l1595
  3905     0527                     i1l50:
  3906     0527  0871               	movf	??_ISR+1,w
  3907     0528  008A               	movwf	10
  3908     0529  0E70               	swapf	??_ISR,w
  3909     052A  0083               	movwf	3
  3910     052B  0EFE               	swapf	btemp,f
  3911     052C  0E7E               	swapf	btemp,w
  3912     052D  0009               	retfie
  3913     052E                     __end_of_ISR:
  3914     007E                     btemp	set	126	;btemp
  3915     007E                     wtemp0	set	126
  3916                           
  3917                           	psect	intentry
  3918     0004                     __pintentry:	
  3919                           ;incstack = 0
  3920                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3921                           
  3922     0004                     interrupt_function:
  3923     007E                     saved_w	set	btemp
  3924     0004  00FE               	movwf	btemp
  3925     0005  0E03               	swapf	3,w
  3926     0006  00F0               	movwf	??_ISR
  3927     0007  080A               	movf	10,w
  3928     0008  00F1               	movwf	??_ISR+1
  3929     0009  120A  118A  2CE4   	ljmp	_ISR

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     61      70
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    lcd_out@str	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), STR_3(CODE[9]), STR_4(CODE[14]), 

    lcd_out_cp@str	PTR unsigned char  size(1) Largest target is 9
		 -> Print@My_Buffer(BANK0[9]), 

    S682$buffer	PTR unsigned char  size(1) Largest target is 0

    S682$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 9
		 -> Print@My_Buffer(BANK0[9]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _lcd_out->_LCD_Write_Char
    _lcd_set_cursor->_LCD_SEND_4BIT_CMD
    _Print->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _abs->___awmod
    _lcd_out_cp->_LCD_Write_Char
    _LCD_Write_Char->_SET_LCD_DATA_PINS
    _My_init_Function->_lcd_cmd
    _My_init_Function->_lcd_init
    _lcd_init->_LCD_SEND_4BIT_CMD
    _lcd_cmd->_LCD_SEND_4BIT_CMD
    _LCD_SEND_4BIT_CMD->_SET_LCD_DATA_PINS

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Print
    _my_delay->_timer_get_time_since_init
    _lcd_out->_lcd_set_cursor
    _Print->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    7592
                                             47 BANK0     14    14      0
                   _My_init_Function
                              _Print
                            _lcd_cmd
                            _lcd_out
                           _my_delay
          _timer_get_time_since_init
 ---------------------------------------------------------------------------------
 (1) _my_delay                                            16    12      4     285
                                              2 COMMON     4     4      0
                                              4 BANK0     12     8      4
          _timer_get_time_since_init
 ---------------------------------------------------------------------------------
 (1) _timer_get_time_since_init                            4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              5     3      2    1711
                                              5 BANK0      5     3      2
                     _LCD_Write_Char
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       6     5      1     725
                                              6 COMMON     1     1      0
                                              0 BANK0      5     4      1
                  _LCD_SEND_4BIT_CMD
 ---------------------------------------------------------------------------------
 (1) _Print                                               11     9      2    4651
                                             36 BANK0     11     9      2
                         _lcd_out_cp
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    16      3    4030
                                              9 COMMON     1     1      0
                                             20 BANK0     16    13      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     2      2    3598
                                             16 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12    10      2    3191
                                              7 COMMON     2     2      0
                                              6 BANK0     10     8      2
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              2 COMMON     5     5      0
                                              0 BANK0      3     0      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              4 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              2 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              2 COMMON     4     4      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _lcd_out_cp                                           4     4      0     420
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       5     5      0     254
                                              3 COMMON     5     5      0
                  _SET_LCD_DATA_PINS
 ---------------------------------------------------------------------------------
 (1) _My_init_Function                                     0     0      0     518
                            _lcd_cmd
                           _lcd_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             2     2      0     279
                                              6 COMMON     2     2      0
                  _LCD_SEND_4BIT_CMD
                  _SET_LCD_DATA_PINS
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              2     2      0     217
                                              6 COMMON     2     2      0
                  _LCD_SEND_4BIT_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_SEND_4BIT_CMD                                    3     3      0     155
                                              3 COMMON     3     3      0
                  _SET_LCD_DATA_PINS
 ---------------------------------------------------------------------------------
 (4) _SET_LCD_DATA_PINS                                    1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _My_init_Function
     _lcd_cmd
       _LCD_SEND_4BIT_CMD
         _SET_LCD_DATA_PINS
     _lcd_init
       _LCD_SEND_4BIT_CMD
       _SET_LCD_DATA_PINS
     _timer0_init
   _Print
     _lcd_out_cp
       _LCD_Write_Char
         _SET_LCD_DATA_PINS
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _lcd_cmd
   _lcd_out
     _LCD_Write_Char
     _lcd_set_cursor
       _LCD_SEND_4BIT_CMD
   _my_delay
     _timer_get_time_since_init
   _timer_get_time_since_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      72       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3D      46       5       87.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      72      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 10 03:24:41 2024

                                pc 0002                                 l41 0631  
                               l44 0678                                 l70 00D5  
                               l71 00DD                                 l58 0447  
                               l66 00B9                                 l75 00F7  
                     ___awdiv@sign 0073                                 fsr 0004  
                              l121 05D6                                l113 05BE  
                              l114 05C1                                l130 02D9  
                              l115 05C7                                l116 05C8  
                              l124 064B                                l117 05CE  
                              l133 0663                                l118 05CF  
                              l150 0560                                l119 05D5  
                              l127 0496                                l138 04E3  
                              l156 05B4                     lcd_cmd@command 0077  
                              l440 039D                                l185 06A7  
                              l179 069C                                l427 0342  
                              l800 03F7                                l811 06B0  
                              l737 0616                                l781 05F7  
                              l775 026F                                l788 068B  
                              _GIE 005F                                _RD0 0040  
                              _RD1 0041                                _RD2 0042  
                              _RD3 0043                                _RD4 0044  
                              _RD5 0045                                _ISR 04E4  
                              u800 037C                                u801 037B  
                              u820 038F                                u821 038E  
                              u805 0378                                u830 0394  
                              u750 034A                                u831 0393  
                              u815 0383                                u751 0349  
                              u760 0355                                u761 0354  
                              u770 0360                                u771 035F  
                              u790 0372                                u791 0371  
                              u785 0364                                _abs 0679  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0073        ??_timer_get_time_since_init 0072  
                  ?_lcd_set_cursor 0020                               ?_ISR 0070  
                             l2001 00E1                               l2003 00E7  
                             l2011 0102                               ?_abs 0024  
                             l1301 034F                               l2021 015E  
                             l2013 0109                               l2005 00ED  
                             l1311 0363                               l1303 0351  
                             l2023 0168                               l2015 0113  
                             l2007 00EF                               l1321 0382  
                             l1313 036A                               l1305 0355  
                             l2017 0143                               l2009 00FB  
                             l2025 016E                               l1323 0389  
                             l1315 036E                               l1307 035A  
                             l2019 014F                               l1501 069B  
                             l1317 0372                               l1309 0360  
                             l1325 038F                               l1327 0394  
                             l1319 037C                               l1329 0399  
                             l1701 02F1                               l1525 069D  
                             l1711 0307                               l1703 02F5  
                             l1295 0343                               l1721 0327  
                             l1713 030B                               l1705 02F7  
                             l1297 0344                               l1801 022F  
                             l1491 0696                               l1723 032E  
                             l1715 030F                               l1707 02FD  
                             l1299 034A                               l1803 0241  
                             l1811 0258                               l1821 063C  
                             l1493 0697                               l1717 0320  
                             l1709 0300                               l1725 0334  
                             l1741 03C0                               l1733 039E  
                             l1805 0247                               l1823 063F  
                             l1495 0698                               l1831 0452  
                             l1903 0593                               l1727 0339  
                             l1719 0326                               l1751 0680  
                             l1743 03DE                               l1735 03A5  
                             l1807 024E                               l1911 049A  
                             l1761 05CC                               l1825 0648  
                             l1817 0633                               l1497 0699  
                             l1489 068D                               l1841 0478  
                             l1833 0460                               l1905 0596  
                             l1729 033E                               l1737 03AA  
                             l1913 049F                               l1921 04BD  
                             l1763 05D3                               l1755 05B6  
                             l1819 0636                               l1499 069A  
                             l1931 0617                               l1843 047E  
                             l1835 0463                               l1827 0449  
                             l1907 05A1                               l1691 02DB  
                             l1747 0679                               l1739 03B1  
                             l1771 01A0                               l1851 05DA  
                             l1923 04C5                               l1915 04AC  
                             l1757 05BA                               l1861 0270  
                             l1941 062E                               l1933 0628  
                             l1845 0481                               l1837 046C  
                             l1829 044F                               l1909 05A9  
                             l1693 02E1                               l1749 067F  
                             l1781 01CD                               l1773 01A4  
                             l1765 0184                               l1853 05DD  
                             l1925 04D2                               l1917 04AF  
                             l1759 05C5                               l1871 029E  
                             l1863 0278                               l1943 0630  
                             l1935 062B                               l1847 048A  
                             l1839 046F                               l1695 02E6  
                             l1791 0211                               l1783 01D2  
                             l1775 01A8                               l1767 0193  
                             l1855 05E7                               l1927 04D5  
                             l1919 04B5                               l1951 0402  
                             l1881 02C1                               l1873 02A9  
                             l1865 027E                               l1937 062C  
                             l1849 048D                               l1697 02E8  
                             l1689 02DA                               l1793 0217  
                             l1785 01D4                               l1777 01B4  
                             l1769 0199                               l1857 05F5  
                             l1945 0664                               l1929 04DB  
                             l1961 0539                               l1883 02C7  
                             l1875 02AF                               l1867 0286  
                             l1939 062D                               l1699 02EC  
                             l1795 021C                               l1787 01DB  
                             l1779 01C0                               l1891 05FB  
                             l1947 0672                               l1963 053E  
                             l1955 0411                               l1971 002B  
                             l1885 02CD                               l1877 02B5  
                             l1869 0295                               l1797 0221  
                             l1789 01FE                               l1893 05FF  
                             l1965 054B                               l1957 043F  
                             l1949 03F8                               l1981 0058  
                             l1973 002F                               l1887 02D3  
                             l1879 02BB                               l1799 0226  
                             l1895 0601                               l1967 0553  
                             l1959 0531                               l1991 00AB  
                             l1983 0060                               l1975 0039  
                             l1889 064D                               l1897 0603  
                             l1993 00BD                               l1985 008E  
                             l1977 0048                               l1969 0026  
                             l1899 060D                               l1995 00C3  
                             l1987 009A                               l1979 004E  
                             l1997 00C9                               l1989 00A5  
                             l1999 00CF                               STR_1 058D  
                             STR_2 0567                               STR_3 0584  
                             STR_4 0576                               u1300 02E1  
                             u1301 02E0                               u1310 02EC  
                             u1311 02EB                               u1320 02FD  
                             u1400 03A5                               u1321 02FC  
                             u1401 03A4                               u1410 03AA  
                             u1411 03A9                               u1340 030F  
                             u1420 03C0                               u1500 01B4  
                             u1341 030E                               u1421 03BF  
                             u1501 01B3                               u1430 03DE  
                             u1510 01C0                               u1335 0301  
                             u1431 03DD                               u1511 01BF  
                             u1360 0320                               u1440 067F  
                             u1520 01D9                               u1600 05F5  
                             u1361 031F                               u1441 067E  
                             u1521 01D7                               u1601 05F4  
                             u1450 05BA                               u1530 01DA  
                             u1451 05B9                               u1355 0310  
                             u1435 03DA                               u1460 05C5  
                             u1620 05B4                               u1380 0334  
                             u1540 0217                               u1461 05C4  
                             u1621 05B3                               u1381 0333  
                             u1365 031C                               u1541 0216  
                             u1701 006F                               u1470 05CC  
                             u1390 0339                               u1550 021C  
                             u1630 049F                               u1710 008E  
                             u1702 0070                               u1471 05CB  
                             u1615 0650                               u1391 0338  
                             u1375 0328                               u1551 021B  
                             u1631 049E                               u1711 008D  
                             u1703 0075                               u1480 05D3  
                             u1560 0221                               u1800 0143  
                             u1720 00AB                               u1704 0076  
                             u1481 05D2                               u1561 0220  
                             u1801 0142                               u1721 00AA  
                             u1713 008A                               u1705 007B  
                             u1570 0226                               u1490 0193  
                             u1650 04C5                               u1730 00BD  
                             u1706 007C                               u1571 0225  
                             u1491 0192                               u1651 04C4  
                             u1803 013F                               u1731 00BC  
                             u1580 024D                               u1740 00C9  
                             u1581 024C                               u1645 04A5  
                             u1741 00C8                               u1750 00CF  
                             u1671 0420                               u1751 00CE  
                             u1680 043F                               u1672 0421  
                             u1760 00E1                               u1817 0467  
                             u1665 04CB                               u1681 043E  
                             u1673 0426                               u1761 00E0  
                             u1690 0560                               u1674 0427  
                             u1770 00ED                               u1827 0473  
                             u1595 0455                               u1691 055F  
                             u1675 042C                               u1771 00EC  
                             u1676 042D                               u1780 00FB  
                             u1837 0485                               u1685 043B  
                             u1781 00FA                               u1847 0491  
                             u1791 0124                               u1792 0125  
                             u1857 0282                               u1793 012A  
                             u1794 012B                               u1867 028A  
                             u1795 0130                               u1796 0131  
                             u1877 0299                               _INTE 005C  
                             _INTF 0059                               u1887 02A6  
                             u1897 0643                               i1l50 0527  
                             i1l49 04FA                               _TMR0 0001  
                             abs@a 0024                        lcd_out_cp@i 0021  
                             _dbuf 00A0                               _main 0026  
                             _prec 0063                               btemp 007E  
                             start 000C                              ??_ISR 0070  
                            ??_abs 0074                       main@end_time 0057  
                            ?_main 0070                    __end_of___awdiv 0343  
                  __end_of___awmod 039E                    ___awdiv@divisor 0020  
                  ___awdiv@counter 0072                       vfpfcnvrt@fmt 0026  
                            _TRISB 0086                    __end_of_lcd_cmd 0664  
                            _Print 0664                    __end_of_lcd_out 0561  
                            _flags 0065                              _fputc 039E  
                            _width 0061                              _putch 06B0  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 0617  
        _timer_get_time_since_init 069D                     _LCD_Write_Char 0448  
                  __initialization 000F                       __end_of_main 0181  
                ?_My_init_Function 0070                             ??_main 004F  
               ??_My_init_Function 0078                             ?_Print 0044  
                           _ADCON1 009F                             ?_fputc 0020  
                 ___awdiv@dividend 0022                             ?_putch 0070  
                           i1l1601 0502                             i1l1603 0508  
                           i1l1611 0522                             i1l1605 050F  
                           i1l1607 051F                             i1l1609 0521  
                           i1l1591 04ED                             u114_20 04E9  
                           i1l1593 04F7                             u114_21 04E8  
                           i1l1595 04F8                             i1l1587 04E4  
                           i1l1589 04E9                             i1l1599 04FE  
                           u115_20 04ED                             u115_21 04EC  
                           u116_20 04FE                             u116_21 04FD  
                           u117_20 0502                             u117_21 0501  
                           u118_20 050F                             u118_21 050E  
                           _INTEDG 040E                      vfpfcnvrt@done 0028  
                           _TMR0IE 005D                             _TMR0IF 005A  
                           _TRISA4 042C                             _TRISD0 0440  
                           _TRISD1 0441                             _TRISD2 0442  
                           _TRISD3 0443                             _TRISD4 0444  
                           _TRISD5 0445             __end_of_LCD_Write_Char 0497  
                     vfprintf@cfmt 0033                   __end_of_lcd_init 02DA  
                   my_delay@mytime 0024                          ??___awdiv 0072  
                        ??___awmod 0072                      lcd_out_cp@str 0020  
                     ?_timer0_init 0070                         Print@mynum 0044  
                 ___awdiv@quotient 0074                    ___awmod@divisor 0020  
                  ___awmod@counter 0072                     Print@My_Buffer 0046  
                        ??_lcd_cmd 0076                          ??_lcd_out 0078  
                 __end_of_my_delay 0448                             fputc@c 0020  
                           saved_w 007E                             putch@c 0070  
                 __end_of_vfprintf 05F8                          ??_sprintf 0079  
               my_delay@start_time 0028            __end_of__initialization 0022  
                  ?_LCD_Write_Char 0070                  _LCD_SEND_4BIT_CMD 0632  
                   __pcstackCOMMON 0070                      __end_of_Print 0679  
               ?_LCD_SEND_4BIT_CMD 0070                      __end_of_fputc 03F8  
                    __end_of_putch 06B1                   ??_lcd_set_cursor 0076  
              ??_LCD_SEND_4BIT_CMD 0073                     _OPTION_REGbits 0081  
                          ??_Print 007A                            ??_fputc 0072  
                          ??_putch 0072                         __pbssBANK0 005D  
                       __pbssBANK1 00A0          __end_of_LCD_SEND_4BIT_CMD 064C  
                       __pmaintext 0026                         __pintentry 0004  
                       _lcd_out_cp 0590                          ?_lcd_init 0070  
                       __stringtab 0561                          ?_my_delay 0024  
                          ___awdiv 02DA                            ___awmod 0343  
                        ?_vfprintf 0030                            __ptext1 03F8  
                          __ptext2 069D                            __ptext3 052E  
                          __ptext4 0497                            __ptext5 0664  
                          __ptext6 05F8                            __ptext7 05D7  
                          __ptext8 0181                            __ptext9 039E  
                          _lcd_cmd 064C  __end_of_timer_get_time_since_init 06A8  
                          _lcd_out 052E                   ___awmod@dividend 0022  
                          _sprintf 05F8                            clrloop0 06A9  
                       ??_lcd_init 0076               end_of_initialization 0022  
                          fputc@fp 0022                         ??_my_delay 0072  
                __end_of_vfpfcnvrt 0270                   vfpfcnvrt@convarg 002B  
                       ??_vfprintf 0079                     main@start_time 0053  
                        _PORTBbits 0006                        ?_lcd_out_cp 0070  
                 ??_LCD_Write_Char 0073                         lcd_out@col 0025  
                       lcd_out@row 0027                         lcd_out@str 0026  
            _timer0_time_passed_ms 005D                        vfpfcnvrt@ap 0027  
                      vfpfcnvrt@cp 002A                        vfpfcnvrt@fp 0029  
              start_initialization 000F                        __end_of_ISR 052E  
                      __end_of_abs 068C                        vfprintf@fmt 0030  
                      __pbssCOMMON 007A                          ___latbits 0002  
                    __pcstackBANK0 0020                lcd_set_cursor@High4 0023  
                 _My_init_Function 0617                           ?___awdiv 0020  
                         ?___awmod 0020                          __pstrings 0561  
                         ?_lcd_cmd 0070                           ?_lcd_out 0025  
                         ?_sprintf 0034                  _SET_LCD_DATA_PINS 05B5  
                interrupt_function 0004                 ?_SET_LCD_DATA_PINS 0070  
                        clear_ram0 06A8                    lcd_set_cursor@c 0020  
                  lcd_set_cursor@r 0021                ??_SET_LCD_DATA_PINS 0072  
                    ??_timer0_init 0072                          _vfpfcnvrt 0181  
                      __stringbase 0566         ?_timer_get_time_since_init 0020  
                        main@count 005B                       ??_lcd_out_cp 0078  
                 my_delay@end_time 002C                         vfpfcnvrt@c 002F  
        __end_of_SET_LCD_DATA_PINS 05D7                         vfprintf@ap 0031  
                       vfprintf@fp 0032                LCD_Write_Char@High4 0076  
               __end_of_lcd_out_cp 05B5                         ?_vfpfcnvrt 0026  
               __end_of__stringtab 0567                 lcd_set_cursor@Low4 0022  
               lcd_set_cursor@Temp 0024                __end_of_timer0_init 069D  
                       sprintf@fmt 0034               LCD_SEND_4BIT_CMD@CMD 0075  
             timer0_init@prescaler 0073                           __ptext10 06B0  
                         __ptext11 0679                           __ptext20 0632  
                         __ptext12 0343                           __ptext21 05B5  
                         __ptext13 02DA                           __ptext22 04E4  
                         __ptext14 0590                           __ptext15 0448  
                         __ptext16 0617                           __ptext17 068C  
                         __ptext18 0270                           __ptext19 064C  
                         _lcd_init 0270                           _my_delay 03F8  
                         _vfprintf 05D7                           lcd_out@i 0028  
         __end_of_My_init_Function 0632                 LCD_Write_Char@Data 0077  
               LCD_Write_Char@Low4 0075                           intlevel1 0000  
                   _lcd_set_cursor 0497                          sprintf@ap 0037  
                        stringcode 0561                        _timer0_init 068C  
                      ??_vfpfcnvrt 0077                         _OPTION_REG 0081  
                         sprintf@f 0039                           sprintf@s 0038  
                         stringdir 0561                           stringtab 0561  
           __end_of_lcd_set_cursor 04E4                       _overflow_cnt 007A  
            SET_LCD_DATA_PINS@Data 0072  
