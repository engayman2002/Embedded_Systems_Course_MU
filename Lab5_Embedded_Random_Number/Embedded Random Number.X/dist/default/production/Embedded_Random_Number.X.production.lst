

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Apr 17 03:39:12 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0008                     _PORTDbits	set	8
   171     0006                     _PORTBbits	set	6
   172     0008                     _PORTD	set	8
   173     0006                     _PORTB	set	6
   174     0088                     _TRISD	set	136
   175     0086                     _TRISB	set	134
   176     0081                     _OPTION_REGbits	set	129
   177                           
   178                           	psect	cinit
   179     07F6                     start_initialization:	
   180                           ; #config settings
   181                           
   182     07F6                     __initialization:
   183                           
   184                           ; Clear objects allocated to BANK0
   185     07F6  1283               	bcf	3,5	;RP0=0, select bank0
   186     07F7  1303               	bcf	3,6	;RP1=0, select bank0
   187     07F8  01B5               	clrf	__pbssBANK0& (0+127)
   188     07F9  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   189     07FA  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   190     07FB  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   191     07FC                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     07FC                     __end_of__initialization:
   195     07FC  0183               	clrf	3
   196     07FD  120A  118A  2F69   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	bssBANK0
   199     0035                     __pbssBANK0:
   200     0035                     _seed:
   201     0035                     	ds	4
   202                           
   203                           	psect	cstackCOMMON
   204     0070                     __pcstackCOMMON:
   205     0070                     ?_keypad_init:
   206     0070                     ??_keypad_init:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_keypad_get_key:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ??_keypad_get_key:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ?_main:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ?___lmul:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     keypad_get_key@num:	
   222                           ; 4 bytes @ 0x0
   223                           
   224     0070                     ___lmul@multiplier:	
   225                           ; 1 bytes @ 0x0
   226                           
   227                           
   228                           ; 4 bytes @ 0x0
   229     0070                     	ds	4
   230     0074                     ___lmul@multiplicand:
   231                           
   232                           ; 4 bytes @ 0x4
   233     0074                     	ds	4
   234     0078                     ??___lmul:
   235                           
   236                           ; 1 bytes @ 0x8
   237     0078                     	ds	1
   238     0079                     ___lmul@product:
   239                           
   240                           ; 4 bytes @ 0x9
   241     0079                     	ds	4
   242     007D                     ??___awmod:
   243                           
   244                           	psect	cstackBANK0
   245     0020                     __pcstackBANK0:	
   246                           ; 1 bytes @ 0xD
   247                           
   248     0020                     ?_rand:
   249                           
   250                           ; 2 bytes @ 0x0
   251     0020                     	ds	2
   252     0022                     ??_rand:
   253                           
   254                           ; 1 bytes @ 0x2
   255     0022                     	ds	4
   256     0026                     ?___awmod:
   257     0026                     ___awmod@divisor:	
   258                           ; 2 bytes @ 0x6
   259                           
   260                           
   261                           ; 2 bytes @ 0x6
   262     0026                     	ds	2
   263     0028                     ___awmod@dividend:
   264                           
   265                           ; 2 bytes @ 0x8
   266     0028                     	ds	2
   267     002A                     ___awmod@counter:
   268                           
   269                           ; 1 bytes @ 0xA
   270     002A                     	ds	1
   271     002B                     ___awmod@sign:
   272                           
   273                           ; 1 bytes @ 0xB
   274     002B                     	ds	1
   275     002C                     ??_main:
   276                           
   277                           ; 1 bytes @ 0xC
   278     002C                     	ds	3
   279     002F                     main@guess_num:
   280                           
   281                           ; 2 bytes @ 0xF
   282     002F                     	ds	2
   283     0031                     main@i:
   284                           
   285                           ; 2 bytes @ 0x11
   286     0031                     	ds	2
   287     0033                     main@actual_num:
   288                           
   289                           ; 2 bytes @ 0x13
   290     0033                     	ds	2
   291                           
   292                           	psect	maintext
   293     0769                     __pmaintext:	
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 89 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  actual_num      2   19[BANK0 ] int 
   304 ;;  i               2   17[BANK0 ] int 
   305 ;;  guess_num       2   15[BANK0 ] int 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : B00/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       6       0       0       0
   317 ;;      Temps:          0       3       0       0       0
   318 ;;      Totals:         0       9       0       0       0
   319 ;;Total ram usage:        9 bytes
   320 ;; Hardware stack levels required when called: 2
   321 ;; This function calls:
   322 ;;		___awmod
   323 ;;		_keypad_get_key
   324 ;;		_keypad_init
   325 ;;		_rand
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331     0769                     _main:	
   332                           ;psect for function _main
   333                           
   334     0769                     l853:	
   335                           ;incstack = 0
   336                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   337                           
   338                           
   339                           ;main.c: 90:     keypad_init();
   340     0769  120A  118A  2612  120A  118A  	fcall	_keypad_init
   341     076E                     l855:
   342                           
   343                           ;main.c: 92:     int actual_num;;main.c: 93:     int guess_num;;main.c: 95:     int i;;m
      +                          ain.c: 96:     for(i=0;i<3;i++)
   344     076E  1283               	bcf	3,5	;RP0=0, select bank0
   345     076F  1303               	bcf	3,6	;RP1=0, select bank0
   346     0770  01B1               	clrf	main@i
   347     0771  01B2               	clrf	main@i+1
   348     0772                     l861:
   349                           
   350                           ;main.c: 97:     {;main.c: 98:         actual_num=(rand() % ((9)-(1)+1)+(1));
   351     0772  3009               	movlw	9
   352     0773  1283               	bcf	3,5	;RP0=0, select bank0
   353     0774  1303               	bcf	3,6	;RP1=0, select bank0
   354     0775  00A6               	movwf	___awmod@divisor
   355     0776  3000               	movlw	0
   356     0777  00A7               	movwf	___awmod@divisor+1
   357     0778  120A  118A  2668  120A  118A  	fcall	_rand
   358     077D  1283               	bcf	3,5	;RP0=0, select bank0
   359     077E  1303               	bcf	3,6	;RP1=0, select bank0
   360     077F  0821               	movf	?_rand+1,w
   361     0780  00A9               	movwf	___awmod@dividend+1
   362     0781  0820               	movf	?_rand,w
   363     0782  00A8               	movwf	___awmod@dividend
   364     0783  120A  118A  270E  120A  118A  	fcall	___awmod
   365     0788  1283               	bcf	3,5	;RP0=0, select bank0
   366     0789  1303               	bcf	3,6	;RP1=0, select bank0
   367     078A  0826               	movf	?___awmod,w
   368     078B  3E01               	addlw	1
   369     078C  00B3               	movwf	main@actual_num
   370     078D  0827               	movf	?___awmod+1,w
   371     078E  1803               	skipnc
   372     078F  3E01               	addlw	1
   373     0790  3E00               	addlw	0
   374     0791  00B4               	movwf	main@actual_num+1
   375     0792                     l863:
   376                           
   377                           ;main.c: 99:         guess_num=keypad_get_key();
   378     0792  120A  118A  26B9  120A  118A  	fcall	_keypad_get_key
   379     0797  1283               	bcf	3,5	;RP0=0, select bank0
   380     0798  1303               	bcf	3,6	;RP1=0, select bank0
   381     0799  00AC               	movwf	??_main
   382     079A  01AD               	clrf	??_main+1
   383     079B  082C               	movf	??_main,w
   384     079C  00AF               	movwf	main@guess_num
   385     079D  082D               	movf	??_main+1,w
   386     079E  00B0               	movwf	main@guess_num+1
   387     079F                     l865:
   388                           
   389                           ;main.c: 101:         _delay((unsigned long)((1000)*((8000000)/4000.0)));
   390     079F  300B               	movlw	11
   391     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   392     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   393     07A2  00AE               	movwf	??_main+2
   394     07A3  3026               	movlw	38
   395     07A4  00AD               	movwf	??_main+1
   396     07A5  305D               	movlw	93
   397     07A6  00AC               	movwf	??_main
   398     07A7                     u697:
   399     07A7  0BAC               	decfsz	??_main,f
   400     07A8  2FA7               	goto	u697
   401     07A9  0BAD               	decfsz	??_main+1,f
   402     07AA  2FA7               	goto	u697
   403     07AB  0BAE               	decfsz	??_main+2,f
   404     07AC  2FA7               	goto	u697
   405     07AD                     l867:
   406                           
   407                           ;main.c: 105:         if(actual_num==guess_num)
   408     07AD  1283               	bcf	3,5	;RP0=0, select bank0
   409     07AE  1303               	bcf	3,6	;RP1=0, select bank0
   410     07AF  0830               	movf	main@guess_num+1,w
   411     07B0  0634               	xorwf	main@actual_num+1,w
   412     07B1  1D03               	skipz
   413     07B2  2FB5               	goto	u615
   414     07B3  082F               	movf	main@guess_num,w
   415     07B4  0633               	xorwf	main@actual_num,w
   416     07B5                     u615:
   417     07B5  1D03               	skipz
   418     07B6  2FB8               	goto	u611
   419     07B7  2FB9               	goto	u610
   420     07B8                     u611:
   421     07B8  2FBC               	goto	l49
   422     07B9                     u610:
   423     07B9                     l869:
   424                           
   425                           ;main.c: 106:         {;main.c: 107:             PORTD=0;
   426     07B9  0188               	clrf	8	;volatile
   427     07BA                     l871:
   428                           
   429                           ;main.c: 108:             PORTDbits.RD7=1;
   430     07BA  1788               	bsf	8,7	;volatile
   431     07BB                     l50:	
   432                           ;main.c: 109:             while(1);
   433                           
   434     07BB                     l51:
   435     07BB  2FBB               	goto	l50
   436     07BC                     l49:	
   437                           ;main.c: 111:         else
   438                           
   439                           
   440                           ;main.c: 112:         {;main.c: 113:             PORTDbits.RD0= ((actual_num & 1<<2)!=0)
      +                          ;
   441     07BC  1933               	btfsc	main@actual_num,2
   442     07BD  2FBF               	goto	u621
   443     07BE  2FC3               	goto	u620
   444     07BF                     u621:
   445     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   446     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   447     07C1  1408               	bsf	8,0	;volatile
   448     07C2  2FC6               	goto	u634
   449     07C3                     u620:
   450     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   451     07C4  1303               	bcf	3,6	;RP1=0, select bank0
   452     07C5  1008               	bcf	8,0	;volatile
   453     07C6                     u634:
   454                           
   455                           ;main.c: 114:             PORTDbits.RD1= ((actual_num & 1<<1)!=0);
   456     07C6  18B3               	btfsc	main@actual_num,1
   457     07C7  2FC9               	goto	u641
   458     07C8  2FCD               	goto	u640
   459     07C9                     u641:
   460     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   461     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   462     07CB  1488               	bsf	8,1	;volatile
   463     07CC  2FD0               	goto	u654
   464     07CD                     u640:
   465     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   466     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   467     07CF  1088               	bcf	8,1	;volatile
   468     07D0                     u654:
   469                           
   470                           ;main.c: 115:             PORTDbits.RD2= ((actual_num & 1<<0)!=0);
   471     07D0  1833               	btfsc	main@actual_num,0
   472     07D1  2FD3               	goto	u661
   473     07D2  2FD7               	goto	u660
   474     07D3                     u661:
   475     07D3  1283               	bcf	3,5	;RP0=0, select bank0
   476     07D4  1303               	bcf	3,6	;RP1=0, select bank0
   477     07D5  1508               	bsf	8,2	;volatile
   478     07D6  2FDA               	goto	u674
   479     07D7                     u660:
   480     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   481     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   482     07D9  1108               	bcf	8,2	;volatile
   483     07DA                     u674:
   484     07DA                     l873:
   485                           
   486                           ;main.c: 117:     }
   487     07DA  3001               	movlw	1
   488     07DB  07B1               	addwf	main@i,f
   489     07DC  1803               	skipnc
   490     07DD  0AB2               	incf	main@i+1,f
   491     07DE  3000               	movlw	0
   492     07DF  07B2               	addwf	main@i+1,f
   493     07E0                     l875:
   494     07E0  0832               	movf	main@i+1,w
   495     07E1  3A80               	xorlw	128
   496     07E2  00FF               	movwf	btemp+1
   497     07E3  3080               	movlw	128
   498     07E4  027F               	subwf	btemp+1,w
   499     07E5  1D03               	skipz
   500     07E6  2FE9               	goto	u685
   501     07E7  3003               	movlw	3
   502     07E8  0231               	subwf	main@i,w
   503     07E9                     u685:
   504     07E9  1C03               	skipc
   505     07EA  2FEC               	goto	u681
   506     07EB  2FED               	goto	u680
   507     07EC                     u681:
   508     07EC  2F72               	goto	l861
   509     07ED                     u680:
   510     07ED                     l877:
   511                           
   512                           ;main.c: 119:     PORTD=0x07;
   513     07ED  3007               	movlw	7
   514     07EE  1283               	bcf	3,5	;RP0=0, select bank0
   515     07EF  1303               	bcf	3,6	;RP1=0, select bank0
   516     07F0  0088               	movwf	8	;volatile
   517     07F1                     l879:
   518                           
   519                           ;main.c: 120:     PORTDbits.RD6=1;
   520     07F1  1708               	bsf	8,6	;volatile
   521     07F2                     l54:	
   522                           ;main.c: 121:     while(1);
   523                           
   524     07F2                     l55:
   525     07F2  2FF2               	goto	l54
   526     07F3  120A  118A  2800   	ljmp	start
   527     07F6                     __end_of_main:
   528                           
   529                           	psect	text1
   530     0668                     __ptext1:	
   531 ;; *************** function _rand *****************
   532 ;; Defined at:
   533 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\rand.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  2    0[BANK0 ] int 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       2       0       0       0
   548 ;;      Locals:         0       0       0       0       0
   549 ;;      Temps:          0       4       0       0       0
   550 ;;      Totals:         0       6       0       0       0
   551 ;;Total ram usage:        6 bytes
   552 ;; Hardware stack levels used: 1
   553 ;; Hardware stack levels required when called: 1
   554 ;; This function calls:
   555 ;;		___lmul
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561     0668                     _rand:	
   562                           ;psect for function _rand
   563                           
   564     0668                     l809:	
   565                           ;incstack = 0
   566                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
   567                           
   568     0668  3001               	movlw	1
   569     0669  1283               	bcf	3,5	;RP0=0, select bank0
   570     066A  1303               	bcf	3,6	;RP1=0, select bank0
   571     066B  00A2               	movwf	??_rand
   572     066C  3000               	movlw	0
   573     066D  00A3               	movwf	??_rand+1
   574     066E  3000               	movlw	0
   575     066F  00A4               	movwf	??_rand+2
   576     0670  3000               	movlw	0
   577     0671  00A5               	movwf	??_rand+3
   578     0672  0838               	movf	_seed+3,w
   579     0673  00F3               	movwf	___lmul@multiplier+3
   580     0674  0837               	movf	_seed+2,w
   581     0675  00F2               	movwf	___lmul@multiplier+2
   582     0676  0836               	movf	_seed+1,w
   583     0677  00F1               	movwf	___lmul@multiplier+1
   584     0678  0835               	movf	_seed,w
   585     0679  00F0               	movwf	___lmul@multiplier
   586     067A  304C               	movlw	76
   587     067B  00F7               	movwf	___lmul@multiplicand+3
   588     067C  3095               	movlw	149
   589     067D  00F6               	movwf	___lmul@multiplicand+2
   590     067E  307F               	movlw	127
   591     067F  00F5               	movwf	___lmul@multiplicand+1
   592     0680  302D               	movlw	45
   593     0681  00F4               	movwf	___lmul@multiplicand
   594     0682  120A  118A  2622  120A  118A  	fcall	___lmul
   595     0687  0870               	movf	?___lmul,w
   596     0688  1283               	bcf	3,5	;RP0=0, select bank0
   597     0689  1303               	bcf	3,6	;RP1=0, select bank0
   598     068A  07A2               	addwf	??_rand,f
   599     068B  0871               	movf	?___lmul+1,w
   600     068C  1803               	skipnc
   601     068D  0F71               	incfsz	?___lmul+1,w
   602     068E  2E90               	goto	u500
   603     068F  2E91               	goto	u501
   604     0690                     u500:
   605     0690  07A3               	addwf	??_rand+1,f
   606     0691                     u501:
   607     0691  0872               	movf	?___lmul+2,w
   608     0692  1803               	skipnc
   609     0693  0F72               	incfsz	?___lmul+2,w
   610     0694  2E96               	goto	u502
   611     0695  2E97               	goto	u503
   612     0696                     u502:
   613     0696  07A4               	addwf	??_rand+2,f
   614     0697                     u503:
   615     0697  0873               	movf	?___lmul+3,w
   616     0698  1803               	skipnc
   617     0699  0A73               	incf	?___lmul+3,w
   618     069A  07A5               	addwf	??_rand+3,f
   619     069B  0825               	movf	??_rand+3,w
   620     069C  00B8               	movwf	_seed+3
   621     069D  0824               	movf	??_rand+2,w
   622     069E  00B7               	movwf	_seed+2
   623     069F  0823               	movf	??_rand+1,w
   624     06A0  00B6               	movwf	_seed+1
   625     06A1  0822               	movf	??_rand,w
   626     06A2  00B5               	movwf	_seed
   627     06A3                     l811:
   628     06A3  0835               	movf	_seed,w
   629     06A4  00A2               	movwf	??_rand
   630     06A5  0836               	movf	_seed+1,w
   631     06A6  00A3               	movwf	??_rand+1
   632     06A7  0837               	movf	_seed+2,w
   633     06A8  00A4               	movwf	??_rand+2
   634     06A9  0838               	movf	_seed+3,w
   635     06AA  00A5               	movwf	??_rand+3
   636     06AB  3011               	movlw	17
   637     06AC                     u515:
   638     06AC  1003               	clrc
   639     06AD  0CA5               	rrf	??_rand+3,f
   640     06AE  0CA4               	rrf	??_rand+2,f
   641     06AF  0CA3               	rrf	??_rand+1,f
   642     06B0  0CA2               	rrf	??_rand,f
   643     06B1                     u510:
   644     06B1  3EFF               	addlw	-1
   645     06B2  1D03               	skipz
   646     06B3  2EAC               	goto	u515
   647     06B4  0823               	movf	??_rand+1,w
   648     06B5  00A1               	movwf	?_rand+1
   649     06B6  0822               	movf	??_rand,w
   650     06B7  00A0               	movwf	?_rand
   651     06B8                     l607:
   652     06B8  0008               	return
   653     06B9                     __end_of_rand:
   654                           
   655                           	psect	text2
   656     0622                     __ptext2:	
   657 ;; *************** function ___lmul *****************
   658 ;; Defined at:
   659 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  multiplier      4    0[COMMON] unsigned long 
   662 ;;  multiplicand    4    4[COMMON] unsigned long 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  product         4    9[COMMON] unsigned long 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  4    0[COMMON] unsigned long 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         8       0       0       0       0
   675 ;;      Locals:         4       0       0       0       0
   676 ;;      Temps:          1       0       0       0       0
   677 ;;      Totals:        13       0       0       0       0
   678 ;;Total ram usage:       13 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_rand
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687     0622                     ___lmul:	
   688                           ;psect for function ___lmul
   689                           
   690     0622                     l745:	
   691                           ;incstack = 0
   692                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   693                           
   694     0622  3000               	movlw	0
   695     0623  00FC               	movwf	___lmul@product+3
   696     0624  3000               	movlw	0
   697     0625  00FB               	movwf	___lmul@product+2
   698     0626  3000               	movlw	0
   699     0627  00FA               	movwf	___lmul@product+1
   700     0628  3000               	movlw	0
   701     0629  00F9               	movwf	___lmul@product
   702     062A                     l747:
   703     062A  1C70               	btfss	___lmul@multiplier,0
   704     062B  2E2D               	goto	u351
   705     062C  2E2E               	goto	u350
   706     062D                     u351:
   707     062D  2E45               	goto	l751
   708     062E                     u350:
   709     062E                     l749:
   710     062E  0874               	movf	___lmul@multiplicand,w
   711     062F  07F9               	addwf	___lmul@product,f
   712     0630  0875               	movf	___lmul@multiplicand+1,w
   713     0631  1103               	clrz
   714     0632  1803               	skipnc
   715     0633  3E01               	addlw	1
   716     0634  1903               	skipnz
   717     0635  2E37               	goto	u361
   718     0636  07FA               	addwf	___lmul@product+1,f
   719     0637                     u361:
   720     0637  0876               	movf	___lmul@multiplicand+2,w
   721     0638  1103               	clrz
   722     0639  1803               	skipnc
   723     063A  3E01               	addlw	1
   724     063B  1903               	skipnz
   725     063C  2E3E               	goto	u362
   726     063D  07FB               	addwf	___lmul@product+2,f
   727     063E                     u362:
   728     063E  0877               	movf	___lmul@multiplicand+3,w
   729     063F  1103               	clrz
   730     0640  1803               	skipnc
   731     0641  3E01               	addlw	1
   732     0642  1903               	skipnz
   733     0643  2E45               	goto	u363
   734     0644  07FC               	addwf	___lmul@product+3,f
   735     0645                     u363:
   736     0645                     l751:
   737     0645  3001               	movlw	1
   738     0646  00F8               	movwf	??___lmul
   739     0647                     u375:
   740     0647  1003               	clrc
   741     0648  0DF4               	rlf	___lmul@multiplicand,f
   742     0649  0DF5               	rlf	___lmul@multiplicand+1,f
   743     064A  0DF6               	rlf	___lmul@multiplicand+2,f
   744     064B  0DF7               	rlf	___lmul@multiplicand+3,f
   745     064C  0BF8               	decfsz	??___lmul,f
   746     064D  2E47               	goto	u375
   747     064E                     l753:
   748     064E  3001               	movlw	1
   749     064F                     u385:
   750     064F  1003               	clrc
   751     0650  0CF3               	rrf	___lmul@multiplier+3,f
   752     0651  0CF2               	rrf	___lmul@multiplier+2,f
   753     0652  0CF1               	rrf	___lmul@multiplier+1,f
   754     0653  0CF0               	rrf	___lmul@multiplier,f
   755     0654  3EFF               	addlw	-1
   756     0655  1D03               	skipz
   757     0656  2E4F               	goto	u385
   758     0657  0873               	movf	___lmul@multiplier+3,w
   759     0658  0472               	iorwf	___lmul@multiplier+2,w
   760     0659  0471               	iorwf	___lmul@multiplier+1,w
   761     065A  0470               	iorwf	___lmul@multiplier,w
   762     065B  1D03               	skipz
   763     065C  2E5E               	goto	u391
   764     065D  2E5F               	goto	u390
   765     065E                     u391:
   766     065E  2E2A               	goto	l747
   767     065F                     u390:
   768     065F                     l755:
   769     065F  087C               	movf	___lmul@product+3,w
   770     0660  00F3               	movwf	?___lmul+3
   771     0661  087B               	movf	___lmul@product+2,w
   772     0662  00F2               	movwf	?___lmul+2
   773     0663  087A               	movf	___lmul@product+1,w
   774     0664  00F1               	movwf	?___lmul+1
   775     0665  0879               	movf	___lmul@product,w
   776     0666  00F0               	movwf	?___lmul
   777     0667                     l157:
   778     0667  0008               	return
   779     0668                     __end_of___lmul:
   780                           
   781                           	psect	text3
   782     0612                     __ptext3:	
   783 ;; *************** function _keypad_init *****************
   784 ;; Defined at:
   785 ;;		line 21 in file "main.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, status,2
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0
   802 ;;      Totals:         0       0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812     0612                     _keypad_init:	
   813                           ;psect for function _keypad_init
   814                           
   815     0612                     l759:	
   816                           ;incstack = 0
   817                           ; Regs used in _keypad_init: [wreg+status,2]
   818                           
   819                           
   820                           ;main.c: 23:     OPTION_REGbits.nRBPU = 0;
   821     0612  1683               	bsf	3,5	;RP0=1, select bank1
   822     0613  1303               	bcf	3,6	;RP1=0, select bank1
   823     0614  1381               	bcf	1,7	;volatile
   824     0615                     l761:
   825                           
   826                           ;main.c: 24:     TRISB = 0x38;
   827     0615  3038               	movlw	56
   828     0616  0086               	movwf	6	;volatile
   829                           
   830                           ;main.c: 25:     PORTB =0x07;
   831     0617  3007               	movlw	7
   832     0618  1283               	bcf	3,5	;RP0=0, select bank0
   833     0619  1303               	bcf	3,6	;RP1=0, select bank0
   834     061A  0086               	movwf	6	;volatile
   835     061B                     l763:
   836                           
   837                           ;main.c: 26:     TRISD = 0;
   838     061B  1683               	bsf	3,5	;RP0=1, select bank1
   839     061C  1303               	bcf	3,6	;RP1=0, select bank1
   840     061D  0188               	clrf	8	;volatile
   841     061E                     l765:
   842                           
   843                           ;main.c: 27:     PORTD = 0;
   844     061E  1283               	bcf	3,5	;RP0=0, select bank0
   845     061F  1303               	bcf	3,6	;RP1=0, select bank0
   846     0620  0188               	clrf	8	;volatile
   847     0621                     l21:
   848     0621  0008               	return
   849     0622                     __end_of_keypad_init:
   850                           
   851                           	psect	text4
   852     06B9                     __ptext4:	
   853 ;; *************** function _keypad_get_key *****************
   854 ;; Defined at:
   855 ;;		line 31 in file "main.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  num             1    0[COMMON] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      unsigned char 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         1       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0
   872 ;;      Totals:         1       0       0       0       0
   873 ;;Total ram usage:        1 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882     06B9                     _keypad_get_key:	
   883                           ;psect for function _keypad_get_key
   884                           
   885     06B9                     l769:	
   886                           ;incstack = 0
   887                           ; Regs used in _keypad_get_key: [wreg+status,2+status,0]
   888                           
   889                           
   890                           ;main.c: 33:     char num='\0';
   891     06B9  01F0               	clrf	keypad_get_key@num
   892                           
   893                           ;main.c: 34:     while(num=='\0')
   894     06BA  2F03               	goto	l803
   895     06BB                     l771:
   896                           
   897                           ;main.c: 35:     {;main.c: 37:         PORTB=0x07;
   898     06BB  3007               	movlw	7
   899     06BC  1283               	bcf	3,5	;RP0=0, select bank0
   900     06BD  1303               	bcf	3,6	;RP1=0, select bank0
   901     06BE  0086               	movwf	6	;volatile
   902     06BF                     l773:
   903                           
   904                           ;main.c: 38:         PORTBbits.RB0=0;
   905     06BF  1006               	bcf	6,0	;volatile
   906     06C0                     l775:
   907                           
   908                           ;main.c: 39:         if(PORTBbits.RB3==0)
   909     06C0  1986               	btfsc	6,3	;volatile
   910     06C1  2EC3               	goto	u401
   911     06C2  2EC4               	goto	u400
   912     06C3                     u401:
   913     06C3  2EC7               	goto	l26
   914     06C4                     u400:
   915     06C4                     l777:
   916                           
   917                           ;main.c: 40:         {;main.c: 41:             num=1;
   918     06C4  01F0               	clrf	keypad_get_key@num
   919     06C5  0AF0               	incf	keypad_get_key@num,f
   920                           
   921                           ;main.c: 42:         }
   922     06C6  2ED4               	goto	l27
   923     06C7                     l26:	
   924                           ;main.c: 43:         else if(PORTBbits.RB4==0)
   925                           
   926     06C7  1A06               	btfsc	6,4	;volatile
   927     06C8  2ECA               	goto	u411
   928     06C9  2ECB               	goto	u410
   929     06CA                     u411:
   930     06CA  2ECE               	goto	l28
   931     06CB                     u410:
   932     06CB                     l779:
   933                           
   934                           ;main.c: 44:         {;main.c: 45:             num=2;
   935     06CB  3002               	movlw	2
   936     06CC  00F0               	movwf	keypad_get_key@num
   937                           
   938                           ;main.c: 46:         }
   939     06CD  2ED4               	goto	l27
   940     06CE                     l28:	
   941                           ;main.c: 47:         else if(PORTBbits.RB5==0)
   942                           
   943     06CE  1A86               	btfsc	6,5	;volatile
   944     06CF  2ED1               	goto	u421
   945     06D0  2ED2               	goto	u420
   946     06D1                     u421:
   947     06D1  2ED4               	goto	l27
   948     06D2                     u420:
   949     06D2                     l781:
   950                           
   951                           ;main.c: 48:         {;main.c: 49:             num=3;
   952     06D2  3003               	movlw	3
   953     06D3  00F0               	movwf	keypad_get_key@num
   954     06D4                     l27:
   955                           
   956                           ;main.c: 53:         PORTB=0x07;
   957     06D4  3007               	movlw	7
   958     06D5  0086               	movwf	6	;volatile
   959     06D6                     l783:
   960                           
   961                           ;main.c: 54:         PORTBbits.RB1=0;
   962     06D6  1086               	bcf	6,1	;volatile
   963     06D7                     l785:
   964                           
   965                           ;main.c: 55:         if(PORTBbits.RB3==0)
   966     06D7  1986               	btfsc	6,3	;volatile
   967     06D8  2EDA               	goto	u431
   968     06D9  2EDB               	goto	u430
   969     06DA                     u431:
   970     06DA  2EDE               	goto	l31
   971     06DB                     u430:
   972     06DB                     l787:
   973                           
   974                           ;main.c: 56:         {;main.c: 57:             num=4;
   975     06DB  3004               	movlw	4
   976     06DC  00F0               	movwf	keypad_get_key@num
   977                           
   978                           ;main.c: 58:         }
   979     06DD  2EEB               	goto	l32
   980     06DE                     l31:	
   981                           ;main.c: 59:         else if(PORTBbits.RB4==0)
   982                           
   983     06DE  1A06               	btfsc	6,4	;volatile
   984     06DF  2EE1               	goto	u441
   985     06E0  2EE2               	goto	u440
   986     06E1                     u441:
   987     06E1  2EE5               	goto	l33
   988     06E2                     u440:
   989     06E2                     l789:
   990                           
   991                           ;main.c: 60:         {;main.c: 61:             num=5;
   992     06E2  3005               	movlw	5
   993     06E3  00F0               	movwf	keypad_get_key@num
   994                           
   995                           ;main.c: 62:         }
   996     06E4  2EEB               	goto	l32
   997     06E5                     l33:	
   998                           ;main.c: 63:         else if(PORTBbits.RB5==0)
   999                           
  1000     06E5  1A86               	btfsc	6,5	;volatile
  1001     06E6  2EE8               	goto	u451
  1002     06E7  2EE9               	goto	u450
  1003     06E8                     u451:
  1004     06E8  2EEB               	goto	l32
  1005     06E9                     u450:
  1006     06E9                     l791:
  1007                           
  1008                           ;main.c: 64:         {;main.c: 65:             num=6;
  1009     06E9  3006               	movlw	6
  1010     06EA  00F0               	movwf	keypad_get_key@num
  1011     06EB                     l32:
  1012                           
  1013                           ;main.c: 69:         PORTB=0x07;
  1014     06EB  3007               	movlw	7
  1015     06EC  0086               	movwf	6	;volatile
  1016     06ED                     l793:
  1017                           
  1018                           ;main.c: 70:         PORTBbits.RB2=0;
  1019     06ED  1106               	bcf	6,2	;volatile
  1020     06EE                     l795:
  1021                           
  1022                           ;main.c: 71:         if(PORTBbits.RB3==0)
  1023     06EE  1986               	btfsc	6,3	;volatile
  1024     06EF  2EF1               	goto	u461
  1025     06F0  2EF2               	goto	u460
  1026     06F1                     u461:
  1027     06F1  2EF5               	goto	l36
  1028     06F2                     u460:
  1029     06F2                     l797:
  1030                           
  1031                           ;main.c: 72:         {;main.c: 73:             num=7;
  1032     06F2  3007               	movlw	7
  1033     06F3  00F0               	movwf	keypad_get_key@num
  1034                           
  1035                           ;main.c: 74:         }
  1036     06F4  2F03               	goto	l803
  1037     06F5                     l36:	
  1038                           ;main.c: 75:         else if(PORTBbits.RB4==0)
  1039                           
  1040     06F5  1A06               	btfsc	6,4	;volatile
  1041     06F6  2EF8               	goto	u471
  1042     06F7  2EF9               	goto	u470
  1043     06F8                     u471:
  1044     06F8  2EFC               	goto	l38
  1045     06F9                     u470:
  1046     06F9                     l799:
  1047                           
  1048                           ;main.c: 76:         {;main.c: 77:             num=8;
  1049     06F9  3008               	movlw	8
  1050     06FA  00F0               	movwf	keypad_get_key@num
  1051                           
  1052                           ;main.c: 78:         }
  1053     06FB  2F03               	goto	l803
  1054     06FC                     l38:	
  1055                           ;main.c: 79:         else if(PORTBbits.RB5==0)
  1056                           
  1057     06FC  1A86               	btfsc	6,5	;volatile
  1058     06FD  2EFF               	goto	u481
  1059     06FE  2F00               	goto	u480
  1060     06FF                     u481:
  1061     06FF  2F03               	goto	l37
  1062     0700                     u480:
  1063     0700                     l801:
  1064                           
  1065                           ;main.c: 80:         {;main.c: 81:             num=9;
  1066     0700  3009               	movlw	9
  1067     0701  00F0               	movwf	keypad_get_key@num
  1068     0702  2F03               	goto	l803
  1069     0703                     l37:
  1070     0703                     l803:
  1071                           
  1072                           ;main.c: 34:     while(num=='\0')
  1073     0703  0870               	movf	keypad_get_key@num,w
  1074     0704  1903               	btfsc	3,2
  1075     0705  2F07               	goto	u491
  1076     0706  2F08               	goto	u490
  1077     0707                     u491:
  1078     0707  2EBB               	goto	l771
  1079     0708                     u490:
  1080     0708                     l805:
  1081                           
  1082                           ;main.c: 84:     PORTB=0x07;
  1083     0708  3007               	movlw	7
  1084     0709  1283               	bcf	3,5	;RP0=0, select bank0
  1085     070A  1303               	bcf	3,6	;RP1=0, select bank0
  1086     070B  0086               	movwf	6	;volatile
  1087                           
  1088                           ;main.c: 85:     return num;
  1089     070C  0870               	movf	keypad_get_key@num,w
  1090     070D                     l42:
  1091     070D  0008               	return
  1092     070E                     __end_of_keypad_get_key:
  1093                           
  1094                           	psect	text5
  1095     070E                     __ptext5:	
  1096 ;; *************** function ___awmod *****************
  1097 ;; Defined at:
  1098 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  divisor         2    6[BANK0 ] int 
  1101 ;;  dividend        2    8[BANK0 ] int 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  sign            1   11[BANK0 ] unsigned char 
  1104 ;;  counter         1   10[BANK0 ] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  2    6[BANK0 ] int 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, btemp+1
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         0       4       0       0       0
  1115 ;;      Locals:         0       2       0       0       0
  1116 ;;      Temps:          0       0       0       0       0
  1117 ;;      Totals:         0       6       0       0       0
  1118 ;;Total ram usage:        6 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127     070E                     ___awmod:	
  1128                           ;psect for function ___awmod
  1129                           
  1130     070E                     l815:	
  1131                           ;incstack = 0
  1132                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1133                           
  1134     070E  1283               	bcf	3,5	;RP0=0, select bank0
  1135     070F  1303               	bcf	3,6	;RP1=0, select bank0
  1136     0710  01AB               	clrf	___awmod@sign
  1137     0711                     l817:
  1138     0711  1FA9               	btfss	___awmod@dividend+1,7
  1139     0712  2F14               	goto	u521
  1140     0713  2F15               	goto	u520
  1141     0714                     u521:
  1142     0714  2F1C               	goto	l823
  1143     0715                     u520:
  1144     0715                     l819:
  1145     0715  09A8               	comf	___awmod@dividend,f
  1146     0716  09A9               	comf	___awmod@dividend+1,f
  1147     0717  0AA8               	incf	___awmod@dividend,f
  1148     0718  1903               	skipnz
  1149     0719  0AA9               	incf	___awmod@dividend+1,f
  1150     071A                     l821:
  1151     071A  01AB               	clrf	___awmod@sign
  1152     071B  0AAB               	incf	___awmod@sign,f
  1153     071C                     l823:
  1154     071C  1FA7               	btfss	___awmod@divisor+1,7
  1155     071D  2F1F               	goto	u531
  1156     071E  2F20               	goto	u530
  1157     071F                     u531:
  1158     071F  2F25               	goto	l827
  1159     0720                     u530:
  1160     0720                     l825:
  1161     0720  09A6               	comf	___awmod@divisor,f
  1162     0721  09A7               	comf	___awmod@divisor+1,f
  1163     0722  0AA6               	incf	___awmod@divisor,f
  1164     0723  1903               	skipnz
  1165     0724  0AA7               	incf	___awmod@divisor+1,f
  1166     0725                     l827:
  1167     0725  0826               	movf	___awmod@divisor,w
  1168     0726  0427               	iorwf	___awmod@divisor+1,w
  1169     0727  1903               	btfsc	3,2
  1170     0728  2F2A               	goto	u541
  1171     0729  2F2B               	goto	u540
  1172     072A                     u541:
  1173     072A  2F5A               	goto	l845
  1174     072B                     u540:
  1175     072B                     l829:
  1176     072B  01AA               	clrf	___awmod@counter
  1177     072C  0AAA               	incf	___awmod@counter,f
  1178     072D  2F39               	goto	l835
  1179     072E                     l831:
  1180     072E  3001               	movlw	1
  1181     072F                     u555:
  1182     072F  1003               	clrc
  1183     0730  0DA6               	rlf	___awmod@divisor,f
  1184     0731  0DA7               	rlf	___awmod@divisor+1,f
  1185     0732  3EFF               	addlw	-1
  1186     0733  1D03               	skipz
  1187     0734  2F2F               	goto	u555
  1188     0735                     l833:
  1189     0735  3001               	movlw	1
  1190     0736  00FF               	movwf	btemp+1
  1191     0737  087F               	movf	btemp+1,w
  1192     0738  07AA               	addwf	___awmod@counter,f
  1193     0739                     l835:
  1194     0739  1FA7               	btfss	___awmod@divisor+1,7
  1195     073A  2F3C               	goto	u561
  1196     073B  2F3D               	goto	u560
  1197     073C                     u561:
  1198     073C  2F2E               	goto	l831
  1199     073D                     u560:
  1200     073D                     l837:
  1201     073D  0827               	movf	___awmod@divisor+1,w
  1202     073E  0229               	subwf	___awmod@dividend+1,w
  1203     073F  1D03               	skipz
  1204     0740  2F43               	goto	u575
  1205     0741  0826               	movf	___awmod@divisor,w
  1206     0742  0228               	subwf	___awmod@dividend,w
  1207     0743                     u575:
  1208     0743  1C03               	skipc
  1209     0744  2F46               	goto	u571
  1210     0745  2F47               	goto	u570
  1211     0746                     u571:
  1212     0746  2F4D               	goto	l841
  1213     0747                     u570:
  1214     0747                     l839:
  1215     0747  0826               	movf	___awmod@divisor,w
  1216     0748  02A8               	subwf	___awmod@dividend,f
  1217     0749  0827               	movf	___awmod@divisor+1,w
  1218     074A  1C03               	skipc
  1219     074B  03A9               	decf	___awmod@dividend+1,f
  1220     074C  02A9               	subwf	___awmod@dividend+1,f
  1221     074D                     l841:
  1222     074D  3001               	movlw	1
  1223     074E                     u585:
  1224     074E  1003               	clrc
  1225     074F  0CA7               	rrf	___awmod@divisor+1,f
  1226     0750  0CA6               	rrf	___awmod@divisor,f
  1227     0751  3EFF               	addlw	-1
  1228     0752  1D03               	skipz
  1229     0753  2F4E               	goto	u585
  1230     0754                     l843:
  1231     0754  3001               	movlw	1
  1232     0755  02AA               	subwf	___awmod@counter,f
  1233     0756  1D03               	btfss	3,2
  1234     0757  2F59               	goto	u591
  1235     0758  2F5A               	goto	u590
  1236     0759                     u591:
  1237     0759  2F3D               	goto	l837
  1238     075A                     u590:
  1239     075A                     l845:
  1240     075A  082B               	movf	___awmod@sign,w
  1241     075B  1903               	btfsc	3,2
  1242     075C  2F5E               	goto	u601
  1243     075D  2F5F               	goto	u600
  1244     075E                     u601:
  1245     075E  2F64               	goto	l849
  1246     075F                     u600:
  1247     075F                     l847:
  1248     075F  09A8               	comf	___awmod@dividend,f
  1249     0760  09A9               	comf	___awmod@dividend+1,f
  1250     0761  0AA8               	incf	___awmod@dividend,f
  1251     0762  1903               	skipnz
  1252     0763  0AA9               	incf	___awmod@dividend+1,f
  1253     0764                     l849:
  1254     0764  0829               	movf	___awmod@dividend+1,w
  1255     0765  00A7               	movwf	?___awmod+1
  1256     0766  0828               	movf	___awmod@dividend,w
  1257     0767  00A6               	movwf	?___awmod
  1258     0768                     l309:
  1259     0768  0008               	return
  1260     0769                     __end_of___awmod:
  1261     007E                     btemp	set	126	;btemp
  1262     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     21      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _rand->___lmul

Critical Paths under _main in BANK0

    _main->___awmod
    ___awmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     904
                                             12 BANK0      9     9      0
                            ___awmod
                     _keypad_get_key
                        _keypad_init
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 6     4      2     244
                                              0 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_get_key                                       1     1      0      54
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              6 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _keypad_get_key
   _keypad_init
   _rand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Apr 17 03:39:12 2024

                     l21 0621                       l31 06DE                       l32 06EB  
                     l33 06E5                       l42 070D                       l26 06C7  
                     l50 07BB                       l27 06D4                       l51 07BB  
                     l36 06F5                       l28 06CE                       l37 0703  
                     l38 06FC                       l54 07F2                       l55 07F2  
                     l49 07BC                      l309 0768                      l157 0667  
                    l607 06B8                      l801 0700                      l803 0703  
                    l811 06A3                      l821 071A                      l805 0708  
                    l831 072E                      l823 071C                      l815 070E  
                    l751 0645                      l841 074D                      l833 0735  
                    l825 0720                      l817 0711                      l761 0615  
                    l753 064E                      l745 0622                      l809 0668  
                    l843 0754                      l835 0739                      l827 0725  
                    l819 0715                      l771 06BB                      l763 061B  
                    l755 065F                      l747 062A                      l837 073D  
                    l829 072B                      l845 075A                      l781 06D2  
                    l773 06BF                      l765 061E                      l749 062E  
                    l861 0772                      l853 0769                      l847 075F  
                    l839 0747                      l791 06E9                      l783 06D6  
                    l775 06C0                      l759 0612                      l871 07BA  
                    l863 0792                      l855 076E                      l849 0764  
                    l793 06ED                      l785 06D7                      l777 06C4  
                    l769 06B9                      l873 07DA                      l865 079F  
                    l795 06EE                      l787 06DB                      l779 06CB  
                    l875 07E0                      l867 07AD                      l797 06F2  
                    l789 06E2                      l877 07ED                      l869 07B9  
                    l799 06F9                      l879 07F1                      u400 06C4  
                    u401 06C3                      u410 06CB                      u411 06CA  
                    u420 06D2                      u500 0690                      u421 06D1  
                    u501 0691                      u430 06DB                      u350 062E  
                    u510 06B1                      u502 0696                      u431 06DA  
                    u351 062D                      u503 0697                      u600 075F  
                    u520 0715                      u440 06E2                      u601 075E  
                    u521 0714                      u441 06E1                      u361 0637  
                    u530 0720                      u450 06E9                      u362 063E  
                    u610 07B9                      u531 071F                      u451 06E8  
                    u363 0645                      u515 06AC                      u611 07B8  
                    u540 072B                      u460 06F2                      u620 07C3  
                    u541 072A                      u461 06F1                      u621 07BF  
                    u470 06F9                      u390 065F                      u471 06F8  
                    u391 065E                      u375 0647                      u615 07B5  
                    u560 073D                      u480 0700                      u640 07CD  
                    u561 073C                      u481 06FF                      u385 064F  
                    u641 07C9                      u570 0747                      u490 0708  
                    u634 07C6                      u571 0746                      u555 072F  
                    u491 0707                      u660 07D7                      u661 07D3  
                    u590 075A                      u654 07D0                      u591 0759  
                    u575 0743                      u680 07ED                      u585 074E  
                    u681 07EC                      u674 07DA                      u685 07E9  
                    u697 07A7             ___awmod@sign 002B                     _main 0769  
                   _rand 0668                     _seed 0035                     btemp 007E  
                   start 0000                    ?_main 0070                    ?_rand 0020  
        __end_of___awmod 0769                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088         ??_keypad_get_key 0070  
    ___lmul@multiplicand 0074             ?_keypad_init 0070                    main@i 0031  
                  status 0003                    wtemp0 007E          __initialization 07F6  
           __end_of_main 07F6             __end_of_rand 06B9                   ??_main 002C  
                 ??_rand 0022            main@guess_num 002F                   ___lmul 0622  
              ??___awmod 007D          ___awmod@divisor 0026          ___awmod@counter 002A  
__end_of__initialization 07FC           __pcstackCOMMON 0070           main@actual_num 0033  
         _OPTION_REGbits 0081               __pbssBANK0 0035               __pmaintext 0769  
                ?___lmul 0070           ___lmul@product 0079                  ___awmod 070E  
                __ptext1 0668                  __ptext2 0622                  __ptext3 0612  
                __ptext4 06B9                  __ptext5 070E         ___awmod@dividend 0028  
   end_of_initialization 07FC                _PORTBbits 0006                _PORTDbits 0008  
         __end_of___lmul 0668      start_initialization 07F6                 ??___lmul 0078  
              ___latbits 0002            __pcstackBANK0 0020            ??_keypad_init 0070  
               ?___awmod 0026           _keypad_get_key 06B9      __end_of_keypad_init 0622  
      keypad_get_key@num 0070   __end_of_keypad_get_key 070E        ___lmul@multiplier 0070  
            _keypad_init 0612          ?_keypad_get_key 0070  
