

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu May 09 22:23:47 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Generated 12/10/2023 GMT
    43                           ; 
    44                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     000E                     	;# 
    92     000F                     	;# 
    93     0010                     	;# 
    94     0011                     	;# 
    95     0012                     	;# 
    96     0013                     	;# 
    97     0014                     	;# 
    98     0015                     	;# 
    99     0015                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     0019                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     0081                     	;# 
   112     0085                     	;# 
   113     0086                     	;# 
   114     0087                     	;# 
   115     0088                     	;# 
   116     0089                     	;# 
   117     008C                     	;# 
   118     008D                     	;# 
   119     008E                     	;# 
   120     0091                     	;# 
   121     0092                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0098                     	;# 
   185     0099                     	;# 
   186     009C                     	;# 
   187     009D                     	;# 
   188     009E                     	;# 
   189     009F                     	;# 
   190     010C                     	;# 
   191     010D                     	;# 
   192     010E                     	;# 
   193     010F                     	;# 
   194     018C                     	;# 
   195     018D                     	;# 
   196     0000                     	;# 
   197     0001                     	;# 
   198     0002                     	;# 
   199     0003                     	;# 
   200     0004                     	;# 
   201     0005                     	;# 
   202     0006                     	;# 
   203     0007                     	;# 
   204     0008                     	;# 
   205     0009                     	;# 
   206     000A                     	;# 
   207     000B                     	;# 
   208     000C                     	;# 
   209     000D                     	;# 
   210     000E                     	;# 
   211     000E                     	;# 
   212     000F                     	;# 
   213     0010                     	;# 
   214     0011                     	;# 
   215     0012                     	;# 
   216     0013                     	;# 
   217     0014                     	;# 
   218     0015                     	;# 
   219     0015                     	;# 
   220     0016                     	;# 
   221     0017                     	;# 
   222     0018                     	;# 
   223     0019                     	;# 
   224     001A                     	;# 
   225     001B                     	;# 
   226     001B                     	;# 
   227     001C                     	;# 
   228     001D                     	;# 
   229     001E                     	;# 
   230     001F                     	;# 
   231     0081                     	;# 
   232     0085                     	;# 
   233     0086                     	;# 
   234     0087                     	;# 
   235     0088                     	;# 
   236     0089                     	;# 
   237     008C                     	;# 
   238     008D                     	;# 
   239     008E                     	;# 
   240     0091                     	;# 
   241     0092                     	;# 
   242     0093                     	;# 
   243     0094                     	;# 
   244     0098                     	;# 
   245     0099                     	;# 
   246     009C                     	;# 
   247     009D                     	;# 
   248     009E                     	;# 
   249     009F                     	;# 
   250     010C                     	;# 
   251     010D                     	;# 
   252     010E                     	;# 
   253     010F                     	;# 
   254     018C                     	;# 
   255     018D                     	;# 
   256     0000                     	;# 
   257     0001                     	;# 
   258     0002                     	;# 
   259     0003                     	;# 
   260     0004                     	;# 
   261     0005                     	;# 
   262     0006                     	;# 
   263     0007                     	;# 
   264     0008                     	;# 
   265     0009                     	;# 
   266     000A                     	;# 
   267     000B                     	;# 
   268     000C                     	;# 
   269     000D                     	;# 
   270     000E                     	;# 
   271     000E                     	;# 
   272     000F                     	;# 
   273     0010                     	;# 
   274     0011                     	;# 
   275     0012                     	;# 
   276     0013                     	;# 
   277     0014                     	;# 
   278     0015                     	;# 
   279     0015                     	;# 
   280     0016                     	;# 
   281     0017                     	;# 
   282     0018                     	;# 
   283     0019                     	;# 
   284     001A                     	;# 
   285     001B                     	;# 
   286     001B                     	;# 
   287     001C                     	;# 
   288     001D                     	;# 
   289     001E                     	;# 
   290     001F                     	;# 
   291     0081                     	;# 
   292     0085                     	;# 
   293     0086                     	;# 
   294     0087                     	;# 
   295     0088                     	;# 
   296     0089                     	;# 
   297     008C                     	;# 
   298     008D                     	;# 
   299     008E                     	;# 
   300     0091                     	;# 
   301     0092                     	;# 
   302     0093                     	;# 
   303     0094                     	;# 
   304     0098                     	;# 
   305     0099                     	;# 
   306     009C                     	;# 
   307     009D                     	;# 
   308     009E                     	;# 
   309     009F                     	;# 
   310     010C                     	;# 
   311     010D                     	;# 
   312     010E                     	;# 
   313     010F                     	;# 
   314     018C                     	;# 
   315     018D                     	;# 
   316     0000                     	;# 
   317     0001                     	;# 
   318     0002                     	;# 
   319     0003                     	;# 
   320     0004                     	;# 
   321     0005                     	;# 
   322     0006                     	;# 
   323     0007                     	;# 
   324     0008                     	;# 
   325     0009                     	;# 
   326     000A                     	;# 
   327     000B                     	;# 
   328     000C                     	;# 
   329     000D                     	;# 
   330     000E                     	;# 
   331     000E                     	;# 
   332     000F                     	;# 
   333     0010                     	;# 
   334     0011                     	;# 
   335     0012                     	;# 
   336     0013                     	;# 
   337     0014                     	;# 
   338     0015                     	;# 
   339     0015                     	;# 
   340     0016                     	;# 
   341     0017                     	;# 
   342     0018                     	;# 
   343     0019                     	;# 
   344     001A                     	;# 
   345     001B                     	;# 
   346     001B                     	;# 
   347     001C                     	;# 
   348     001D                     	;# 
   349     001E                     	;# 
   350     001F                     	;# 
   351     0081                     	;# 
   352     0085                     	;# 
   353     0086                     	;# 
   354     0087                     	;# 
   355     0088                     	;# 
   356     0089                     	;# 
   357     008C                     	;# 
   358     008D                     	;# 
   359     008E                     	;# 
   360     0091                     	;# 
   361     0092                     	;# 
   362     0093                     	;# 
   363     0094                     	;# 
   364     0098                     	;# 
   365     0099                     	;# 
   366     009C                     	;# 
   367     009D                     	;# 
   368     009E                     	;# 
   369     009F                     	;# 
   370     010C                     	;# 
   371     010D                     	;# 
   372     010E                     	;# 
   373     010F                     	;# 
   374     018C                     	;# 
   375     018D                     	;# 
   376                           
   377                           	psect	idataBANK0
   378     0C09                     __pidataBANK0:
   379                           
   380                           ;initializer for Print@F1366
   381     0C09  3405               	retlw	5
   382     0C0A  3400               	retlw	0
   383     0C0B  3400               	retlw	0
   384     0C0C  3400               	retlw	0
   385     0C0D  3400               	retlw	0
   386                           
   387                           	psect	idataBANK1
   388     0C21                     __pidataBANK1:
   389                           
   390                           ;initializer for main@F1377
   391     0C21  341F               	retlw	31
   392     0C22  341C               	retlw	28
   393     0C23  341F               	retlw	31
   394     0C24  341E               	retlw	30
   395     0C25  341F               	retlw	31
   396     0C26  341E               	retlw	30
   397     0C27  341F               	retlw	31
   398     0C28  341F               	retlw	31
   399     0C29  341E               	retlw	30
   400     0C2A  341F               	retlw	31
   401     0C2B  341E               	retlw	30
   402     0C2C  341F               	retlw	31
   403     0001                     _TMR0	set	1
   404     0006                     _PORTB	set	6
   405     005F                     _GIE	set	95
   406     005A                     _TMR0IF	set	90
   407     005D                     _TMR0IE	set	93
   408     0041                     _RD1	set	65
   409     0040                     _RD0	set	64
   410     0045                     _RD5	set	69
   411     0044                     _RD4	set	68
   412     0043                     _RD3	set	67
   413     0042                     _RD2	set	66
   414     009F                     _ADCON1	set	159
   415     0081                     _OPTION_REGbits	set	129
   416     0081                     _OPTION_REG	set	129
   417     0086                     _TRISB	set	134
   418     042C                     _TRISA4	set	1068
   419     0445                     _TRISD5	set	1093
   420     0444                     _TRISD4	set	1092
   421     0443                     _TRISD3	set	1091
   422     0442                     _TRISD2	set	1090
   423     0441                     _TRISD1	set	1089
   424     0440                     _TRISD0	set	1088
   425                           
   426                           	psect	strings
   427     0800                     __pstrings:
   428     0800                     stringtab:
   429     0800                     __stringtab:
   430     0800                     stringcode:	
   431                           ;	String table - string pointers are 1 byte each
   432                           
   433     0800                     stringdir:
   434     0800  3008               	movlw	high stringdir
   435     0801  008A               	movwf	10
   436     0802  0804               	movf	4,w
   437     0803  0A84               	incf	4,f
   438     0804  0782               	addwf	2,f
   439     0805                     __stringbase:
   440     0805  3400               	retlw	0
   441     0806                     __end_of__stringtab:
   442     0806                     STR_2:
   443     0806  3454               	retlw	84	;'T'
   444     0807  3469               	retlw	105	;'i'
   445     0808  346D               	retlw	109	;'m'
   446     0809  3465               	retlw	101	;'e'
   447     080A  345F               	retlw	95	;'_'
   448     080B  344D               	retlw	77	;'M'
   449     080C  3461               	retlw	97	;'a'
   450     080D  3478               	retlw	120	;'x'
   451     080E  345F               	retlw	95	;'_'
   452     080F  3431               	retlw	49	;'1'
   453     0810  3430               	retlw	48	;'0'
   454     0811  3444               	retlw	68	;'D'
   455     0812  3469               	retlw	105	;'i'
   456     0813  3467               	retlw	103	;'g'
   457     0814  3469               	retlw	105	;'i'
   458     0815  3474               	retlw	116	;'t'
   459     0816  3400               	retlw	0
   460     0817                     STR_1:
   461     0817  3457               	retlw	87	;'W'
   462     0818  3465               	retlw	101	;'e'
   463     0819  346C               	retlw	108	;'l'
   464     081A  3463               	retlw	99	;'c'
   465     081B  346F               	retlw	111	;'o'
   466     081C  346D               	retlw	109	;'m'
   467     081D  3465               	retlw	101	;'e'
   468     081E  3420               	retlw	32	;' '
   469     081F  346E               	retlw	110	;'n'
   470     0820  3461               	retlw	97	;'a'
   471     0821  346D               	retlw	109	;'m'
   472     0822  3465               	retlw	101	;'e'
   473     0823  3400               	retlw	0
   474     0824                     STR_3:
   475     0824  3454               	retlw	84	;'T'
   476     0825  3479               	retlw	121	;'y'
   477     0826  3470               	retlw	112	;'p'
   478     0827  3465               	retlw	101	;'e'
   479     0828  3420               	retlw	32	;' '
   480     0829  343D               	retlw	61	;'='
   481     082A  3400               	retlw	0
   482                           
   483                           	psect	cinit
   484     000F                     start_initialization:	
   485                           ; #config settings
   486                           
   487     000F                     __initialization:
   488                           
   489                           ; Initialize objects allocated to BANK1
   490     000F  1383               	bcf	3,7	;select IRP bank0
   491     0010  30AC               	movlw	low (__pdataBANK1+12)
   492     0011  00FD               	movwf	btemp+-1
   493     0012  300C               	movlw	high __pidataBANK1
   494     0013  00FE               	movwf	btemp
   495     0014  3021               	movlw	low __pidataBANK1
   496     0015  00FF               	movwf	btemp+1
   497     0016  30A0               	movlw	low __pdataBANK1
   498     0017  0084               	movwf	4
   499     0018  120A  158A  2450  120A  118A  	fcall	init_ram0
   500                           
   501                           ; Initialize objects allocated to BANK0
   502     001D  3068               	movlw	low (__pdataBANK0+5)
   503     001E  00FD               	movwf	btemp+-1
   504     001F  300C               	movlw	high __pidataBANK0
   505     0020  00FE               	movwf	btemp
   506     0021  3009               	movlw	low __pidataBANK0
   507     0022  00FF               	movwf	btemp+1
   508     0023  3063               	movlw	low __pdataBANK0
   509     0024  0084               	movwf	4
   510     0025  120A  158A  2450  120A  118A  	fcall	init_ram0
   511                           
   512                           ; Clear objects allocated to BANK0
   513     002A  01D5               	clrf	__pbssBANK0& (0+127)
   514     002B  01D6               	clrf	(__pbssBANK0+1)& (0+127)
   515     002C  01D7               	clrf	(__pbssBANK0+2)& (0+127)
   516     002D  01D8               	clrf	(__pbssBANK0+3)& (0+127)
   517     002E  01D9               	clrf	(__pbssBANK0+4)& (0+127)
   518     002F  01DA               	clrf	(__pbssBANK0+5)& (0+127)
   519     0030  01DB               	clrf	(__pbssBANK0+6)& (0+127)
   520     0031  01DC               	clrf	(__pbssBANK0+7)& (0+127)
   521     0032  01DD               	clrf	(__pbssBANK0+8)& (0+127)
   522     0033  01DE               	clrf	(__pbssBANK0+9)& (0+127)
   523     0034  01DF               	clrf	(__pbssBANK0+10)& (0+127)
   524     0035  01E0               	clrf	(__pbssBANK0+11)& (0+127)
   525     0036  01E1               	clrf	(__pbssBANK0+12)& (0+127)
   526     0037  01E2               	clrf	(__pbssBANK0+13)& (0+127)
   527                           
   528                           ; Clear objects allocated to COMMON
   529     0038  01FA               	clrf	__pbssCOMMON& (0+127)
   530     0039  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   531     003A                     end_of_initialization:	
   532                           ;End of C runtime variable initialization code
   533                           
   534     003A                     __end_of__initialization:
   535     003A  0183               	clrf	3
   536     003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   537                           
   538                           	psect	bssCOMMON
   539     007A                     __pbssCOMMON:
   540     007A                     _overflow_cnt:
   541     007A                     	ds	2
   542                           
   543                           	psect	bssBANK0
   544     0055                     __pbssBANK0:
   545     0055                     _Seconds:
   546     0055                     	ds	4
   547     0059                     _timer0_time_passed_ms:
   548     0059                     	ds	4
   549     005D                     _Current_Year:
   550     005D                     	ds	2
   551     005F                     _Current_Minute:
   552     005F                     	ds	1
   553     0060                     _Current_Hour:
   554     0060                     	ds	1
   555     0061                     _Current_Day:
   556     0061                     	ds	1
   557     0062                     _month:
   558     0062                     	ds	1
   559                           
   560                           	psect	dataBANK0
   561     0063                     __pdataBANK0:
   562     0063                     Print@F1366:
   563     0063                     	ds	5
   564                           
   565                           	psect	dataBANK1
   566     00A0                     __pdataBANK1:
   567     00A0                     main@F1377:
   568     00A0                     	ds	12
   569                           
   570                           	psect	inittext
   571     0C4C                     init_fetch0:	
   572                           ;	Called with low address in FSR and high address in W
   573                           
   574     0C4C  087E               	movf	btemp,w
   575     0C4D  008A               	movwf	10
   576     0C4E  087F               	movf	btemp+1,w
   577     0C4F  0082               	movwf	2
   578     0C50                     init_ram0:	
   579                           ;Called with:
   580                           ;	high address of idata address in btemp 
   581                           ;	low address of idata address in btemp+1 
   582                           ;	low address of data in FSR
   583                           ;	high address + 1 of data in btemp-1
   584                           
   585     0C50  120A  158A  244C  120A  158A  	fcall	init_fetch0
   586     0C55  0080               	movwf	0
   587     0C56  0A84               	incf	4,f
   588     0C57  0804               	movf	4,w
   589     0C58  067D               	xorwf	btemp+-1,w
   590     0C59  1903               	btfsc	3,2
   591     0C5A  3400               	retlw	0
   592     0C5B  0AFF               	incf	btemp+1,f
   593     0C5C  1903               	btfsc	3,2
   594     0C5D  0AFE               	incf	btemp,f
   595     0C5E  2C50               	goto	init_ram0
   596                           
   597                           	psect	cstackCOMMON
   598     0070                     __pcstackCOMMON:
   599     0070                     ?_keypad_init:
   600     0070                     ?_keypad_get_key:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ?_SET_LCD_DATA_PINS:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_LCD_SEND_4BIT_CMD:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?_LCD_Write_Char:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ?_lcd_init:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ?_lcd_cmd:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_lcd_chr_cp:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_lcd_out_cp:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_timer0_init:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?_ISR:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ??_ISR:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_main:	
   634                           ; 1 bytes @ 0x0
   635                           
   636                           
   637                           ; 1 bytes @ 0x0
   638     0070                     	ds	2
   639     0072                     ??_keypad_init:
   640     0072                     ??_keypad_get_key:	
   641                           ; 1 bytes @ 0x2
   642                           
   643     0072                     ??_SET_LCD_DATA_PINS:	
   644                           ; 1 bytes @ 0x2
   645                           
   646     0072                     ??_timer0_init:	
   647                           ; 1 bytes @ 0x2
   648                           
   649     0072                     ?___wmul:	
   650                           ; 1 bytes @ 0x2
   651                           
   652     0072                     ?___awdiv:	
   653                           ; 2 bytes @ 0x2
   654                           
   655     0072                     ?___awmod:	
   656                           ; 2 bytes @ 0x2
   657                           
   658     0072                     ?_timer_get_time_since_init:	
   659                           ; 2 bytes @ 0x2
   660                           
   661     0072                     ?___lmul:	
   662                           ; 4 bytes @ 0x2
   663                           
   664     0072                     ?___lldiv:	
   665                           ; 4 bytes @ 0x2
   666                           
   667     0072                     ?___llmod:	
   668                           ; 4 bytes @ 0x2
   669                           
   670     0072                     SET_LCD_DATA_PINS@Data:	
   671                           ; 4 bytes @ 0x2
   672                           
   673     0072                     ___wmul@multiplier:	
   674                           ; 1 bytes @ 0x2
   675                           
   676     0072                     ___awdiv@divisor:	
   677                           ; 2 bytes @ 0x2
   678                           
   679     0072                     ___awmod@divisor:	
   680                           ; 2 bytes @ 0x2
   681                           
   682     0072                     ___lmul@multiplier:	
   683                           ; 2 bytes @ 0x2
   684                           
   685     0072                     ___lldiv@divisor:	
   686                           ; 4 bytes @ 0x2
   687                           
   688     0072                     ___llmod@divisor:	
   689                           ; 4 bytes @ 0x2
   690                           
   691                           
   692                           ; 4 bytes @ 0x2
   693     0072                     	ds	1
   694     0073                     ??_LCD_SEND_4BIT_CMD:
   695     0073                     ??_LCD_Write_Char:	
   696                           ; 1 bytes @ 0x3
   697                           
   698     0073                     timer0_init@prescaler:	
   699                           ; 1 bytes @ 0x3
   700                           
   701                           
   702                           ; 1 bytes @ 0x3
   703     0073                     	ds	1
   704     0074                     ___wmul@multiplicand:
   705     0074                     ___awdiv@dividend:	
   706                           ; 2 bytes @ 0x4
   707                           
   708     0074                     ___awmod@dividend:	
   709                           ; 2 bytes @ 0x4
   710                           
   711                           
   712                           ; 2 bytes @ 0x4
   713     0074                     	ds	1
   714     0075                     LCD_SEND_4BIT_CMD@CMD:
   715     0075                     LCD_Write_Char@Low4:	
   716                           ; 1 bytes @ 0x5
   717                           
   718                           
   719                           ; 1 bytes @ 0x5
   720     0075                     	ds	1
   721     0076                     ??_lcd_init:
   722     0076                     ??_lcd_cmd:	
   723                           ; 1 bytes @ 0x6
   724                           
   725     0076                     ?_lcd_set_cursor:	
   726                           ; 1 bytes @ 0x6
   727                           
   728     0076                     ??_timer_get_time_since_init:	
   729                           ; 1 bytes @ 0x6
   730                           
   731     0076                     ?_Required_Delay:	
   732                           ; 1 bytes @ 0x6
   733                           
   734     0076                     ??___wmul:	
   735                           ; 1 bytes @ 0x6
   736                           
   737     0076                     ??___awdiv:	
   738                           ; 1 bytes @ 0x6
   739                           
   740     0076                     ??___awmod:	
   741                           ; 1 bytes @ 0x6
   742                           
   743     0076                     LCD_Write_Char@High4:	
   744                           ; 1 bytes @ 0x6
   745                           
   746     0076                     lcd_set_cursor@c:	
   747                           ; 1 bytes @ 0x6
   748                           
   749     0076                     ___awdiv@counter:	
   750                           ; 1 bytes @ 0x6
   751                           
   752     0076                     ___awmod@counter:	
   753                           ; 1 bytes @ 0x6
   754                           
   755     0076                     ___wmul@product:	
   756                           ; 1 bytes @ 0x6
   757                           
   758     0076                     Required_Delay@Required_Time:	
   759                           ; 2 bytes @ 0x6
   760                           
   761     0076                     ___lmul@multiplicand:	
   762                           ; 4 bytes @ 0x6
   763                           
   764     0076                     ___lldiv@dividend:	
   765                           ; 4 bytes @ 0x6
   766                           
   767     0076                     ___llmod@dividend:	
   768                           ; 4 bytes @ 0x6
   769                           
   770                           
   771                           ; 4 bytes @ 0x6
   772     0076                     	ds	1
   773     0077                     ??_lcd_set_cursor:
   774     0077                     LCD_Write_Char@Data:	
   775                           ; 1 bytes @ 0x7
   776                           
   777     0077                     lcd_cmd@command:	
   778                           ; 1 bytes @ 0x7
   779                           
   780     0077                     ___awdiv@sign:	
   781                           ; 1 bytes @ 0x7
   782                           
   783     0077                     ___awmod@sign:	
   784                           ; 1 bytes @ 0x7
   785                           
   786                           
   787                           ; 1 bytes @ 0x7
   788     0077                     	ds	1
   789     0078                     ??_lcd_chr_cp:
   790     0078                     ??_lcd_out:	
   791                           ; 1 bytes @ 0x8
   792                           
   793     0078                     ??_lcd_out_cp:	
   794                           ; 1 bytes @ 0x8
   795                           
   796     0078                     lcd_chr_cp@chr:	
   797                           ; 1 bytes @ 0x8
   798                           
   799     0078                     ___awdiv@quotient:	
   800                           ; 1 bytes @ 0x8
   801                           
   802                           
   803                           ; 2 bytes @ 0x8
   804     0078                     	ds	2
   805     007A                     ??_Get_Real_Number:
   806     007A                     ??_Print:	
   807                           ; 1 bytes @ 0xA
   808                           
   809                           
   810                           	psect	cstackBANK0
   811     0020                     __pcstackBANK0:	
   812                           ; 1 bytes @ 0xA
   813                           
   814     0020                     ??_Required_Delay:
   815     0020                     ??___lmul:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0020                     ??___lldiv:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0020                     ??___llmod:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0020                     lcd_set_cursor@r:	
   825                           ; 1 bytes @ 0x0
   826                           
   827     0020                     lcd_out_cp@str:	
   828                           ; 1 bytes @ 0x0
   829                           
   830                           
   831                           ; 1 bytes @ 0x0
   832     0020                     	ds	1
   833     0021                     lcd_set_cursor@Low4:
   834     0021                     ___llmod@counter:	
   835                           ; 1 bytes @ 0x1
   836                           
   837     0021                     lcd_out_cp@i:	
   838                           ; 1 bytes @ 0x1
   839                           
   840     0021                     ___lmul@product:	
   841                           ; 2 bytes @ 0x1
   842                           
   843     0021                     ___lldiv@quotient:	
   844                           ; 4 bytes @ 0x1
   845                           
   846                           
   847                           ; 4 bytes @ 0x1
   848     0021                     	ds	1
   849     0022                     lcd_set_cursor@High4:
   850                           
   851                           ; 1 bytes @ 0x2
   852     0022                     	ds	1
   853     0023                     ?_Print:
   854     0023                     lcd_set_cursor@Temp:	
   855                           ; 1 bytes @ 0x3
   856                           
   857     0023                     Print@num:	
   858                           ; 1 bytes @ 0x3
   859                           
   860                           
   861                           ; 2 bytes @ 0x3
   862     0023                     	ds	1
   863     0024                     ?_lcd_out:
   864     0024                     lcd_out@col:	
   865                           ; 1 bytes @ 0x4
   866                           
   867     0024                     Required_Delay@stime:	
   868                           ; 1 bytes @ 0x4
   869                           
   870                           
   871                           ; 4 bytes @ 0x4
   872     0024                     	ds	1
   873     0025                     ?_Get_Real_Number:
   874     0025                     lcd_out@str:	
   875                           ; 4 bytes @ 0x5
   876                           
   877     0025                     Get_Real_Number@looping:	
   878                           ; 1 bytes @ 0x5
   879                           
   880     0025                     ___lldiv@counter:	
   881                           ; 1 bytes @ 0x5
   882                           
   883     0025                     Print@size:	
   884                           ; 1 bytes @ 0x5
   885                           
   886                           
   887                           ; 2 bytes @ 0x5
   888     0025                     	ds	1
   889     0026                     lcd_out@row:
   890                           
   891                           ; 1 bytes @ 0x6
   892     0026                     	ds	1
   893     0027                     lcd_out@i:
   894     0027                     Print@Buffer:	
   895                           ; 2 bytes @ 0x7
   896                           
   897                           
   898                           ; 5 bytes @ 0x7
   899     0027                     	ds	1
   900     0028                     Required_Delay@etime:
   901                           
   902                           ; 4 bytes @ 0x8
   903     0028                     	ds	1
   904     0029                     Get_Real_Number@num:
   905                           
   906                           ; 1 bytes @ 0x9
   907     0029                     	ds	1
   908     002A                     Get_Real_Number@result:
   909                           
   910                           ; 4 bytes @ 0xA
   911     002A                     	ds	2
   912     002C                     Print@i:
   913                           
   914                           ; 1 bytes @ 0xC
   915     002C                     	ds	2
   916     002E                     ??_main:
   917                           
   918                           ; 1 bytes @ 0xE
   919     002E                     	ds	6
   920     0034                     main@My_Buffer:
   921                           
   922                           ; 11 bytes @ 0x14
   923     0034                     	ds	11
   924     003F                     main@months:
   925                           
   926                           ; 12 bytes @ 0x1F
   927     003F                     	ds	12
   928     004B                     main@num_of_Current_Days:
   929                           
   930                           ; 2 bytes @ 0x2B
   931     004B                     	ds	2
   932     004D                     main@c:
   933                           
   934                           ; 1 bytes @ 0x2D
   935     004D                     	ds	1
   936     004E                     main@c_194:
   937                           
   938                           ; 1 bytes @ 0x2E
   939     004E                     	ds	1
   940     004F                     main@desired:
   941                           
   942                           ; 2 bytes @ 0x2F
   943     004F                     	ds	2
   944     0051                     main@key:
   945                           
   946                           ; 1 bytes @ 0x31
   947     0051                     	ds	1
   948     0052                     main@end:
   949                           
   950                           ; 1 bytes @ 0x32
   951     0052                     	ds	1
   952     0053                     main@i:
   953                           
   954                           ; 2 bytes @ 0x33
   955     0053                     	ds	2
   956                           
   957                           	psect	maintext
   958     003E                     __pmaintext:	
   959 ;;
   960 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   961 ;;
   962 ;; *************** function _main *****************
   963 ;; Defined at:
   964 ;;		line 78 in file "main.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  i               2   51[BANK0 ] int 
   969 ;;  desired         2   47[BANK0 ] int 
   970 ;;  num_of_Curre    2   43[BANK0 ] int 
   971 ;;  c               1   46[BANK0 ] PTR unsigned char 
   972 ;;		 -> main@My_Buffer(11), 
   973 ;;  key             1   49[BANK0 ] unsigned char 
   974 ;;  c               1   45[BANK0 ] PTR unsigned char 
   975 ;;		 -> main@My_Buffer(11), 
   976 ;;  months         12   31[BANK0 ] unsigned char [12]
   977 ;;  My_Buffer      11   20[BANK0 ] unsigned char [11]
   978 ;;  end             1   50[BANK0 ] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : B00/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         0      33       0       0       0
   990 ;;      Temps:          0       6       0       0       0
   991 ;;      Totals:         0      39       0       0       0
   992 ;;Total ram usage:       39 bytes
   993 ;; Hardware stack levels required when called: 5
   994 ;; This function calls:
   995 ;;		_Get_Real_Number
   996 ;;		_Print
   997 ;;		_Required_Delay
   998 ;;		___awmod
   999 ;;		___lldiv
  1000 ;;		___llmod
  1001 ;;		___lmul
  1002 ;;		___wmul
  1003 ;;		_keypad_get_key
  1004 ;;		_keypad_init
  1005 ;;		_lcd_chr_cp
  1006 ;;		_lcd_cmd
  1007 ;;		_lcd_init
  1008 ;;		_lcd_out
  1009 ;;		_lcd_set_cursor
  1010 ;;		_timer0_init
  1011 ;; This function is called by:
  1012 ;;		Startup code after reset
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016     003E                     _main:	
  1017                           ;psect for function _main
  1018                           
  1019     003E                     l2616:	
  1020                           ;incstack = 0
  1021                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1022                           
  1023                           
  1024                           ;main.c: 79:     timer0_init((0));
  1025     003E  3000               	movlw	0
  1026     003F  120A  158A  243B  120A  118A  	fcall	_timer0_init
  1027                           
  1028                           ;main.c: 80:     lcd_init();
  1029     0044  120A  118A  26DE  120A  118A  	fcall	_lcd_init
  1030                           
  1031                           ;main.c: 81:     keypad_init();
  1032     0049  120A  158A  242D  120A  118A  	fcall	_keypad_init
  1033     004E                     l2618:
  1034                           
  1035                           ;main.c: 82:     char months[12]={31,28,31,30,31,30,31,31,30,31,30,31};
  1036     004E  303F               	movlw	main@months& (0+255)
  1037     004F  0084               	movwf	4
  1038     0050  30A0               	movlw	low main@F1377
  1039     0051  1283               	bcf	3,5	;RP0=0, select bank0
  1040     0052  1303               	bcf	3,6	;RP1=0, select bank0
  1041     0053  00AE               	movwf	??_main
  1042     0054  0804               	movf	4,w
  1043     0055  00AF               	movwf	??_main+1
  1044     0056  300C               	movlw	12
  1045     0057  00B0               	movwf	??_main+2
  1046     0058                     u3240:
  1047     0058  082E               	movf	??_main,w
  1048     0059  0084               	movwf	4
  1049     005A  1383               	bcf	3,7	;select IRP bank1
  1050     005B  0800               	movf	0,w
  1051     005C  00B1               	movwf	??_main+3
  1052     005D  0AAE               	incf	??_main,f
  1053     005E  082F               	movf	??_main+1,w
  1054     005F  0084               	movwf	4
  1055     0060  0831               	movf	??_main+3,w
  1056     0061  0080               	movwf	0
  1057     0062  0AAF               	incf	??_main+1,f
  1058     0063  0BB0               	decfsz	??_main+2,f
  1059     0064  2858               	goto	u3240
  1060     0065                     l2620:
  1061                           
  1062                           ;main.c: 83:     lcd_cmd((0x01));
  1063     0065  3001               	movlw	1
  1064     0066  120A  158A  245F  120A  118A  	fcall	_lcd_cmd
  1065     006B                     l2622:
  1066                           
  1067                           ;main.c: 84:     Current_Year =1970;
  1068     006B  30B2               	movlw	178
  1069     006C  1283               	bcf	3,5	;RP0=0, select bank0
  1070     006D  1303               	bcf	3,6	;RP1=0, select bank0
  1071     006E  00DD               	movwf	_Current_Year
  1072     006F  3007               	movlw	7
  1073     0070  00DE               	movwf	_Current_Year+1
  1074     0071                     l2624:
  1075                           
  1076                           ;main.c: 85:     month=1,Current_Day=1,Current_Hour=0,Current_Minute=0;
  1077     0071  01E2               	clrf	_month
  1078     0072  0AE2               	incf	_month,f
  1079     0073                     l2626:
  1080     0073  01E1               	clrf	_Current_Day
  1081     0074  0AE1               	incf	_Current_Day,f
  1082     0075                     l2628:
  1083     0075  01E0               	clrf	_Current_Hour
  1084     0076                     l2630:
  1085     0076  01DF               	clrf	_Current_Minute
  1086     0077                     l2632:
  1087                           
  1088                           ;main.c: 86:     lcd_out(1,1,"Welcome name");
  1089     0077  01A4               	clrf	lcd_out@col
  1090     0078  0AA4               	incf	lcd_out@col,f
  1091     0079  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1092     007A  00A5               	movwf	lcd_out@str
  1093     007B  3001               	movlw	1
  1094     007C  120A  158A  24FD  120A  118A  	fcall	_lcd_out
  1095                           
  1096                           ;main.c: 87:     Required_Delay(2000);
  1097     0081  3000               	movlw	0
  1098     0082  00F9               	movwf	Required_Delay@Required_Time+3
  1099     0083  3000               	movlw	0
  1100     0084  00F8               	movwf	Required_Delay@Required_Time+2
  1101     0085  3007               	movlw	7
  1102     0086  00F7               	movwf	Required_Delay@Required_Time+1
  1103     0087  30D0               	movlw	208
  1104     0088  00F6               	movwf	Required_Delay@Required_Time
  1105     0089  120A  118A  27B0  120A  118A  	fcall	_Required_Delay
  1106                           
  1107                           ;main.c: 88:     lcd_cmd((0x01));
  1108     008E  3001               	movlw	1
  1109     008F  120A  158A  245F  120A  118A  	fcall	_lcd_cmd
  1110     0094                     l2634:
  1111                           
  1112                           ;main.c: 89:     char My_Buffer[11];;main.c: 90:     lcd_out(1,1,"Time_Max_10Digit");
  1113     0094  1283               	bcf	3,5	;RP0=0, select bank0
  1114     0095  1303               	bcf	3,6	;RP1=0, select bank0
  1115     0096  01A4               	clrf	lcd_out@col
  1116     0097  0AA4               	incf	lcd_out@col,f
  1117     0098  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1118     0099  00A5               	movwf	lcd_out@str
  1119     009A  3001               	movlw	1
  1120     009B  120A  158A  24FD  120A  118A  	fcall	_lcd_out
  1121     00A0                     l2636:
  1122                           
  1123                           ;main.c: 91:     lcd_out(2,1,"Type =");
  1124     00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1125     00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1126     00A2  01A4               	clrf	lcd_out@col
  1127     00A3  0AA4               	incf	lcd_out@col,f
  1128     00A4  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1129     00A5  00A5               	movwf	lcd_out@str
  1130     00A6  3002               	movlw	2
  1131     00A7  120A  158A  24FD  120A  118A  	fcall	_lcd_out
  1132     00AC                     l2638:
  1133     00AC                     l2640:
  1134                           
  1135                           ;main.c: 93:     {;main.c: 94:         char *c=My_Buffer;
  1136     00AC  3034               	movlw	(low (main@My_Buffer| 0))& (0+255)
  1137     00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1138     00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1139     00AF  00CD               	movwf	main@c
  1140     00B0                     l2642:
  1141                           
  1142                           ;main.c: 95: lcd_set_cursor(2,7);
  1143     00B0  3007               	movlw	7
  1144     00B1  00F6               	movwf	lcd_set_cursor@c
  1145     00B2  3002               	movlw	2
  1146     00B3  120A  158A  25F4  120A  118A  	fcall	_lcd_set_cursor
  1147     00B8                     l2644:
  1148                           
  1149                           ;main.c: 96:     char key=1;
  1150     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1151     00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1152     00BA  01D1               	clrf	main@key
  1153     00BB  0AD1               	incf	main@key,f
  1154     00BC                     l2646:
  1155                           
  1156                           ;main.c: 97:     for(end=0;end<10;end++)
  1157     00BC  01D2               	clrf	main@end
  1158     00BD                     l2650:
  1159                           
  1160                           ;main.c: 98:     {;main.c: 99:         key='\0';
  1161     00BD  01D1               	clrf	main@key
  1162                           
  1163                           ;main.c: 100:         while(key=='\0')
  1164     00BE  28C7               	goto	l2654
  1165     00BF                     l2652:
  1166                           
  1167                           ;main.c: 101:         {;main.c: 102:             key=keypad_get_key();
  1168     00BF  120A  118A  2626  120A  118A  	fcall	_keypad_get_key
  1169     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1170     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1171     00C6  00D1               	movwf	main@key
  1172     00C7                     l2654:
  1173                           
  1174                           ;main.c: 100:         while(key=='\0')
  1175     00C7  0851               	movf	main@key,w
  1176     00C8  1903               	btfsc	3,2
  1177     00C9  28CB               	goto	u3251
  1178     00CA  28CC               	goto	u3250
  1179     00CB                     u3251:
  1180     00CB  28BF               	goto	l2652
  1181     00CC                     u3250:
  1182     00CC                     l2656:
  1183     00CC  120A  118A  2626  120A  118A  	fcall	_keypad_get_key
  1184     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1185     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1186     00D3  0651               	xorwf	main@key,w
  1187     00D4  1903               	skipnz
  1188     00D5  28D7               	goto	u3261
  1189     00D6  28D8               	goto	u3260
  1190     00D7                     u3261:
  1191     00D7  28CC               	goto	l2656
  1192     00D8                     u3260:
  1193     00D8                     l2658:
  1194                           
  1195                           ;main.c: 106:         if(key=='=')
  1196     00D8  303D               	movlw	61
  1197     00D9  0651               	xorwf	main@key,w
  1198     00DA  1D03               	btfss	3,2
  1199     00DB  28DD               	goto	u3271
  1200     00DC  28DE               	goto	u3270
  1201     00DD                     u3271:
  1202     00DD  28E6               	goto	l2664
  1203     00DE                     u3270:
  1204     00DE                     l2660:
  1205                           
  1206                           ;main.c: 107:         {;main.c: 108:             c[end]='\0';
  1207     00DE  0852               	movf	main@end,w
  1208     00DF  074D               	addwf	main@c,w
  1209     00E0  00AE               	movwf	??_main
  1210     00E1  082E               	movf	??_main,w
  1211     00E2  0084               	movwf	4
  1212     00E3  1383               	bcf	3,7	;select IRP bank0
  1213     00E4  0180               	clrf	0
  1214                           
  1215                           ;main.c: 109:             break;
  1216     00E5  2900               	goto	l2672
  1217     00E6                     l2664:
  1218                           
  1219                           ;main.c: 112:         {;main.c: 113:             c[end]=key;
  1220     00E6  0852               	movf	main@end,w
  1221     00E7  074D               	addwf	main@c,w
  1222     00E8  00AE               	movwf	??_main
  1223     00E9  082E               	movf	??_main,w
  1224     00EA  0084               	movwf	4
  1225     00EB  0851               	movf	main@key,w
  1226     00EC  1383               	bcf	3,7	;select IRP bank0
  1227     00ED  0080               	movwf	0
  1228     00EE                     l2666:
  1229                           
  1230                           ;main.c: 114:             lcd_chr_cp(key);
  1231     00EE  0851               	movf	main@key,w
  1232     00EF  120A  158A  240E  120A  118A  	fcall	_lcd_chr_cp
  1233     00F4                     l2668:
  1234                           
  1235                           ;main.c: 116:     }
  1236     00F4  3001               	movlw	1
  1237     00F5  00FF               	movwf	btemp+1
  1238     00F6  087F               	movf	btemp+1,w
  1239     00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1240     00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1241     00F9  07D2               	addwf	main@end,f
  1242     00FA                     l2670:
  1243     00FA  300A               	movlw	10
  1244     00FB  0252               	subwf	main@end,w
  1245     00FC  1C03               	skipc
  1246     00FD  28FF               	goto	u3281
  1247     00FE  2900               	goto	u3280
  1248     00FF                     u3281:
  1249     00FF  28BD               	goto	l2650
  1250     0100                     u3280:
  1251     0100                     l2672:
  1252                           
  1253                           ;main.c: 117:     keypad_init();
  1254     0100  120A  158A  242D  120A  118A  	fcall	_keypad_init
  1255     0105                     l2674:
  1256                           
  1257                           ;main.c: 118:     end--;
  1258     0105  3001               	movlw	1
  1259     0106  1283               	bcf	3,5	;RP0=0, select bank0
  1260     0107  1303               	bcf	3,6	;RP1=0, select bank0
  1261     0108  02D2               	subwf	main@end,f
  1262     0109                     l2676:
  1263                           
  1264                           ;main.c: 119:     };main.c: 120:     lcd_cmd((0x01));
  1265     0109  3001               	movlw	1
  1266     010A  120A  158A  245F  120A  118A  	fcall	_lcd_cmd
  1267     010F                     l2678:
  1268                           
  1269                           ;main.c: 121:     {;main.c: 122:         Seconds = 0;
  1270     010F  3000               	movlw	0
  1271     0110  1283               	bcf	3,5	;RP0=0, select bank0
  1272     0111  1303               	bcf	3,6	;RP1=0, select bank0
  1273     0112  00D8               	movwf	_Seconds+3
  1274     0113  3000               	movlw	0
  1275     0114  00D7               	movwf	_Seconds+2
  1276     0115  3000               	movlw	0
  1277     0116  00D6               	movwf	_Seconds+1
  1278     0117  3000               	movlw	0
  1279     0118  00D5               	movwf	_Seconds
  1280     0119                     l2680:
  1281                           
  1282                           ;main.c: 123:         char * c =My_Buffer;
  1283     0119  3034               	movlw	(low (main@My_Buffer| 0))& (0+255)
  1284     011A  00CE               	movwf	main@c_194
  1285                           
  1286                           ;main.c: 124:     while(*c!=0)
  1287     011B  2945               	goto	l2688
  1288     011C                     l2682:
  1289                           
  1290                           ;main.c: 125:     {;main.c: 126:         Seconds+= Get_Real_Number(*c,end);
  1291     011C  0852               	movf	main@end,w
  1292     011D  00A5               	movwf	Get_Real_Number@looping
  1293     011E  084E               	movf	main@c_194,w
  1294     011F  0084               	movwf	4
  1295     0120  0800               	movf	0,w
  1296     0121  120A  158A  2565  120A  118A  	fcall	_Get_Real_Number
  1297     0126  1283               	bcf	3,5	;RP0=0, select bank0
  1298     0127  1303               	bcf	3,6	;RP1=0, select bank0
  1299     0128  0825               	movf	?_Get_Real_Number,w
  1300     0129  07D5               	addwf	_Seconds,f
  1301     012A  0826               	movf	?_Get_Real_Number+1,w
  1302     012B  1103               	clrz
  1303     012C  1803               	skipnc
  1304     012D  3E01               	addlw	1
  1305     012E  1903               	skipnz
  1306     012F  2931               	goto	u3291
  1307     0130  07D6               	addwf	_Seconds+1,f
  1308     0131                     u3291:
  1309     0131  0827               	movf	?_Get_Real_Number+2,w
  1310     0132  1103               	clrz
  1311     0133  1803               	skipnc
  1312     0134  3E01               	addlw	1
  1313     0135  1903               	skipnz
  1314     0136  2938               	goto	u3292
  1315     0137  07D7               	addwf	_Seconds+2,f
  1316     0138                     u3292:
  1317     0138  0828               	movf	?_Get_Real_Number+3,w
  1318     0139  1103               	clrz
  1319     013A  1803               	skipnc
  1320     013B  3E01               	addlw	1
  1321     013C  1903               	skipnz
  1322     013D  293F               	goto	u3293
  1323     013E  07D8               	addwf	_Seconds+3,f
  1324     013F                     u3293:
  1325     013F                     l2684:
  1326                           
  1327                           ;main.c: 127:         end--;
  1328     013F  3001               	movlw	1
  1329     0140  02D2               	subwf	main@end,f
  1330     0141                     l2686:
  1331                           
  1332                           ;main.c: 128:         c++;
  1333     0141  3001               	movlw	1
  1334     0142  00FF               	movwf	btemp+1
  1335     0143  087F               	movf	btemp+1,w
  1336     0144  07CE               	addwf	main@c_194,f
  1337     0145                     l2688:
  1338                           
  1339                           ;main.c: 124:     while(*c!=0)
  1340     0145  084E               	movf	main@c_194,w
  1341     0146  0084               	movwf	4
  1342     0147  1383               	bcf	3,7	;select IRP bank0
  1343     0148  0800               	movf	0,w
  1344     0149  1D03               	btfss	3,2
  1345     014A  294C               	goto	u3301
  1346     014B  294D               	goto	u3300
  1347     014C                     u3301:
  1348     014C  291C               	goto	l2682
  1349     014D                     u3300:
  1350     014D  29C7               	goto	l2700
  1351     014E                     l2690:
  1352                           
  1353                           ;main.c: 132:     {;main.c: 133:         if(( (Current_Year%4==0) && ( (Current_Year%100
      +                          !=0) || (Current_Year%400==0) ) ))
  1354     014E  3003               	movlw	3
  1355     014F  1283               	bcf	3,5	;RP0=0, select bank0
  1356     0150  1303               	bcf	3,6	;RP1=0, select bank0
  1357     0151  055D               	andwf	_Current_Year,w
  1358     0152  00AE               	movwf	??_main
  1359     0153  3000               	movlw	0
  1360     0154  055E               	andwf	_Current_Year+1,w
  1361     0155  00AF               	movwf	??_main+1
  1362     0156  082E               	movf	??_main,w
  1363     0157  042F               	iorwf	??_main+1,w
  1364     0158  1D03               	btfss	3,2
  1365     0159  295B               	goto	u3311
  1366     015A  295C               	goto	u3310
  1367     015B                     u3311:
  1368     015B  29A3               	goto	l2698
  1369     015C                     u3310:
  1370     015C                     l2692:
  1371     015C  3064               	movlw	100
  1372     015D  00F2               	movwf	___awmod@divisor
  1373     015E  3000               	movlw	0
  1374     015F  00F3               	movwf	___awmod@divisor+1
  1375     0160  085E               	movf	_Current_Year+1,w
  1376     0161  00F5               	movwf	___awmod@dividend+1
  1377     0162  085D               	movf	_Current_Year,w
  1378     0163  00F4               	movwf	___awmod@dividend
  1379     0164  120A  158A  26E6  120A  118A  	fcall	___awmod
  1380     0169  0872               	movf	?___awmod,w
  1381     016A  0473               	iorwf	?___awmod+1,w
  1382     016B  1D03               	btfss	3,2
  1383     016C  296E               	goto	u3321
  1384     016D  296F               	goto	u3320
  1385     016E                     u3321:
  1386     016E  2984               	goto	l2696
  1387     016F                     u3320:
  1388     016F                     l2694:
  1389     016F  3090               	movlw	144
  1390     0170  00F2               	movwf	___awmod@divisor
  1391     0171  3001               	movlw	1
  1392     0172  00F3               	movwf	___awmod@divisor+1
  1393     0173  1283               	bcf	3,5	;RP0=0, select bank0
  1394     0174  1303               	bcf	3,6	;RP1=0, select bank0
  1395     0175  085E               	movf	_Current_Year+1,w
  1396     0176  00F5               	movwf	___awmod@dividend+1
  1397     0177  085D               	movf	_Current_Year,w
  1398     0178  00F4               	movwf	___awmod@dividend
  1399     0179  120A  158A  26E6  120A  118A  	fcall	___awmod
  1400     017E  0872               	movf	?___awmod,w
  1401     017F  0473               	iorwf	?___awmod+1,w
  1402     0180  1D03               	btfss	3,2
  1403     0181  2983               	goto	u3331
  1404     0182  2984               	goto	u3330
  1405     0183                     u3331:
  1406     0183  29A3               	goto	l2698
  1407     0184                     u3330:
  1408     0184                     l2696:
  1409                           
  1410                           ;main.c: 134:         {;main.c: 135:             Seconds-=31622400;
  1411     0184  3000               	movlw	0
  1412     0185  1283               	bcf	3,5	;RP0=0, select bank0
  1413     0186  1303               	bcf	3,6	;RP1=0, select bank0
  1414     0187  00AE               	movwf	??_main
  1415     0188  3085               	movlw	133
  1416     0189  00AF               	movwf	??_main+1
  1417     018A  30E2               	movlw	226
  1418     018B  00B0               	movwf	??_main+2
  1419     018C  3001               	movlw	1
  1420     018D  00B1               	movwf	??_main+3
  1421     018E  082E               	movf	??_main,w
  1422     018F  02D5               	subwf	_Seconds,f
  1423     0190  082F               	movf	??_main+1,w
  1424     0191  1C03               	skipc
  1425     0192  0F2F               	incfsz	??_main+1,w
  1426     0193  2995               	goto	u3345
  1427     0194  2996               	goto	u3346
  1428     0195                     u3345:
  1429     0195  02D6               	subwf	_Seconds+1,f
  1430     0196                     u3346:
  1431     0196  0830               	movf	??_main+2,w
  1432     0197  1C03               	skipc
  1433     0198  0F30               	incfsz	??_main+2,w
  1434     0199  299B               	goto	u3347
  1435     019A  299C               	goto	u3348
  1436     019B                     u3347:
  1437     019B  02D7               	subwf	_Seconds+2,f
  1438     019C                     u3348:
  1439     019C  0831               	movf	??_main+3,w
  1440     019D  1C03               	skipc
  1441     019E  0F31               	incfsz	??_main+3,w
  1442     019F  29A1               	goto	u3349
  1443     01A0  29A2               	goto	u3340
  1444     01A1                     u3349:
  1445     01A1  02D8               	subwf	_Seconds+3,f
  1446     01A2                     u3340:
  1447                           
  1448                           ;main.c: 136:         }
  1449     01A2  29C1               	goto	l290
  1450     01A3                     l2698:
  1451                           
  1452                           ;main.c: 138:         {;main.c: 139:             Seconds-=31536000;
  1453     01A3  3080               	movlw	128
  1454     01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1455     01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1456     01A6  00AE               	movwf	??_main
  1457     01A7  3033               	movlw	51
  1458     01A8  00AF               	movwf	??_main+1
  1459     01A9  30E1               	movlw	225
  1460     01AA  00B0               	movwf	??_main+2
  1461     01AB  3001               	movlw	1
  1462     01AC  00B1               	movwf	??_main+3
  1463     01AD  082E               	movf	??_main,w
  1464     01AE  02D5               	subwf	_Seconds,f
  1465     01AF  082F               	movf	??_main+1,w
  1466     01B0  1C03               	skipc
  1467     01B1  0F2F               	incfsz	??_main+1,w
  1468     01B2  29B4               	goto	u3355
  1469     01B3  29B5               	goto	u3356
  1470     01B4                     u3355:
  1471     01B4  02D6               	subwf	_Seconds+1,f
  1472     01B5                     u3356:
  1473     01B5  0830               	movf	??_main+2,w
  1474     01B6  1C03               	skipc
  1475     01B7  0F30               	incfsz	??_main+2,w
  1476     01B8  29BA               	goto	u3357
  1477     01B9  29BB               	goto	u3358
  1478     01BA                     u3357:
  1479     01BA  02D7               	subwf	_Seconds+2,f
  1480     01BB                     u3358:
  1481     01BB  0831               	movf	??_main+3,w
  1482     01BC  1C03               	skipc
  1483     01BD  0F31               	incfsz	??_main+3,w
  1484     01BE  29C0               	goto	u3359
  1485     01BF  29C1               	goto	u3350
  1486     01C0                     u3359:
  1487     01C0  02D8               	subwf	_Seconds+3,f
  1488     01C1                     u3350:
  1489     01C1                     l290:	
  1490                           ;main.c: 140:         }
  1491                           
  1492                           
  1493                           ;main.c: 141:         Current_Year++;
  1494     01C1  3001               	movlw	1
  1495     01C2  07DD               	addwf	_Current_Year,f
  1496     01C3  1803               	skipnc
  1497     01C4  0ADE               	incf	_Current_Year+1,f
  1498     01C5  3000               	movlw	0
  1499     01C6  07DE               	addwf	_Current_Year+1,f
  1500     01C7                     l2700:
  1501                           
  1502                           ;main.c: 131:     while( (( (Current_Year%4==0) && ( (Current_Year%100!=0) || (Current_Y
      +                          ear%400==0) ) ) && Seconds>=31622400) || (Seconds>=31536000 && !( (Current_Year%4==0) &&
      +                           ( (Current_Year%100!=0) || (Current_Year%400==0) ) )))
  1503     01C7  3003               	movlw	3
  1504     01C8  055D               	andwf	_Current_Year,w
  1505     01C9  00AE               	movwf	??_main
  1506     01CA  3000               	movlw	0
  1507     01CB  055E               	andwf	_Current_Year+1,w
  1508     01CC  00AF               	movwf	??_main+1
  1509     01CD  082E               	movf	??_main,w
  1510     01CE  042F               	iorwf	??_main+1,w
  1511     01CF  1D03               	btfss	3,2
  1512     01D0  29D2               	goto	u3361
  1513     01D1  29D3               	goto	u3360
  1514     01D2                     u3361:
  1515     01D2  2A11               	goto	l2708
  1516     01D3                     u3360:
  1517     01D3                     l2702:
  1518     01D3  3064               	movlw	100
  1519     01D4  00F2               	movwf	___awmod@divisor
  1520     01D5  3000               	movlw	0
  1521     01D6  00F3               	movwf	___awmod@divisor+1
  1522     01D7  085E               	movf	_Current_Year+1,w
  1523     01D8  00F5               	movwf	___awmod@dividend+1
  1524     01D9  085D               	movf	_Current_Year,w
  1525     01DA  00F4               	movwf	___awmod@dividend
  1526     01DB  120A  158A  26E6  120A  118A  	fcall	___awmod
  1527     01E0  0872               	movf	?___awmod,w
  1528     01E1  0473               	iorwf	?___awmod+1,w
  1529     01E2  1D03               	btfss	3,2
  1530     01E3  29E5               	goto	u3371
  1531     01E4  29E6               	goto	u3370
  1532     01E5                     u3371:
  1533     01E5  29FB               	goto	l2706
  1534     01E6                     u3370:
  1535     01E6                     l2704:
  1536     01E6  3090               	movlw	144
  1537     01E7  00F2               	movwf	___awmod@divisor
  1538     01E8  3001               	movlw	1
  1539     01E9  00F3               	movwf	___awmod@divisor+1
  1540     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1541     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1542     01EC  085E               	movf	_Current_Year+1,w
  1543     01ED  00F5               	movwf	___awmod@dividend+1
  1544     01EE  085D               	movf	_Current_Year,w
  1545     01EF  00F4               	movwf	___awmod@dividend
  1546     01F0  120A  158A  26E6  120A  118A  	fcall	___awmod
  1547     01F5  0872               	movf	?___awmod,w
  1548     01F6  0473               	iorwf	?___awmod+1,w
  1549     01F7  1D03               	btfss	3,2
  1550     01F8  29FA               	goto	u3381
  1551     01F9  29FB               	goto	u3380
  1552     01FA                     u3381:
  1553     01FA  2A11               	goto	l2708
  1554     01FB                     u3380:
  1555     01FB                     l2706:
  1556     01FB  3001               	movlw	1
  1557     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1558     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1559     01FE  0258               	subwf	_Seconds+3,w
  1560     01FF  1D03               	skipz
  1561     0200  2A0D               	goto	u3393
  1562     0201  30E2               	movlw	226
  1563     0202  0257               	subwf	_Seconds+2,w
  1564     0203  1D03               	skipz
  1565     0204  2A0D               	goto	u3393
  1566     0205  3085               	movlw	133
  1567     0206  0256               	subwf	_Seconds+1,w
  1568     0207  1D03               	skipz
  1569     0208  2A0D               	goto	u3393
  1570     0209  3000               	movlw	0
  1571     020A  0255               	subwf	_Seconds,w
  1572     020B  1D03               	skipz
  1573     020C  2A0D               	goto	u3393
  1574     020D                     u3393:
  1575     020D  1803               	btfsc	3,0
  1576     020E  2A10               	goto	u3391
  1577     020F  2A11               	goto	u3390
  1578     0210                     u3391:
  1579     0210  294E               	goto	l2690
  1580     0211                     u3390:
  1581     0211                     l2708:
  1582     0211  3001               	movlw	1
  1583     0212  1283               	bcf	3,5	;RP0=0, select bank0
  1584     0213  1303               	bcf	3,6	;RP1=0, select bank0
  1585     0214  0258               	subwf	_Seconds+3,w
  1586     0215  1D03               	skipz
  1587     0216  2A23               	goto	u3403
  1588     0217  30E1               	movlw	225
  1589     0218  0257               	subwf	_Seconds+2,w
  1590     0219  1D03               	skipz
  1591     021A  2A23               	goto	u3403
  1592     021B  3033               	movlw	51
  1593     021C  0256               	subwf	_Seconds+1,w
  1594     021D  1D03               	skipz
  1595     021E  2A23               	goto	u3403
  1596     021F  3080               	movlw	128
  1597     0220  0255               	subwf	_Seconds,w
  1598     0221  1D03               	skipz
  1599     0222  2A23               	goto	u3403
  1600     0223                     u3403:
  1601     0223  1C03               	btfss	3,0
  1602     0224  2A26               	goto	u3401
  1603     0225  2A27               	goto	u3400
  1604     0226                     u3401:
  1605     0226  2A5D               	goto	l2716
  1606     0227                     u3400:
  1607     0227                     l2710:
  1608     0227  3003               	movlw	3
  1609     0228  1283               	bcf	3,5	;RP0=0, select bank0
  1610     0229  1303               	bcf	3,6	;RP1=0, select bank0
  1611     022A  055D               	andwf	_Current_Year,w
  1612     022B  00AE               	movwf	??_main
  1613     022C  3000               	movlw	0
  1614     022D  055E               	andwf	_Current_Year+1,w
  1615     022E  00AF               	movwf	??_main+1
  1616     022F  082E               	movf	??_main,w
  1617     0230  042F               	iorwf	??_main+1,w
  1618     0231  1D03               	btfss	3,2
  1619     0232  2A34               	goto	u3411
  1620     0233  2A35               	goto	u3410
  1621     0234                     u3411:
  1622     0234  294E               	goto	l2690
  1623     0235                     u3410:
  1624     0235                     l2712:
  1625     0235  3064               	movlw	100
  1626     0236  00F2               	movwf	___awmod@divisor
  1627     0237  3000               	movlw	0
  1628     0238  00F3               	movwf	___awmod@divisor+1
  1629     0239  085E               	movf	_Current_Year+1,w
  1630     023A  00F5               	movwf	___awmod@dividend+1
  1631     023B  085D               	movf	_Current_Year,w
  1632     023C  00F4               	movwf	___awmod@dividend
  1633     023D  120A  158A  26E6  120A  118A  	fcall	___awmod
  1634     0242  0872               	movf	?___awmod,w
  1635     0243  0473               	iorwf	?___awmod+1,w
  1636     0244  1D03               	btfss	3,2
  1637     0245  2A47               	goto	u3421
  1638     0246  2A48               	goto	u3420
  1639     0247                     u3421:
  1640     0247  2A5D               	goto	l2716
  1641     0248                     u3420:
  1642     0248                     l2714:
  1643     0248  3090               	movlw	144
  1644     0249  00F2               	movwf	___awmod@divisor
  1645     024A  3001               	movlw	1
  1646     024B  00F3               	movwf	___awmod@divisor+1
  1647     024C  1283               	bcf	3,5	;RP0=0, select bank0
  1648     024D  1303               	bcf	3,6	;RP1=0, select bank0
  1649     024E  085E               	movf	_Current_Year+1,w
  1650     024F  00F5               	movwf	___awmod@dividend+1
  1651     0250  085D               	movf	_Current_Year,w
  1652     0251  00F4               	movwf	___awmod@dividend
  1653     0252  120A  158A  26E6  120A  118A  	fcall	___awmod
  1654     0257  0872               	movf	?___awmod,w
  1655     0258  0473               	iorwf	?___awmod+1,w
  1656     0259  1D03               	btfss	3,2
  1657     025A  2A5C               	goto	u3431
  1658     025B  2A5D               	goto	u3430
  1659     025C                     u3431:
  1660     025C  294E               	goto	l2690
  1661     025D                     u3430:
  1662     025D                     l2716:
  1663                           
  1664                           ;main.c: 144:     if(Seconds>=86400)
  1665     025D  1283               	bcf	3,5	;RP0=0, select bank0
  1666     025E  1303               	bcf	3,6	;RP1=0, select bank0
  1667     025F  0858               	movf	_Seconds+3,w
  1668     0260  1D03               	btfss	3,2
  1669     0261  2A72               	goto	u3440
  1670     0262  3001               	movlw	1
  1671     0263  0257               	subwf	_Seconds+2,w
  1672     0264  1D03               	skipz
  1673     0265  2A6E               	goto	u3443
  1674     0266  3051               	movlw	81
  1675     0267  0256               	subwf	_Seconds+1,w
  1676     0268  1D03               	skipz
  1677     0269  2A6E               	goto	u3443
  1678     026A  3080               	movlw	128
  1679     026B  0255               	subwf	_Seconds,w
  1680     026C  1D03               	skipz
  1681     026D  2A6E               	goto	u3443
  1682     026E                     u3443:
  1683     026E  1C03               	btfss	3,0
  1684     026F  2A71               	goto	u3441
  1685     0270  2A72               	goto	u3440
  1686     0271                     u3441:
  1687     0271  2B5A               	goto	l2750
  1688     0272                     u3440:
  1689     0272                     l2718:
  1690                           
  1691                           ;main.c: 145:     {;main.c: 146:         int num_of_Current_Days=Seconds/(86400);
  1692     0272  3000               	movlw	0
  1693     0273  00F5               	movwf	___lldiv@divisor+3
  1694     0274  3001               	movlw	1
  1695     0275  00F4               	movwf	___lldiv@divisor+2
  1696     0276  3051               	movlw	81
  1697     0277  00F3               	movwf	___lldiv@divisor+1
  1698     0278  3080               	movlw	128
  1699     0279  00F2               	movwf	___lldiv@divisor
  1700     027A  1283               	bcf	3,5	;RP0=0, select bank0
  1701     027B  1303               	bcf	3,6	;RP1=0, select bank0
  1702     027C  0858               	movf	_Seconds+3,w
  1703     027D  00F9               	movwf	___lldiv@dividend+3
  1704     027E  0857               	movf	_Seconds+2,w
  1705     027F  00F8               	movwf	___lldiv@dividend+2
  1706     0280  0856               	movf	_Seconds+1,w
  1707     0281  00F7               	movwf	___lldiv@dividend+1
  1708     0282  0855               	movf	_Seconds,w
  1709     0283  00F6               	movwf	___lldiv@dividend
  1710     0284  120A  118A  2748  120A  118A  	fcall	___lldiv
  1711     0289  0873               	movf	?___lldiv+1,w
  1712     028A  1283               	bcf	3,5	;RP0=0, select bank0
  1713     028B  1303               	bcf	3,6	;RP1=0, select bank0
  1714     028C  00CC               	movwf	main@num_of_Current_Days+1
  1715     028D  0872               	movf	?___lldiv,w
  1716     028E  00CB               	movwf	main@num_of_Current_Days
  1717     028F                     l2720:
  1718                           
  1719                           ;main.c: 147:         int desired = 0 ;
  1720     028F  01CF               	clrf	main@desired
  1721     0290  01D0               	clrf	main@desired+1
  1722     0291                     l2722:
  1723                           
  1724                           ;main.c: 148:         int i=0;
  1725     0291  01D3               	clrf	main@i
  1726     0292  01D4               	clrf	main@i+1
  1727     0293                     l2724:
  1728                           
  1729                           ;main.c: 149:         for( i=0; i<11 && desired + months[i] <num_of_Current_Days && num_
      +                          of_Current_Days!=0 ;i++)
  1730     0293  01D3               	clrf	main@i
  1731     0294  01D4               	clrf	main@i+1
  1732     0295  2AF9               	goto	l2740
  1733     0296                     l2726:
  1734                           
  1735                           ;main.c: 150:         {;main.c: 151:             if(i==1 && ( (Current_Year%4==0) && ( (
      +                          Current_Year%100!=0) || (Current_Year%400==0) ) ) )
  1736     0296  0353               	decf	main@i,w
  1737     0297  0454               	iorwf	main@i+1,w
  1738     0298  1D03               	btfss	3,2
  1739     0299  2A9B               	goto	u3451
  1740     029A  2A9C               	goto	u3450
  1741     029B                     u3451:
  1742     029B  2AE4               	goto	l2736
  1743     029C                     u3450:
  1744     029C                     l2728:
  1745     029C  3003               	movlw	3
  1746     029D  055D               	andwf	_Current_Year,w
  1747     029E  00AE               	movwf	??_main
  1748     029F  3000               	movlw	0
  1749     02A0  055E               	andwf	_Current_Year+1,w
  1750     02A1  00AF               	movwf	??_main+1
  1751     02A2  082E               	movf	??_main,w
  1752     02A3  042F               	iorwf	??_main+1,w
  1753     02A4  1D03               	btfss	3,2
  1754     02A5  2AA7               	goto	u3461
  1755     02A6  2AA8               	goto	u3460
  1756     02A7                     u3461:
  1757     02A7  2AE4               	goto	l2736
  1758     02A8                     u3460:
  1759     02A8                     l2730:
  1760     02A8  3064               	movlw	100
  1761     02A9  00F2               	movwf	___awmod@divisor
  1762     02AA  3000               	movlw	0
  1763     02AB  00F3               	movwf	___awmod@divisor+1
  1764     02AC  085E               	movf	_Current_Year+1,w
  1765     02AD  00F5               	movwf	___awmod@dividend+1
  1766     02AE  085D               	movf	_Current_Year,w
  1767     02AF  00F4               	movwf	___awmod@dividend
  1768     02B0  120A  158A  26E6  120A  118A  	fcall	___awmod
  1769     02B5  0872               	movf	?___awmod,w
  1770     02B6  0473               	iorwf	?___awmod+1,w
  1771     02B7  1D03               	btfss	3,2
  1772     02B8  2ABA               	goto	u3471
  1773     02B9  2ABB               	goto	u3470
  1774     02BA                     u3471:
  1775     02BA  2AD0               	goto	l2734
  1776     02BB                     u3470:
  1777     02BB                     l2732:
  1778     02BB  3090               	movlw	144
  1779     02BC  00F2               	movwf	___awmod@divisor
  1780     02BD  3001               	movlw	1
  1781     02BE  00F3               	movwf	___awmod@divisor+1
  1782     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1783     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1784     02C1  085E               	movf	_Current_Year+1,w
  1785     02C2  00F5               	movwf	___awmod@dividend+1
  1786     02C3  085D               	movf	_Current_Year,w
  1787     02C4  00F4               	movwf	___awmod@dividend
  1788     02C5  120A  158A  26E6  120A  118A  	fcall	___awmod
  1789     02CA  0872               	movf	?___awmod,w
  1790     02CB  0473               	iorwf	?___awmod+1,w
  1791     02CC  1D03               	btfss	3,2
  1792     02CD  2ACF               	goto	u3481
  1793     02CE  2AD0               	goto	u3480
  1794     02CF                     u3481:
  1795     02CF  2AE4               	goto	l2736
  1796     02D0                     u3480:
  1797     02D0                     l2734:
  1798                           
  1799                           ;main.c: 152:             {;main.c: 153:                 desired+=(months[i]+1);
  1800     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1801     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1802     02D2  0853               	movf	main@i,w
  1803     02D3  3E3F               	addlw	(low (main@months| 0))& (0+255)
  1804     02D4  0084               	movwf	4
  1805     02D5  1383               	bcf	3,7	;select IRP bank0
  1806     02D6  0800               	movf	0,w
  1807     02D7  3E01               	addlw	1
  1808     02D8  00AE               	movwf	??_main
  1809     02D9  3000               	movlw	0
  1810     02DA  1803               	skipnc
  1811     02DB  3001               	movlw	1
  1812     02DC  00AF               	movwf	??_main+1
  1813     02DD  082E               	movf	??_main,w
  1814     02DE  07CF               	addwf	main@desired,f
  1815     02DF  1803               	skipnc
  1816     02E0  0AD0               	incf	main@desired+1,f
  1817     02E1  082F               	movf	??_main+1,w
  1818     02E2  07D0               	addwf	main@desired+1,f
  1819                           
  1820                           ;main.c: 154:                 continue;
  1821     02E3  2AF3               	goto	l2738
  1822     02E4                     l2736:
  1823                           
  1824                           ;main.c: 156:             desired+=months[i];
  1825     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1826     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1827     02E6  0853               	movf	main@i,w
  1828     02E7  3E3F               	addlw	(low (main@months| 0))& (0+255)
  1829     02E8  0084               	movwf	4
  1830     02E9  1383               	bcf	3,7	;select IRP bank0
  1831     02EA  0800               	movf	0,w
  1832     02EB  00AE               	movwf	??_main
  1833     02EC  01AF               	clrf	??_main+1
  1834     02ED  082E               	movf	??_main,w
  1835     02EE  07CF               	addwf	main@desired,f
  1836     02EF  1803               	skipnc
  1837     02F0  0AD0               	incf	main@desired+1,f
  1838     02F1  082F               	movf	??_main+1,w
  1839     02F2  07D0               	addwf	main@desired+1,f
  1840     02F3                     l2738:
  1841     02F3  3001               	movlw	1
  1842     02F4  07D3               	addwf	main@i,f
  1843     02F5  1803               	skipnc
  1844     02F6  0AD4               	incf	main@i+1,f
  1845     02F7  3000               	movlw	0
  1846     02F8  07D4               	addwf	main@i+1,f
  1847     02F9                     l2740:
  1848     02F9  0854               	movf	main@i+1,w
  1849     02FA  3A80               	xorlw	128
  1850     02FB  00FF               	movwf	btemp+1
  1851     02FC  3080               	movlw	128
  1852     02FD  027F               	subwf	btemp+1,w
  1853     02FE  1D03               	skipz
  1854     02FF  2B02               	goto	u3495
  1855     0300  300B               	movlw	11
  1856     0301  0253               	subwf	main@i,w
  1857     0302                     u3495:
  1858     0302  1803               	skipnc
  1859     0303  2B05               	goto	u3491
  1860     0304  2B06               	goto	u3490
  1861     0305                     u3491:
  1862     0305  2B29               	goto	l2746
  1863     0306                     u3490:
  1864     0306                     l2742:
  1865     0306  1283               	bcf	3,5	;RP0=0, select bank0
  1866     0307  1303               	bcf	3,6	;RP1=0, select bank0
  1867     0308  0853               	movf	main@i,w
  1868     0309  3E3F               	addlw	(low (main@months| 0))& (0+255)
  1869     030A  0084               	movwf	4
  1870     030B  1383               	bcf	3,7	;select IRP bank0
  1871     030C  0800               	movf	0,w
  1872     030D  074F               	addwf	main@desired,w
  1873     030E  00AE               	movwf	??_main
  1874     030F  0850               	movf	main@desired+1,w
  1875     0310  1803               	skipnc
  1876     0311  0A50               	incf	main@desired+1,w
  1877     0312  00AF               	movwf	??_main+1
  1878     0313  082F               	movf	??_main+1,w
  1879     0314  3A80               	xorlw	128
  1880     0315  00B0               	movwf	??_main+2
  1881     0316  084C               	movf	main@num_of_Current_Days+1,w
  1882     0317  3A80               	xorlw	128
  1883     0318  0230               	subwf	??_main+2,w
  1884     0319  1D03               	skipz
  1885     031A  2B1D               	goto	u3505
  1886     031B  084B               	movf	main@num_of_Current_Days,w
  1887     031C  022E               	subwf	??_main,w
  1888     031D                     u3505:
  1889     031D  1803               	skipnc
  1890     031E  2B20               	goto	u3501
  1891     031F  2B21               	goto	u3500
  1892     0320                     u3501:
  1893     0320  2B29               	goto	l2746
  1894     0321                     u3500:
  1895     0321                     l2744:
  1896     0321  1283               	bcf	3,5	;RP0=0, select bank0
  1897     0322  1303               	bcf	3,6	;RP1=0, select bank0
  1898     0323  084B               	movf	main@num_of_Current_Days,w
  1899     0324  044C               	iorwf	main@num_of_Current_Days+1,w
  1900     0325  1D03               	btfss	3,2
  1901     0326  2B28               	goto	u3511
  1902     0327  2B29               	goto	u3510
  1903     0328                     u3511:
  1904     0328  2A96               	goto	l2726
  1905     0329                     u3510:
  1906     0329                     l2746:
  1907                           
  1908                           ;main.c: 158:         month = i+1;
  1909     0329  1283               	bcf	3,5	;RP0=0, select bank0
  1910     032A  1303               	bcf	3,6	;RP1=0, select bank0
  1911     032B  0853               	movf	main@i,w
  1912     032C  3E01               	addlw	1
  1913     032D  00E2               	movwf	_month
  1914     032E                     l2748:
  1915                           
  1916                           ;main.c: 159:         Seconds-=(desired*86400);
  1917     032E  084F               	movf	main@desired,w
  1918     032F  00F2               	movwf	___lmul@multiplier
  1919     0330  0850               	movf	main@desired+1,w
  1920     0331  00F3               	movwf	___lmul@multiplier+1
  1921     0332  3000               	movlw	0
  1922     0333  1BF3               	btfsc	___lmul@multiplier+1,7
  1923     0334  30FF               	movlw	255
  1924     0335  00F4               	movwf	___lmul@multiplier+2
  1925     0336  00F5               	movwf	___lmul@multiplier+3
  1926     0337  3000               	movlw	0
  1927     0338  00F9               	movwf	___lmul@multiplicand+3
  1928     0339  3001               	movlw	1
  1929     033A  00F8               	movwf	___lmul@multiplicand+2
  1930     033B  3051               	movlw	81
  1931     033C  00F7               	movwf	___lmul@multiplicand+1
  1932     033D  3080               	movlw	128
  1933     033E  00F6               	movwf	___lmul@multiplicand
  1934     033F  120A  158A  25AC  120A  118A  	fcall	___lmul
  1935     0344  0872               	movf	?___lmul,w
  1936     0345  1283               	bcf	3,5	;RP0=0, select bank0
  1937     0346  1303               	bcf	3,6	;RP1=0, select bank0
  1938     0347  02D5               	subwf	_Seconds,f
  1939     0348  0873               	movf	?___lmul+1,w
  1940     0349  1C03               	skipc
  1941     034A  0F73               	incfsz	?___lmul+1,w
  1942     034B  2B4D               	goto	u3525
  1943     034C  2B4E               	goto	u3526
  1944     034D                     u3525:
  1945     034D  02D6               	subwf	_Seconds+1,f
  1946     034E                     u3526:
  1947     034E  0874               	movf	?___lmul+2,w
  1948     034F  1C03               	skipc
  1949     0350  0F74               	incfsz	?___lmul+2,w
  1950     0351  2B53               	goto	u3527
  1951     0352  2B54               	goto	u3528
  1952     0353                     u3527:
  1953     0353  02D7               	subwf	_Seconds+2,f
  1954     0354                     u3528:
  1955     0354  0875               	movf	?___lmul+3,w
  1956     0355  1C03               	skipc
  1957     0356  0F75               	incfsz	?___lmul+3,w
  1958     0357  2B59               	goto	u3529
  1959     0358  2B5A               	goto	u3520
  1960     0359                     u3529:
  1961     0359  02D8               	subwf	_Seconds+3,f
  1962     035A                     u3520:
  1963     035A                     l2750:
  1964                           
  1965                           ;main.c: 161:     if(Seconds>=86400)
  1966     035A  1283               	bcf	3,5	;RP0=0, select bank0
  1967     035B  1303               	bcf	3,6	;RP1=0, select bank0
  1968     035C  0858               	movf	_Seconds+3,w
  1969     035D  1D03               	btfss	3,2
  1970     035E  2B6F               	goto	u3530
  1971     035F  3001               	movlw	1
  1972     0360  0257               	subwf	_Seconds+2,w
  1973     0361  1D03               	skipz
  1974     0362  2B6B               	goto	u3533
  1975     0363  3051               	movlw	81
  1976     0364  0256               	subwf	_Seconds+1,w
  1977     0365  1D03               	skipz
  1978     0366  2B6B               	goto	u3533
  1979     0367  3080               	movlw	128
  1980     0368  0255               	subwf	_Seconds,w
  1981     0369  1D03               	skipz
  1982     036A  2B6B               	goto	u3533
  1983     036B                     u3533:
  1984     036B  1C03               	btfss	3,0
  1985     036C  2B6E               	goto	u3531
  1986     036D  2B6F               	goto	u3530
  1987     036E                     u3531:
  1988     036E  2BAD               	goto	l2758
  1989     036F                     u3530:
  1990     036F                     l2752:
  1991                           
  1992                           ;main.c: 162:     {;main.c: 163:         Current_Day = Seconds / 86400;
  1993     036F  3000               	movlw	0
  1994     0370  00F5               	movwf	___lldiv@divisor+3
  1995     0371  3001               	movlw	1
  1996     0372  00F4               	movwf	___lldiv@divisor+2
  1997     0373  3051               	movlw	81
  1998     0374  00F3               	movwf	___lldiv@divisor+1
  1999     0375  3080               	movlw	128
  2000     0376  00F2               	movwf	___lldiv@divisor
  2001     0377  1283               	bcf	3,5	;RP0=0, select bank0
  2002     0378  1303               	bcf	3,6	;RP1=0, select bank0
  2003     0379  0858               	movf	_Seconds+3,w
  2004     037A  00F9               	movwf	___lldiv@dividend+3
  2005     037B  0857               	movf	_Seconds+2,w
  2006     037C  00F8               	movwf	___lldiv@dividend+2
  2007     037D  0856               	movf	_Seconds+1,w
  2008     037E  00F7               	movwf	___lldiv@dividend+1
  2009     037F  0855               	movf	_Seconds,w
  2010     0380  00F6               	movwf	___lldiv@dividend
  2011     0381  120A  118A  2748  120A  118A  	fcall	___lldiv
  2012     0386  0872               	movf	?___lldiv,w
  2013     0387  1283               	bcf	3,5	;RP0=0, select bank0
  2014     0388  1303               	bcf	3,6	;RP1=0, select bank0
  2015     0389  00E1               	movwf	_Current_Day
  2016     038A                     l2754:
  2017                           
  2018                           ;main.c: 164:         Current_Day++;
  2019     038A  3001               	movlw	1
  2020     038B  00FF               	movwf	btemp+1
  2021     038C  087F               	movf	btemp+1,w
  2022     038D  07E1               	addwf	_Current_Day,f
  2023     038E                     l2756:
  2024                           
  2025                           ;main.c: 165:         Seconds= (Seconds % 86400) ;
  2026     038E  3000               	movlw	0
  2027     038F  00F5               	movwf	___llmod@divisor+3
  2028     0390  3001               	movlw	1
  2029     0391  00F4               	movwf	___llmod@divisor+2
  2030     0392  3051               	movlw	81
  2031     0393  00F3               	movwf	___llmod@divisor+1
  2032     0394  3080               	movlw	128
  2033     0395  00F2               	movwf	___llmod@divisor
  2034     0396  0858               	movf	_Seconds+3,w
  2035     0397  00F9               	movwf	___llmod@dividend+3
  2036     0398  0857               	movf	_Seconds+2,w
  2037     0399  00F8               	movwf	___llmod@dividend+2
  2038     039A  0856               	movf	_Seconds+1,w
  2039     039B  00F7               	movwf	___llmod@dividend+1
  2040     039C  0855               	movf	_Seconds,w
  2041     039D  00F6               	movwf	___llmod@dividend
  2042     039E  120A  158A  2690  120A  118A  	fcall	___llmod
  2043     03A3  0875               	movf	?___llmod+3,w
  2044     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2045     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2046     03A6  00D8               	movwf	_Seconds+3
  2047     03A7  0874               	movf	?___llmod+2,w
  2048     03A8  00D7               	movwf	_Seconds+2
  2049     03A9  0873               	movf	?___llmod+1,w
  2050     03AA  00D6               	movwf	_Seconds+1
  2051     03AB  0872               	movf	?___llmod,w
  2052     03AC  00D5               	movwf	_Seconds
  2053     03AD                     l2758:
  2054                           
  2055                           ;main.c: 167:     if(Seconds>=3600)
  2056     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2057     03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2058     03AF  0858               	movf	_Seconds+3,w
  2059     03B0  1D03               	btfss	3,2
  2060     03B1  2BC1               	goto	u3540
  2061     03B2  0857               	movf	_Seconds+2,w
  2062     03B3  1D03               	btfss	3,2
  2063     03B4  2BC1               	goto	u3540
  2064     03B5  300E               	movlw	14
  2065     03B6  0256               	subwf	_Seconds+1,w
  2066     03B7  1D03               	skipz
  2067     03B8  2BBD               	goto	u3543
  2068     03B9  3010               	movlw	16
  2069     03BA  0255               	subwf	_Seconds,w
  2070     03BB  1D03               	skipz
  2071     03BC  2BBD               	goto	u3543
  2072     03BD                     u3543:
  2073     03BD  1C03               	btfss	3,0
  2074     03BE  2BC0               	goto	u3541
  2075     03BF  2BC1               	goto	u3540
  2076     03C0                     u3541:
  2077     03C0  2BFB               	goto	l2762
  2078     03C1                     u3540:
  2079     03C1                     l2760:
  2080                           
  2081                           ;main.c: 168:     {;main.c: 169:         Current_Hour = Seconds/(3600);
  2082     03C1  3000               	movlw	0
  2083     03C2  00F5               	movwf	___lldiv@divisor+3
  2084     03C3  3000               	movlw	0
  2085     03C4  00F4               	movwf	___lldiv@divisor+2
  2086     03C5  300E               	movlw	14
  2087     03C6  00F3               	movwf	___lldiv@divisor+1
  2088     03C7  3010               	movlw	16
  2089     03C8  00F2               	movwf	___lldiv@divisor
  2090     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2091     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2092     03CB  0858               	movf	_Seconds+3,w
  2093     03CC  00F9               	movwf	___lldiv@dividend+3
  2094     03CD  0857               	movf	_Seconds+2,w
  2095     03CE  00F8               	movwf	___lldiv@dividend+2
  2096     03CF  0856               	movf	_Seconds+1,w
  2097     03D0  00F7               	movwf	___lldiv@dividend+1
  2098     03D1  0855               	movf	_Seconds,w
  2099     03D2  00F6               	movwf	___lldiv@dividend
  2100     03D3  120A  118A  2748  120A  118A  	fcall	___lldiv
  2101     03D8  0872               	movf	?___lldiv,w
  2102     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2103     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2104     03DB  00E0               	movwf	_Current_Hour
  2105                           
  2106                           ;main.c: 170:         Seconds= (Seconds%3600);
  2107     03DC  3000               	movlw	0
  2108     03DD  00F5               	movwf	___llmod@divisor+3
  2109     03DE  3000               	movlw	0
  2110     03DF  00F4               	movwf	___llmod@divisor+2
  2111     03E0  300E               	movlw	14
  2112     03E1  00F3               	movwf	___llmod@divisor+1
  2113     03E2  3010               	movlw	16
  2114     03E3  00F2               	movwf	___llmod@divisor
  2115     03E4  0858               	movf	_Seconds+3,w
  2116     03E5  00F9               	movwf	___llmod@dividend+3
  2117     03E6  0857               	movf	_Seconds+2,w
  2118     03E7  00F8               	movwf	___llmod@dividend+2
  2119     03E8  0856               	movf	_Seconds+1,w
  2120     03E9  00F7               	movwf	___llmod@dividend+1
  2121     03EA  0855               	movf	_Seconds,w
  2122     03EB  00F6               	movwf	___llmod@dividend
  2123     03EC  120A  158A  2690  120A  118A  	fcall	___llmod
  2124     03F1  0875               	movf	?___llmod+3,w
  2125     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2126     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2127     03F4  00D8               	movwf	_Seconds+3
  2128     03F5  0874               	movf	?___llmod+2,w
  2129     03F6  00D7               	movwf	_Seconds+2
  2130     03F7  0873               	movf	?___llmod+1,w
  2131     03F8  00D6               	movwf	_Seconds+1
  2132     03F9  0872               	movf	?___llmod,w
  2133     03FA  00D5               	movwf	_Seconds
  2134     03FB                     l2762:
  2135                           
  2136                           ;main.c: 172:     if(Seconds>=60)
  2137     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2138     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2139     03FD  0858               	movf	_Seconds+3,w
  2140     03FE  1D03               	btfss	3,2
  2141     03FF  2C0E               	goto	u3550
  2142     0400  0857               	movf	_Seconds+2,w
  2143     0401  1D03               	btfss	3,2
  2144     0402  2C0E               	goto	u3550
  2145     0403  0856               	movf	_Seconds+1,w
  2146     0404  1D03               	btfss	3,2
  2147     0405  2C0E               	goto	u3550
  2148     0406  303C               	movlw	60
  2149     0407  0255               	subwf	_Seconds,w
  2150     0408  1D03               	skipz
  2151     0409  2C0A               	goto	u3553
  2152     040A                     u3553:
  2153     040A  1C03               	btfss	3,0
  2154     040B  2C0D               	goto	u3551
  2155     040C  2C0E               	goto	u3550
  2156     040D                     u3551:
  2157     040D  2C58               	goto	l2768
  2158     040E                     u3550:
  2159     040E                     l2764:
  2160                           
  2161                           ;main.c: 173:     {;main.c: 174:         Current_Minute = Seconds/(60);
  2162     040E  3000               	movlw	0
  2163     040F  00F5               	movwf	___lldiv@divisor+3
  2164     0410  3000               	movlw	0
  2165     0411  00F4               	movwf	___lldiv@divisor+2
  2166     0412  3000               	movlw	0
  2167     0413  00F3               	movwf	___lldiv@divisor+1
  2168     0414  303C               	movlw	60
  2169     0415  00F2               	movwf	___lldiv@divisor
  2170     0416  1283               	bcf	3,5	;RP0=0, select bank0
  2171     0417  1303               	bcf	3,6	;RP1=0, select bank0
  2172     0418  0858               	movf	_Seconds+3,w
  2173     0419  00F9               	movwf	___lldiv@dividend+3
  2174     041A  0857               	movf	_Seconds+2,w
  2175     041B  00F8               	movwf	___lldiv@dividend+2
  2176     041C  0856               	movf	_Seconds+1,w
  2177     041D  00F7               	movwf	___lldiv@dividend+1
  2178     041E  0855               	movf	_Seconds,w
  2179     041F  00F6               	movwf	___lldiv@dividend
  2180     0420  120A  118A  2748  120A  118A  	fcall	___lldiv
  2181     0425  0872               	movf	?___lldiv,w
  2182     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2183     0427  1303               	bcf	3,6	;RP1=0, select bank0
  2184     0428  00DF               	movwf	_Current_Minute
  2185     0429                     l2766:
  2186                           
  2187                           ;main.c: 175:         Seconds -= (Current_Minute*60);
  2188     0429  085F               	movf	_Current_Minute,w
  2189     042A  00AE               	movwf	??_main
  2190     042B  01AF               	clrf	??_main+1
  2191     042C  082E               	movf	??_main,w
  2192     042D  00F2               	movwf	___wmul@multiplier
  2193     042E  082F               	movf	??_main+1,w
  2194     042F  00F3               	movwf	___wmul@multiplier+1
  2195     0430  303C               	movlw	60
  2196     0431  00F4               	movwf	___wmul@multiplicand
  2197     0432  3000               	movlw	0
  2198     0433  00F5               	movwf	___wmul@multiplicand+1
  2199     0434  120A  158A  24D8  120A  118A  	fcall	___wmul
  2200     0439  0872               	movf	?___wmul,w
  2201     043A  1283               	bcf	3,5	;RP0=0, select bank0
  2202     043B  1303               	bcf	3,6	;RP1=0, select bank0
  2203     043C  00B0               	movwf	??_main+2
  2204     043D  0873               	movf	?___wmul+1,w
  2205     043E  00B1               	movwf	??_main+3
  2206     043F  3000               	movlw	0
  2207     0440  1BB1               	btfsc	??_main+3,7
  2208     0441  30FF               	movlw	255
  2209     0442  00B2               	movwf	??_main+4
  2210     0443  00B3               	movwf	??_main+5
  2211     0444  0830               	movf	??_main+2,w
  2212     0445  02D5               	subwf	_Seconds,f
  2213     0446  0831               	movf	??_main+3,w
  2214     0447  1C03               	skipc
  2215     0448  0F31               	incfsz	??_main+3,w
  2216     0449  2C4B               	goto	u3565
  2217     044A  2C4C               	goto	u3566
  2218     044B                     u3565:
  2219     044B  02D6               	subwf	_Seconds+1,f
  2220     044C                     u3566:
  2221     044C  0832               	movf	??_main+4,w
  2222     044D  1C03               	skipc
  2223     044E  0F32               	incfsz	??_main+4,w
  2224     044F  2C51               	goto	u3567
  2225     0450  2C52               	goto	u3568
  2226     0451                     u3567:
  2227     0451  02D7               	subwf	_Seconds+2,f
  2228     0452                     u3568:
  2229     0452  0833               	movf	??_main+5,w
  2230     0453  1C03               	skipc
  2231     0454  0F33               	incfsz	??_main+5,w
  2232     0455  2C57               	goto	u3569
  2233     0456  2C58               	goto	u3560
  2234     0457                     u3569:
  2235     0457  02D8               	subwf	_Seconds+3,f
  2236     0458                     u3560:
  2237     0458                     l2768:
  2238                           
  2239                           ;main.c: 178:     {;main.c: 179:     lcd_set_cursor(1,1);
  2240     0458  01F6               	clrf	lcd_set_cursor@c
  2241     0459  0AF6               	incf	lcd_set_cursor@c,f
  2242     045A  3001               	movlw	1
  2243     045B  120A  158A  25F4  120A  118A  	fcall	_lcd_set_cursor
  2244     0460                     l2770:
  2245                           
  2246                           ;main.c: 180:     Print(Current_Year,4);
  2247     0460  1283               	bcf	3,5	;RP0=0, select bank0
  2248     0461  1303               	bcf	3,6	;RP1=0, select bank0
  2249     0462  085E               	movf	_Current_Year+1,w
  2250     0463  00A4               	movwf	Print@num+1
  2251     0464  085D               	movf	_Current_Year,w
  2252     0465  00A3               	movwf	Print@num
  2253     0466  3004               	movlw	4
  2254     0467  00A5               	movwf	Print@size
  2255     0468  3000               	movlw	0
  2256     0469  00A6               	movwf	Print@size+1
  2257     046A  120A  158A  273F  120A  118A  	fcall	_Print
  2258     046F                     l2772:
  2259                           
  2260                           ;main.c: 181:     lcd_chr_cp('-');
  2261     046F  302D               	movlw	45
  2262     0470  120A  158A  240E  120A  118A  	fcall	_lcd_chr_cp
  2263     0475                     l2774:
  2264                           
  2265                           ;main.c: 182:     Print(month,2);
  2266     0475  1283               	bcf	3,5	;RP0=0, select bank0
  2267     0476  1303               	bcf	3,6	;RP1=0, select bank0
  2268     0477  0862               	movf	_month,w
  2269     0478  00AE               	movwf	??_main
  2270     0479  01AF               	clrf	??_main+1
  2271     047A  082E               	movf	??_main,w
  2272     047B  00A3               	movwf	Print@num
  2273     047C  082F               	movf	??_main+1,w
  2274     047D  00A4               	movwf	Print@num+1
  2275     047E  3002               	movlw	2
  2276     047F  00A5               	movwf	Print@size
  2277     0480  3000               	movlw	0
  2278     0481  00A6               	movwf	Print@size+1
  2279     0482  120A  158A  273F  120A  118A  	fcall	_Print
  2280     0487                     l2776:
  2281                           
  2282                           ;main.c: 183:     lcd_chr_cp('-');
  2283     0487  302D               	movlw	45
  2284     0488  120A  158A  240E  120A  118A  	fcall	_lcd_chr_cp
  2285     048D                     l2778:
  2286                           
  2287                           ;main.c: 184:     Print(Current_Day,2);
  2288     048D  1283               	bcf	3,5	;RP0=0, select bank0
  2289     048E  1303               	bcf	3,6	;RP1=0, select bank0
  2290     048F  0861               	movf	_Current_Day,w
  2291     0490  00AE               	movwf	??_main
  2292     0491  01AF               	clrf	??_main+1
  2293     0492  082E               	movf	??_main,w
  2294     0493  00A3               	movwf	Print@num
  2295     0494  082F               	movf	??_main+1,w
  2296     0495  00A4               	movwf	Print@num+1
  2297     0496  3002               	movlw	2
  2298     0497  00A5               	movwf	Print@size
  2299     0498  3000               	movlw	0
  2300     0499  00A6               	movwf	Print@size+1
  2301     049A  120A  158A  273F  120A  118A  	fcall	_Print
  2302     049F                     l2780:
  2303                           
  2304                           ;main.c: 185:     lcd_set_cursor(2,1);
  2305     049F  01F6               	clrf	lcd_set_cursor@c
  2306     04A0  0AF6               	incf	lcd_set_cursor@c,f
  2307     04A1  3002               	movlw	2
  2308     04A2  120A  158A  25F4  120A  118A  	fcall	_lcd_set_cursor
  2309     04A7                     l2782:
  2310                           
  2311                           ;main.c: 186:     Print(Current_Hour,2);
  2312     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2313     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2314     04A9  0860               	movf	_Current_Hour,w
  2315     04AA  00AE               	movwf	??_main
  2316     04AB  01AF               	clrf	??_main+1
  2317     04AC  082E               	movf	??_main,w
  2318     04AD  00A3               	movwf	Print@num
  2319     04AE  082F               	movf	??_main+1,w
  2320     04AF  00A4               	movwf	Print@num+1
  2321     04B0  3002               	movlw	2
  2322     04B1  00A5               	movwf	Print@size
  2323     04B2  3000               	movlw	0
  2324     04B3  00A6               	movwf	Print@size+1
  2325     04B4  120A  158A  273F  120A  118A  	fcall	_Print
  2326     04B9                     l2784:
  2327                           
  2328                           ;main.c: 187:     lcd_chr_cp(':');
  2329     04B9  303A               	movlw	58
  2330     04BA  120A  158A  240E  120A  118A  	fcall	_lcd_chr_cp
  2331     04BF                     l2786:
  2332                           
  2333                           ;main.c: 188:     Print(Current_Minute,2);
  2334     04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2335     04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2336     04C1  085F               	movf	_Current_Minute,w
  2337     04C2  00AE               	movwf	??_main
  2338     04C3  01AF               	clrf	??_main+1
  2339     04C4  082E               	movf	??_main,w
  2340     04C5  00A3               	movwf	Print@num
  2341     04C6  082F               	movf	??_main+1,w
  2342     04C7  00A4               	movwf	Print@num+1
  2343     04C8  3002               	movlw	2
  2344     04C9  00A5               	movwf	Print@size
  2345     04CA  3000               	movlw	0
  2346     04CB  00A6               	movwf	Print@size+1
  2347     04CC  120A  158A  273F  120A  118A  	fcall	_Print
  2348     04D1                     l2788:
  2349                           
  2350                           ;main.c: 189:     lcd_chr_cp(':');
  2351     04D1  303A               	movlw	58
  2352     04D2  120A  158A  240E  120A  118A  	fcall	_lcd_chr_cp
  2353     04D7                     l2790:
  2354                           
  2355                           ;main.c: 190:     Print((char)Seconds,2);
  2356     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2357     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2358     04D9  0855               	movf	_Seconds,w
  2359     04DA  00AE               	movwf	??_main
  2360     04DB  01AF               	clrf	??_main+1
  2361     04DC  082E               	movf	??_main,w
  2362     04DD  00A3               	movwf	Print@num
  2363     04DE  082F               	movf	??_main+1,w
  2364     04DF  00A4               	movwf	Print@num+1
  2365     04E0  3002               	movlw	2
  2366     04E1  00A5               	movwf	Print@size
  2367     04E2  3000               	movlw	0
  2368     04E3  00A6               	movwf	Print@size+1
  2369     04E4  120A  158A  273F  120A  118A  	fcall	_Print
  2370     04E9                     l2792:
  2371                           
  2372                           ;main.c: 191:      Required_Delay(1000);
  2373     04E9  3000               	movlw	0
  2374     04EA  00F9               	movwf	Required_Delay@Required_Time+3
  2375     04EB  3000               	movlw	0
  2376     04EC  00F8               	movwf	Required_Delay@Required_Time+2
  2377     04ED  3003               	movlw	3
  2378     04EE  00F7               	movwf	Required_Delay@Required_Time+1
  2379     04EF  30E8               	movlw	232
  2380     04F0  00F6               	movwf	Required_Delay@Required_Time
  2381     04F1  120A  118A  27B0  120A  118A  	fcall	_Required_Delay
  2382     04F6                     l2794:
  2383                           
  2384                           ;main.c: 192:         if(Seconds==59)
  2385     04F6  303B               	movlw	59
  2386     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2387     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2388     04F9  0655               	xorwf	_Seconds,w
  2389     04FA  0456               	iorwf	_Seconds+1,w
  2390     04FB  0457               	iorwf	_Seconds+2,w
  2391     04FC  0458               	iorwf	_Seconds+3,w
  2392     04FD  1D03               	btfss	3,2
  2393     04FE  2D00               	goto	u3571
  2394     04FF  2D01               	goto	u3570
  2395     0500                     u3571:
  2396     0500  2E12               	goto	l2860
  2397     0501                     u3570:
  2398     0501                     l2796:
  2399                           
  2400                           ;main.c: 193:         {;main.c: 194:             Seconds=0;
  2401     0501  3000               	movlw	0
  2402     0502  1283               	bcf	3,5	;RP0=0, select bank0
  2403     0503  1303               	bcf	3,6	;RP1=0, select bank0
  2404     0504  00D8               	movwf	_Seconds+3
  2405     0505  3000               	movlw	0
  2406     0506  00D7               	movwf	_Seconds+2
  2407     0507  3000               	movlw	0
  2408     0508  00D6               	movwf	_Seconds+1
  2409     0509  3000               	movlw	0
  2410     050A  00D5               	movwf	_Seconds
  2411     050B                     l2798:
  2412                           
  2413                           ;main.c: 195:             if(Current_Minute==59)
  2414     050B  303B               	movlw	59
  2415     050C  065F               	xorwf	_Current_Minute,w
  2416     050D  1D03               	btfss	3,2
  2417     050E  2D10               	goto	u3581
  2418     050F  2D11               	goto	u3580
  2419     0510                     u3581:
  2420     0510  2E0D               	goto	l2858
  2421     0511                     u3580:
  2422     0511                     l2800:
  2423                           
  2424                           ;main.c: 196:             {;main.c: 197:                 Current_Minute=0;
  2425     0511  01DF               	clrf	_Current_Minute
  2426     0512                     l2802:
  2427                           
  2428                           ;main.c: 198:                 if(Current_Hour==23)
  2429     0512  3017               	movlw	23
  2430     0513  0660               	xorwf	_Current_Hour,w
  2431     0514  1D03               	btfss	3,2
  2432     0515  2D17               	goto	u3591
  2433     0516  2D18               	goto	u3590
  2434     0517                     u3591:
  2435     0517  2E08               	goto	l2856
  2436     0518                     u3590:
  2437     0518                     l2804:
  2438                           
  2439                           ;main.c: 199:                 {;main.c: 200:                     Current_Hour =0;
  2440     0518  01E0               	clrf	_Current_Hour
  2441     0519                     l2806:
  2442                           
  2443                           ;main.c: 202:                     if(( (Current_Year%4==0) && ( (Current_Year%100!=0) ||
      +                           (Current_Year%400==0) ) ) && month == 2 && Current_Day==29)
  2444     0519  3003               	movlw	3
  2445     051A  055D               	andwf	_Current_Year,w
  2446     051B  00AE               	movwf	??_main
  2447     051C  3000               	movlw	0
  2448     051D  055E               	andwf	_Current_Year+1,w
  2449     051E  00AF               	movwf	??_main+1
  2450     051F  082E               	movf	??_main,w
  2451     0520  042F               	iorwf	??_main+1,w
  2452     0521  1D03               	btfss	3,2
  2453     0522  2D24               	goto	u3601
  2454     0523  2D25               	goto	u3600
  2455     0524                     u3601:
  2456     0524  2D61               	goto	l2820
  2457     0525                     u3600:
  2458     0525                     l2808:
  2459     0525  3064               	movlw	100
  2460     0526  00F2               	movwf	___awmod@divisor
  2461     0527  3000               	movlw	0
  2462     0528  00F3               	movwf	___awmod@divisor+1
  2463     0529  085E               	movf	_Current_Year+1,w
  2464     052A  00F5               	movwf	___awmod@dividend+1
  2465     052B  085D               	movf	_Current_Year,w
  2466     052C  00F4               	movwf	___awmod@dividend
  2467     052D  120A  158A  26E6  120A  118A  	fcall	___awmod
  2468     0532  0872               	movf	?___awmod,w
  2469     0533  0473               	iorwf	?___awmod+1,w
  2470     0534  1D03               	btfss	3,2
  2471     0535  2D37               	goto	u3611
  2472     0536  2D38               	goto	u3610
  2473     0537                     u3611:
  2474     0537  2D4D               	goto	l2812
  2475     0538                     u3610:
  2476     0538                     l2810:
  2477     0538  3090               	movlw	144
  2478     0539  00F2               	movwf	___awmod@divisor
  2479     053A  3001               	movlw	1
  2480     053B  00F3               	movwf	___awmod@divisor+1
  2481     053C  1283               	bcf	3,5	;RP0=0, select bank0
  2482     053D  1303               	bcf	3,6	;RP1=0, select bank0
  2483     053E  085E               	movf	_Current_Year+1,w
  2484     053F  00F5               	movwf	___awmod@dividend+1
  2485     0540  085D               	movf	_Current_Year,w
  2486     0541  00F4               	movwf	___awmod@dividend
  2487     0542  120A  158A  26E6  120A  118A  	fcall	___awmod
  2488     0547  0872               	movf	?___awmod,w
  2489     0548  0473               	iorwf	?___awmod+1,w
  2490     0549  1D03               	btfss	3,2
  2491     054A  2D4C               	goto	u3621
  2492     054B  2D4D               	goto	u3620
  2493     054C                     u3621:
  2494     054C  2D61               	goto	l2820
  2495     054D                     u3620:
  2496     054D                     l2812:
  2497     054D  3002               	movlw	2
  2498     054E  1283               	bcf	3,5	;RP0=0, select bank0
  2499     054F  1303               	bcf	3,6	;RP1=0, select bank0
  2500     0550  0662               	xorwf	_month,w
  2501     0551  1D03               	btfss	3,2
  2502     0552  2D54               	goto	u3631
  2503     0553  2D55               	goto	u3630
  2504     0554                     u3631:
  2505     0554  2D61               	goto	l2820
  2506     0555                     u3630:
  2507     0555                     l2814:
  2508     0555  301D               	movlw	29
  2509     0556  0661               	xorwf	_Current_Day,w
  2510     0557  1D03               	btfss	3,2
  2511     0558  2D5A               	goto	u3641
  2512     0559  2D5B               	goto	u3640
  2513     055A                     u3641:
  2514     055A  2D61               	goto	l2820
  2515     055B                     u3640:
  2516     055B                     l2816:
  2517                           
  2518                           ;main.c: 203:                     {;main.c: 204:                         Current_Day = 0
      +                          ;
  2519     055B  01E1               	clrf	_Current_Day
  2520     055C                     l2818:
  2521                           
  2522                           ;main.c: 205:                         month++;
  2523     055C  3001               	movlw	1
  2524     055D  00FF               	movwf	btemp+1
  2525     055E  087F               	movf	btemp+1,w
  2526     055F  07E2               	addwf	_month,f
  2527                           
  2528                           ;main.c: 206:                     }
  2529     0560  2C58               	goto	l2768
  2530     0561                     l2820:
  2531     0561  3003               	movlw	3
  2532     0562  1283               	bcf	3,5	;RP0=0, select bank0
  2533     0563  1303               	bcf	3,6	;RP1=0, select bank0
  2534     0564  055D               	andwf	_Current_Year,w
  2535     0565  00AE               	movwf	??_main
  2536     0566  3000               	movlw	0
  2537     0567  055E               	andwf	_Current_Year+1,w
  2538     0568  00AF               	movwf	??_main+1
  2539     0569  082E               	movf	??_main,w
  2540     056A  042F               	iorwf	??_main+1,w
  2541     056B  1D03               	btfss	3,2
  2542     056C  2D6E               	goto	u3651
  2543     056D  2D6F               	goto	u3650
  2544     056E                     u3651:
  2545     056E  2DA8               	goto	l2832
  2546     056F                     u3650:
  2547     056F                     l2822:
  2548     056F  3064               	movlw	100
  2549     0570  00F2               	movwf	___awmod@divisor
  2550     0571  3000               	movlw	0
  2551     0572  00F3               	movwf	___awmod@divisor+1
  2552     0573  085E               	movf	_Current_Year+1,w
  2553     0574  00F5               	movwf	___awmod@dividend+1
  2554     0575  085D               	movf	_Current_Year,w
  2555     0576  00F4               	movwf	___awmod@dividend
  2556     0577  120A  158A  26E6  120A  118A  	fcall	___awmod
  2557     057C  0872               	movf	?___awmod,w
  2558     057D  0473               	iorwf	?___awmod+1,w
  2559     057E  1D03               	btfss	3,2
  2560     057F  2D81               	goto	u3661
  2561     0580  2D82               	goto	u3660
  2562     0581                     u3661:
  2563     0581  2D97               	goto	l2826
  2564     0582                     u3660:
  2565     0582                     l2824:
  2566     0582  3090               	movlw	144
  2567     0583  00F2               	movwf	___awmod@divisor
  2568     0584  3001               	movlw	1
  2569     0585  00F3               	movwf	___awmod@divisor+1
  2570     0586  1283               	bcf	3,5	;RP0=0, select bank0
  2571     0587  1303               	bcf	3,6	;RP1=0, select bank0
  2572     0588  085E               	movf	_Current_Year+1,w
  2573     0589  00F5               	movwf	___awmod@dividend+1
  2574     058A  085D               	movf	_Current_Year,w
  2575     058B  00F4               	movwf	___awmod@dividend
  2576     058C  120A  158A  26E6  120A  118A  	fcall	___awmod
  2577     0591  0872               	movf	?___awmod,w
  2578     0592  0473               	iorwf	?___awmod+1,w
  2579     0593  1D03               	btfss	3,2
  2580     0594  2D96               	goto	u3671
  2581     0595  2D97               	goto	u3670
  2582     0596                     u3671:
  2583     0596  2DA8               	goto	l2832
  2584     0597                     u3670:
  2585     0597                     l2826:
  2586     0597  3002               	movlw	2
  2587     0598  1283               	bcf	3,5	;RP0=0, select bank0
  2588     0599  1303               	bcf	3,6	;RP1=0, select bank0
  2589     059A  0662               	xorwf	_month,w
  2590     059B  1D03               	btfss	3,2
  2591     059C  2D9E               	goto	u3681
  2592     059D  2D9F               	goto	u3680
  2593     059E                     u3681:
  2594     059E  2DA8               	goto	l2832
  2595     059F                     u3680:
  2596     059F                     l2828:
  2597     059F  301C               	movlw	28
  2598     05A0  0661               	xorwf	_Current_Day,w
  2599     05A1  1D03               	btfss	3,2
  2600     05A2  2DA4               	goto	u3691
  2601     05A3  2DA5               	goto	u3690
  2602     05A4                     u3691:
  2603     05A4  2DA8               	goto	l2832
  2604     05A5                     u3690:
  2605     05A5                     l2830:
  2606                           
  2607                           ;main.c: 208:                     {;main.c: 209:                         Current_Day=29;
  2608     05A5  301D               	movlw	29
  2609     05A6  00E1               	movwf	_Current_Day
  2610                           
  2611                           ;main.c: 210:                     }
  2612     05A7  2C58               	goto	l2768
  2613     05A8                     l2832:
  2614     05A8  3003               	movlw	3
  2615     05A9  1283               	bcf	3,5	;RP0=0, select bank0
  2616     05AA  1303               	bcf	3,6	;RP1=0, select bank0
  2617     05AB  055D               	andwf	_Current_Year,w
  2618     05AC  00AE               	movwf	??_main
  2619     05AD  3000               	movlw	0
  2620     05AE  055E               	andwf	_Current_Year+1,w
  2621     05AF  00AF               	movwf	??_main+1
  2622     05B0  082E               	movf	??_main,w
  2623     05B1  042F               	iorwf	??_main+1,w
  2624     05B2  1D03               	btfss	3,2
  2625     05B3  2DB5               	goto	u3701
  2626     05B4  2DB6               	goto	u3700
  2627     05B5                     u3701:
  2628     05B5  2DEB               	goto	l2842
  2629     05B6                     u3700:
  2630     05B6                     l2834:
  2631     05B6  3064               	movlw	100
  2632     05B7  00F2               	movwf	___awmod@divisor
  2633     05B8  3000               	movlw	0
  2634     05B9  00F3               	movwf	___awmod@divisor+1
  2635     05BA  085E               	movf	_Current_Year+1,w
  2636     05BB  00F5               	movwf	___awmod@dividend+1
  2637     05BC  085D               	movf	_Current_Year,w
  2638     05BD  00F4               	movwf	___awmod@dividend
  2639     05BE  120A  158A  26E6  120A  118A  	fcall	___awmod
  2640     05C3  0872               	movf	?___awmod,w
  2641     05C4  0473               	iorwf	?___awmod+1,w
  2642     05C5  1D03               	btfss	3,2
  2643     05C6  2DC8               	goto	u3711
  2644     05C7  2DC9               	goto	u3710
  2645     05C8                     u3711:
  2646     05C8  2DDE               	goto	l2838
  2647     05C9                     u3710:
  2648     05C9                     l2836:
  2649     05C9  3090               	movlw	144
  2650     05CA  00F2               	movwf	___awmod@divisor
  2651     05CB  3001               	movlw	1
  2652     05CC  00F3               	movwf	___awmod@divisor+1
  2653     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2654     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2655     05CF  085E               	movf	_Current_Year+1,w
  2656     05D0  00F5               	movwf	___awmod@dividend+1
  2657     05D1  085D               	movf	_Current_Year,w
  2658     05D2  00F4               	movwf	___awmod@dividend
  2659     05D3  120A  158A  26E6  120A  118A  	fcall	___awmod
  2660     05D8  0872               	movf	?___awmod,w
  2661     05D9  0473               	iorwf	?___awmod+1,w
  2662     05DA  1D03               	btfss	3,2
  2663     05DB  2DDD               	goto	u3721
  2664     05DC  2DDE               	goto	u3720
  2665     05DD                     u3721:
  2666     05DD  2DEB               	goto	l2842
  2667     05DE                     u3720:
  2668     05DE                     l2838:
  2669     05DE  3002               	movlw	2
  2670     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  2671     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  2672     05E1  0662               	xorwf	_month,w
  2673     05E2  1D03               	btfss	3,2
  2674     05E3  2DE5               	goto	u3731
  2675     05E4  2DE6               	goto	u3730
  2676     05E5                     u3731:
  2677     05E5  2DEB               	goto	l2842
  2678     05E6                     u3730:
  2679     05E6                     l2840:
  2680                           
  2681                           ;main.c: 212:                     {;main.c: 213:                         Current_Day++;
  2682     05E6  3001               	movlw	1
  2683     05E7  00FF               	movwf	btemp+1
  2684     05E8  087F               	movf	btemp+1,w
  2685     05E9  07E1               	addwf	_Current_Day,f
  2686                           
  2687                           ;main.c: 214:                     }
  2688     05EA  2C58               	goto	l2768
  2689     05EB                     l2842:
  2690                           
  2691                           ;main.c: 216:                     {;main.c: 217:                         if(Current_Day 
      +                          < months[month-1] )
  2692     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2693     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2694     05ED  0862               	movf	_month,w
  2695     05EE  3EFF               	addlw	255
  2696     05EF  3E3F               	addlw	(low (main@months| 0))& (0+255)
  2697     05F0  0084               	movwf	4
  2698     05F1  1383               	bcf	3,7	;select IRP bank0
  2699     05F2  0800               	movf	0,w
  2700     05F3  0261               	subwf	_Current_Day,w
  2701     05F4  1803               	skipnc
  2702     05F5  2DF7               	goto	u3741
  2703     05F6  2DF8               	goto	u3740
  2704     05F7                     u3741:
  2705     05F7  2DF9               	goto	l2846
  2706     05F8                     u3740:
  2707     05F8  2DE6               	goto	l2840
  2708     05F9                     l2846:
  2709                           
  2710                           ;main.c: 222:                         {;main.c: 223:                             Current
      +                          _Day=0;
  2711     05F9  01E1               	clrf	_Current_Day
  2712     05FA                     l2848:
  2713                           
  2714                           ;main.c: 224:                             if(month == 12)
  2715     05FA  300C               	movlw	12
  2716     05FB  0662               	xorwf	_month,w
  2717     05FC  1D03               	btfss	3,2
  2718     05FD  2DFF               	goto	u3751
  2719     05FE  2E00               	goto	u3750
  2720     05FF                     u3751:
  2721     05FF  2D5C               	goto	l2818
  2722     0600                     u3750:
  2723     0600                     l2850:
  2724                           
  2725                           ;main.c: 225:                             {;main.c: 226:                                
      +                           month = 0 ;
  2726     0600  01E2               	clrf	_month
  2727     0601                     l2852:
  2728                           
  2729                           ;main.c: 227:                                 Current_Year++;
  2730     0601  3001               	movlw	1
  2731     0602  07DD               	addwf	_Current_Year,f
  2732     0603  1803               	skipnc
  2733     0604  0ADE               	incf	_Current_Year+1,f
  2734     0605  3000               	movlw	0
  2735     0606  07DE               	addwf	_Current_Year+1,f
  2736                           
  2737                           ;main.c: 228:                             }
  2738     0607  2C58               	goto	l2768
  2739     0608                     l2856:
  2740                           
  2741                           ;main.c: 237:                 {;main.c: 238:                     Current_Hour++;
  2742     0608  3001               	movlw	1
  2743     0609  00FF               	movwf	btemp+1
  2744     060A  087F               	movf	btemp+1,w
  2745     060B  07E0               	addwf	_Current_Hour,f
  2746     060C  2C58               	goto	l2768
  2747     060D                     l2858:
  2748                           
  2749                           ;main.c: 242:             {;main.c: 243:                 Current_Minute++;
  2750     060D  3001               	movlw	1
  2751     060E  00FF               	movwf	btemp+1
  2752     060F  087F               	movf	btemp+1,w
  2753     0610  07DF               	addwf	_Current_Minute,f
  2754     0611  2C58               	goto	l2768
  2755     0612                     l2860:
  2756                           
  2757                           ;main.c: 247:         {;main.c: 248:             Seconds++;
  2758     0612  3001               	movlw	1
  2759     0613  1283               	bcf	3,5	;RP0=0, select bank0
  2760     0614  1303               	bcf	3,6	;RP1=0, select bank0
  2761     0615  07D5               	addwf	_Seconds,f
  2762     0616  3000               	movlw	0
  2763     0617  1803               	skipnc
  2764     0618  3001               	movlw	1
  2765     0619  07D6               	addwf	_Seconds+1,f
  2766     061A  3000               	movlw	0
  2767     061B  1803               	skipnc
  2768     061C  3001               	movlw	1
  2769     061D  07D7               	addwf	_Seconds+2,f
  2770     061E  3000               	movlw	0
  2771     061F  1803               	skipnc
  2772     0620  3001               	movlw	1
  2773     0621  07D8               	addwf	_Seconds+3,f
  2774     0622  2C58               	goto	l2768
  2775     0623  120A  118A  280C   	ljmp	start
  2776     0626                     __end_of_main:
  2777                           
  2778                           	psect	text1
  2779     0C3B                     __ptext1:	
  2780 ;; *************** function _timer0_init *****************
  2781 ;; Defined at:
  2782 ;;		line 11 in file "lib/timer/timer.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  prescaler       1    wreg     unsigned char 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  prescaler       1    3[COMMON] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       0       0       0       0
  2797 ;;      Locals:         1       0       0       0       0
  2798 ;;      Temps:          1       0       0       0       0
  2799 ;;      Totals:         2       0       0       0       0
  2800 ;;Total ram usage:        2 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 1
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810     0C3B                     _timer0_init:	
  2811                           ;psect for function _timer0_init
  2812                           
  2813                           
  2814                           ;incstack = 0
  2815                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  2816                           ;timer0_init@prescaler stored from wreg
  2817     0C3B  00F3               	movwf	timer0_init@prescaler
  2818     0C3C                     l2022:
  2819                           
  2820                           ;lib/timer/timer.c: 11: void timer0_init(char prescaler);lib/timer/timer.c: 12: {;lib/ti
      +                          mer/timer.c: 13:     OPTION_REG = (OPTION_REG & 0xF8) | (prescaler & 0x7);
  2821     0C3C  3007               	movlw	7
  2822     0C3D  0573               	andwf	timer0_init@prescaler,w
  2823     0C3E  00F2               	movwf	??_timer0_init
  2824     0C3F  1683               	bsf	3,5	;RP0=1, select bank1
  2825     0C40  1303               	bcf	3,6	;RP1=0, select bank1
  2826     0C41  0801               	movf	1,w	;volatile
  2827     0C42  39F8               	andlw	248
  2828     0C43  0472               	iorwf	??_timer0_init,w
  2829     0C44  0081               	movwf	1	;volatile
  2830     0C45                     l2024:
  2831                           
  2832                           ;lib/timer/timer.c: 14:     OPTION_REGbits.T0CS =0;
  2833     0C45  1281               	bcf	1,5	;volatile
  2834     0C46                     l2026:
  2835                           
  2836                           ;lib/timer/timer.c: 15:     OPTION_REGbits.T0SE =0;
  2837     0C46  1201               	bcf	1,4	;volatile
  2838     0C47                     l2028:
  2839                           
  2840                           ;lib/timer/timer.c: 16:     OPTION_REGbits.PSA =0;
  2841     0C47  1181               	bcf	1,3	;volatile
  2842     0C48                     l2030:
  2843                           
  2844                           ;lib/timer/timer.c: 18:     TMR0IE = 1;
  2845     0C48  168B               	bsf	11,5	;volatile
  2846     0C49                     l2032:
  2847                           
  2848                           ;lib/timer/timer.c: 19:     TMR0IF = 0;
  2849     0C49  110B               	bcf	11,2	;volatile
  2850     0C4A                     l2034:
  2851                           
  2852                           ;lib/timer/timer.c: 20:     GIE =1;
  2853     0C4A  178B               	bsf	11,7	;volatile
  2854     0C4B                     l183:
  2855     0C4B  0008               	return
  2856     0C4C                     __end_of_timer0_init:
  2857                           
  2858                           	psect	text2
  2859     0CFD                     __ptext2:	
  2860 ;; *************** function _lcd_out *****************
  2861 ;; Defined at:
  2862 ;;		line 116 in file "lib/lcd/lcd.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  row             1    wreg     unsigned char 
  2865 ;;  col             1    4[BANK0 ] unsigned char 
  2866 ;;  str             1    5[BANK0 ] PTR unsigned char 
  2867 ;;		 -> STR_3(7), STR_2(17), STR_1(13), 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  row             1    6[BANK0 ] unsigned char 
  2870 ;;  i               2    7[BANK0 ] int 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2880 ;;      Params:         0       2       0       0       0
  2881 ;;      Locals:         0       3       0       0       0
  2882 ;;      Temps:          0       0       0       0       0
  2883 ;;      Totals:         0       5       0       0       0
  2884 ;;Total ram usage:        5 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 4
  2887 ;; This function calls:
  2888 ;;		_LCD_Write_Char
  2889 ;;		_lcd_set_cursor
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895     0CFD                     _lcd_out:	
  2896                           ;psect for function _lcd_out
  2897                           
  2898                           
  2899                           ;incstack = 0
  2900                           ; Regs used in _lcd_out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2901                           ;lcd_out@row stored from wreg
  2902     0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  2903     0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  2904     0CFF  00A6               	movwf	lcd_out@row
  2905     0D00                     l2524:
  2906                           
  2907                           ;lib/lcd/lcd.c: 116: void lcd_out(unsigned char row, unsigned char col,char *str);lib/lc
      +                          d/lcd.c: 117: {;lib/lcd/lcd.c: 118:   int i;;lib/lcd/lcd.c: 119:   lcd_set_cursor(row,co
      +                          l);
  2908     0D00  0824               	movf	lcd_out@col,w
  2909     0D01  00F6               	movwf	lcd_set_cursor@c
  2910     0D02  0826               	movf	lcd_out@row,w
  2911     0D03  120A  158A  25F4  120A  158A  	fcall	_lcd_set_cursor
  2912     0D08                     l2526:
  2913                           
  2914                           ;lib/lcd/lcd.c: 120:   for(i=0;str[i]!='\0';i++)
  2915     0D08  1283               	bcf	3,5	;RP0=0, select bank0
  2916     0D09  1303               	bcf	3,6	;RP1=0, select bank0
  2917     0D0A  01A7               	clrf	lcd_out@i
  2918     0D0B  01A8               	clrf	lcd_out@i+1
  2919     0D0C  2D22               	goto	l2532
  2920     0D0D                     l2528:
  2921                           
  2922                           ;lib/lcd/lcd.c: 121:     LCD_Write_Char(str[i]);
  2923     0D0D  0827               	movf	lcd_out@i,w
  2924     0D0E  0725               	addwf	lcd_out@str,w
  2925     0D0F  0084               	movwf	4
  2926     0D10  120A  158A  2000  120A  158A  	fcall	stringdir
  2927     0D15  120A  158A  2641  120A  158A  	fcall	_LCD_Write_Char
  2928     0D1A                     l2530:
  2929     0D1A  3001               	movlw	1
  2930     0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  2931     0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  2932     0D1D  07A7               	addwf	lcd_out@i,f
  2933     0D1E  1803               	skipnc
  2934     0D1F  0AA8               	incf	lcd_out@i+1,f
  2935     0D20  3000               	movlw	0
  2936     0D21  07A8               	addwf	lcd_out@i+1,f
  2937     0D22                     l2532:
  2938     0D22  0827               	movf	lcd_out@i,w
  2939     0D23  0725               	addwf	lcd_out@str,w
  2940     0D24  0084               	movwf	4
  2941     0D25  120A  158A  2000  120A  158A  	fcall	stringdir
  2942     0D2A  3A00               	xorlw	0
  2943     0D2B  1D03               	skipz
  2944     0D2C  2D2E               	goto	u3071
  2945     0D2D  2D2F               	goto	u3070
  2946     0D2E                     u3071:
  2947     0D2E  2D0D               	goto	l2528
  2948     0D2F                     u3070:
  2949     0D2F                     l154:
  2950     0D2F  0008               	return
  2951     0D30                     __end_of_lcd_out:
  2952                           
  2953                           	psect	text3
  2954     0DF4                     __ptext3:	
  2955 ;; *************** function _lcd_set_cursor *****************
  2956 ;; Defined at:
  2957 ;;		line 87 in file "lib/lcd/lcd.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  r               1    wreg     unsigned char 
  2960 ;;  c               1    6[COMMON] unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  r               1    0[BANK0 ] unsigned char 
  2963 ;;  Temp            1    3[BANK0 ] unsigned char 
  2964 ;;  High4           1    2[BANK0 ] unsigned char 
  2965 ;;  Low4            1    1[BANK0 ] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         1       0       0       0       0
  2976 ;;      Locals:         0       4       0       0       0
  2977 ;;      Temps:          1       0       0       0       0
  2978 ;;      Totals:         2       4       0       0       0
  2979 ;;Total ram usage:        6 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 3
  2982 ;; This function calls:
  2983 ;;		_LCD_SEND_4BIT_CMD
  2984 ;; This function is called by:
  2985 ;;		_lcd_out
  2986 ;;		_main
  2987 ;;		_lcd_chr
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991     0DF4                     _lcd_set_cursor:	
  2992                           ;psect for function _lcd_set_cursor
  2993                           
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  2997                           ;lcd_set_cursor@r stored from wreg
  2998     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  2999     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  3000     0DF6  00A0               	movwf	lcd_set_cursor@r
  3001     0DF7                     l2450:
  3002                           
  3003                           ;lib/lcd/lcd.c: 87: void lcd_set_cursor(unsigned char r, unsigned char c);lib/lcd/lcd.c:
      +                           88: {;lib/lcd/lcd.c: 89:   unsigned char Temp,Low4,High4;;lib/lcd/lcd.c: 90:   if(r == 
      +                          1)
  3004     0DF7  0320               	decf	lcd_set_cursor@r,w
  3005     0DF8  1D03               	btfss	3,2
  3006     0DF9  2DFB               	goto	u2961
  3007     0DFA  2DFC               	goto	u2960
  3008     0DFB                     u2961:
  3009     0DFB  2E1A               	goto	l2460
  3010     0DFC                     u2960:
  3011     0DFC                     l2452:
  3012                           
  3013                           ;lib/lcd/lcd.c: 91:   {;lib/lcd/lcd.c: 92:     Temp = 0x80 + c - 1;
  3014     0DFC  0876               	movf	lcd_set_cursor@c,w
  3015     0DFD  3E7F               	addlw	127
  3016     0DFE  00A3               	movwf	lcd_set_cursor@Temp
  3017                           
  3018                           ;lib/lcd/lcd.c: 93:     High4 = Temp >> 4;
  3019     0DFF  0823               	movf	lcd_set_cursor@Temp,w
  3020     0E00  00F7               	movwf	??_lcd_set_cursor
  3021     0E01  3004               	movlw	4
  3022     0E02                     u2975:
  3023     0E02  1003               	clrc
  3024     0E03  0CF7               	rrf	??_lcd_set_cursor,f
  3025     0E04  3EFF               	addlw	-1
  3026     0E05  1D03               	skipz
  3027     0E06  2E02               	goto	u2975
  3028     0E07  0877               	movf	??_lcd_set_cursor,w
  3029     0E08  00A2               	movwf	lcd_set_cursor@High4
  3030     0E09                     l2454:
  3031                           
  3032                           ;lib/lcd/lcd.c: 94:     Low4 = Temp & 0x0F;
  3033     0E09  0823               	movf	lcd_set_cursor@Temp,w
  3034     0E0A  390F               	andlw	15
  3035     0E0B  00A1               	movwf	lcd_set_cursor@Low4
  3036     0E0C                     l2456:
  3037                           
  3038                           ;lib/lcd/lcd.c: 95:     LCD_SEND_4BIT_CMD(High4);
  3039     0E0C  0822               	movf	lcd_set_cursor@High4,w
  3040     0E0D  120A  158A  2477  120A  158A  	fcall	_LCD_SEND_4BIT_CMD
  3041     0E12                     l2458:
  3042                           
  3043                           ;lib/lcd/lcd.c: 96:     LCD_SEND_4BIT_CMD(Low4);
  3044     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  3045     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  3046     0E14  0821               	movf	lcd_set_cursor@Low4,w
  3047     0E15  120A  158A  2477  120A  158A  	fcall	_LCD_SEND_4BIT_CMD
  3048     0E1A                     l2460:
  3049                           
  3050                           ;lib/lcd/lcd.c: 98:   if(r == 2)
  3051     0E1A  3002               	movlw	2
  3052     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3053     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3054     0E1D  0620               	xorwf	lcd_set_cursor@r,w
  3055     0E1E  1D03               	btfss	3,2
  3056     0E1F  2E21               	goto	u2981
  3057     0E20  2E22               	goto	u2980
  3058     0E21                     u2981:
  3059     0E21  2E40               	goto	l142
  3060     0E22                     u2980:
  3061     0E22                     l2462:
  3062                           
  3063                           ;lib/lcd/lcd.c: 99:   {;lib/lcd/lcd.c: 100:     Temp = 0xC0 + c - 1;
  3064     0E22  0876               	movf	lcd_set_cursor@c,w
  3065     0E23  3EBF               	addlw	191
  3066     0E24  00A3               	movwf	lcd_set_cursor@Temp
  3067                           
  3068                           ;lib/lcd/lcd.c: 101:     High4 = Temp >> 4;
  3069     0E25  0823               	movf	lcd_set_cursor@Temp,w
  3070     0E26  00F7               	movwf	??_lcd_set_cursor
  3071     0E27  3004               	movlw	4
  3072     0E28                     u2995:
  3073     0E28  1003               	clrc
  3074     0E29  0CF7               	rrf	??_lcd_set_cursor,f
  3075     0E2A  3EFF               	addlw	-1
  3076     0E2B  1D03               	skipz
  3077     0E2C  2E28               	goto	u2995
  3078     0E2D  0877               	movf	??_lcd_set_cursor,w
  3079     0E2E  00A2               	movwf	lcd_set_cursor@High4
  3080     0E2F                     l2464:
  3081                           
  3082                           ;lib/lcd/lcd.c: 102:     Low4 = Temp & 0x0F;
  3083     0E2F  0823               	movf	lcd_set_cursor@Temp,w
  3084     0E30  390F               	andlw	15
  3085     0E31  00A1               	movwf	lcd_set_cursor@Low4
  3086     0E32                     l2466:
  3087                           
  3088                           ;lib/lcd/lcd.c: 103:     LCD_SEND_4BIT_CMD(High4);
  3089     0E32  0822               	movf	lcd_set_cursor@High4,w
  3090     0E33  120A  158A  2477  120A  158A  	fcall	_LCD_SEND_4BIT_CMD
  3091     0E38                     l2468:
  3092                           
  3093                           ;lib/lcd/lcd.c: 104:     LCD_SEND_4BIT_CMD(Low4);
  3094     0E38  1283               	bcf	3,5	;RP0=0, select bank0
  3095     0E39  1303               	bcf	3,6	;RP1=0, select bank0
  3096     0E3A  0821               	movf	lcd_set_cursor@Low4,w
  3097     0E3B  120A  158A  2477  120A  158A  	fcall	_LCD_SEND_4BIT_CMD
  3098     0E40                     l142:
  3099     0E40  0008               	return
  3100     0E41                     __end_of_lcd_set_cursor:
  3101                           
  3102                           	psect	text4
  3103     06DE                     __ptext4:	
  3104 ;; *************** function _lcd_init *****************
  3105 ;; Defined at:
  3106 ;;		line 54 in file "lib/lcd/lcd.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3120 ;;      Params:         0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0
  3122 ;;      Temps:          2       0       0       0       0
  3123 ;;      Totals:         2       0       0       0       0
  3124 ;;Total ram usage:        2 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; Hardware stack levels required when called: 3
  3127 ;; This function calls:
  3128 ;;		_LCD_SEND_4BIT_CMD
  3129 ;;		_SET_LCD_DATA_PINS
  3130 ;; This function is called by:
  3131 ;;		_main
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135     06DE                     _lcd_init:	
  3136                           ;psect for function _lcd_init
  3137                           
  3138     06DE                     l2492:	
  3139                           ;incstack = 0
  3140                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3141                           
  3142                           
  3143                           ;lib/lcd/lcd.c: 57:   TRISD0 = 0;
  3144     06DE  1683               	bsf	3,5	;RP0=1, select bank1
  3145     06DF  1303               	bcf	3,6	;RP1=0, select bank1
  3146     06E0  1008               	bcf	8,0	;volatile
  3147                           
  3148                           ;lib/lcd/lcd.c: 58:   TRISD1 = 0;
  3149     06E1  1088               	bcf	8,1	;volatile
  3150                           
  3151                           ;lib/lcd/lcd.c: 59:   TRISD2 = 0;
  3152     06E2  1108               	bcf	8,2	;volatile
  3153                           
  3154                           ;lib/lcd/lcd.c: 60:   TRISD3 = 0;
  3155     06E3  1188               	bcf	8,3	;volatile
  3156                           
  3157                           ;lib/lcd/lcd.c: 61:   TRISD4 = 0;
  3158     06E4  1208               	bcf	8,4	;volatile
  3159                           
  3160                           ;lib/lcd/lcd.c: 62:   TRISD5 = 0;
  3161     06E5  1288               	bcf	8,5	;volatile
  3162     06E6                     l2494:
  3163                           
  3164                           ;lib/lcd/lcd.c: 64:   SET_LCD_DATA_PINS(0x00);
  3165     06E6  3000               	movlw	0
  3166     06E7  120A  158A  2491  120A  118A  	fcall	_SET_LCD_DATA_PINS
  3167     06EC                     l2496:
  3168                           
  3169                           ;lib/lcd/lcd.c: 65:   _delay((unsigned long)((30)*((8000000)/4000.0)));
  3170     06EC  304E               	movlw	78
  3171     06ED  00F7               	movwf	??_lcd_init+1
  3172     06EE  30EB               	movlw	235
  3173     06EF  00F6               	movwf	??_lcd_init
  3174     06F0                     u3767:
  3175     06F0  0BF6               	decfsz	??_lcd_init,f
  3176     06F1  2EF0               	goto	u3767
  3177     06F2  0BF7               	decfsz	??_lcd_init+1,f
  3178     06F3  2EF0               	goto	u3767
  3179     06F4                     l2498:
  3180                           
  3181                           ;lib/lcd/lcd.c: 66:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3182     06F4  3005               	movlw	5
  3183     06F5  00F7               	movwf	??_lcd_init+1
  3184     06F6  30AB               	movlw	171
  3185     06F7  00F6               	movwf	??_lcd_init
  3186     06F8                     u3777:
  3187     06F8  0BF6               	decfsz	??_lcd_init,f
  3188     06F9  2EF8               	goto	u3777
  3189     06FA  0BF7               	decfsz	??_lcd_init+1,f
  3190     06FB  2EF8               	goto	u3777
  3191     06FC  2EFD               	nop2
  3192                           
  3193                           ;lib/lcd/lcd.c: 67:    LCD_SEND_4BIT_CMD(0x03);
  3194     06FD  3003               	movlw	3
  3195     06FE  120A  158A  2477  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3196     0703                     l2500:
  3197                           
  3198                           ;lib/lcd/lcd.c: 68:   _delay((unsigned long)((5)*((8000000)/4000.0)));
  3199     0703  300D               	movlw	13
  3200     0704  00F7               	movwf	??_lcd_init+1
  3201     0705  30FB               	movlw	251
  3202     0706  00F6               	movwf	??_lcd_init
  3203     0707                     u3787:
  3204     0707  0BF6               	decfsz	??_lcd_init,f
  3205     0708  2F07               	goto	u3787
  3206     0709  0BF7               	decfsz	??_lcd_init+1,f
  3207     070A  2F07               	goto	u3787
  3208     070B  2F0C               	nop2
  3209     070C                     l2502:
  3210                           
  3211                           ;lib/lcd/lcd.c: 69:    LCD_SEND_4BIT_CMD(0x03);
  3212     070C  3003               	movlw	3
  3213     070D  120A  158A  2477  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3214                           
  3215                           ;lib/lcd/lcd.c: 70:   _delay((unsigned long)((150)*((8000000)/4000000.0)));
  3216     0712  3063               	movlw	99
  3217     0713  00F6               	movwf	??_lcd_init
  3218     0714                     u3797:
  3219     0714  0BF6               	decfsz	??_lcd_init,f
  3220     0715  2F14               	goto	u3797
  3221     0716  2F17               	nop2
  3222     0717                     l2504:
  3223                           
  3224                           ;lib/lcd/lcd.c: 71:    LCD_SEND_4BIT_CMD(0x03);
  3225     0717  3003               	movlw	3
  3226     0718  120A  158A  2477  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3227     071D                     l2506:
  3228                           
  3229                           ;lib/lcd/lcd.c: 72:    LCD_SEND_4BIT_CMD(0x02);
  3230     071D  3002               	movlw	2
  3231     071E  120A  158A  2477  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3232     0723                     l2508:
  3233                           
  3234                           ;lib/lcd/lcd.c: 73:    LCD_SEND_4BIT_CMD(0x02);
  3235     0723  3002               	movlw	2
  3236     0724  120A  158A  2477  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3237     0729                     l2510:
  3238                           
  3239                           ;lib/lcd/lcd.c: 74:    LCD_SEND_4BIT_CMD(0x08);
  3240     0729  3008               	movlw	8
  3241     072A  120A  158A  2477  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3242     072F                     l2512:
  3243                           
  3244                           ;lib/lcd/lcd.c: 75:    LCD_SEND_4BIT_CMD(0x00);
  3245     072F  3000               	movlw	0
  3246     0730  120A  158A  2477  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3247     0735                     l2514:
  3248                           
  3249                           ;lib/lcd/lcd.c: 76:    LCD_SEND_4BIT_CMD(0x0C);
  3250     0735  300C               	movlw	12
  3251     0736  120A  158A  2477  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3252     073B                     l2516:
  3253                           
  3254                           ;lib/lcd/lcd.c: 77:    LCD_SEND_4BIT_CMD(0x00);
  3255     073B  3000               	movlw	0
  3256     073C  120A  158A  2477  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3257     0741                     l2518:
  3258                           
  3259                           ;lib/lcd/lcd.c: 78:    LCD_SEND_4BIT_CMD(0x06);
  3260     0741  3006               	movlw	6
  3261     0742  120A  158A  2477  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3262     0747                     l134:
  3263     0747  0008               	return
  3264     0748                     __end_of_lcd_init:
  3265                           
  3266                           	psect	text5
  3267     0C5F                     __ptext5:	
  3268 ;; *************** function _lcd_cmd *****************
  3269 ;; Defined at:
  3270 ;;		line 80 in file "lib/lcd/lcd.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  command         1    wreg     unsigned char 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  command         1    7[COMMON] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       0       0       0       0
  3285 ;;      Locals:         1       0       0       0       0
  3286 ;;      Temps:          1       0       0       0       0
  3287 ;;      Totals:         2       0       0       0       0
  3288 ;;Total ram usage:        2 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 3
  3291 ;; This function calls:
  3292 ;;		_LCD_SEND_4BIT_CMD
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298     0C5F                     _lcd_cmd:	
  3299                           ;psect for function _lcd_cmd
  3300                           
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3304                           ;lcd_cmd@command stored from wreg
  3305     0C5F  00F7               	movwf	lcd_cmd@command
  3306     0C60                     l2520:
  3307                           
  3308                           ;lib/lcd/lcd.c: 80: void lcd_cmd(unsigned char command);lib/lcd/lcd.c: 81: {;lib/lcd/lcd
      +                          .c: 83:   LCD_SEND_4BIT_CMD( (command & 0xF0) >> 4 );
  3309     0C60  0877               	movf	lcd_cmd@command,w
  3310     0C61  00F6               	movwf	??_lcd_cmd
  3311     0C62  3004               	movlw	4
  3312     0C63                     u3065:
  3313     0C63  1003               	clrc
  3314     0C64  0CF6               	rrf	??_lcd_cmd,f
  3315     0C65  3EFF               	addlw	-1
  3316     0C66  1D03               	skipz
  3317     0C67  2C63               	goto	u3065
  3318     0C68  0876               	movf	??_lcd_cmd,w
  3319     0C69  390F               	andlw	15
  3320     0C6A  120A  158A  2477  120A  158A  	fcall	_LCD_SEND_4BIT_CMD
  3321                           
  3322                           ;lib/lcd/lcd.c: 85:   LCD_SEND_4BIT_CMD( command & 0x0F );
  3323     0C6F  0877               	movf	lcd_cmd@command,w
  3324     0C70  390F               	andlw	15
  3325     0C71  120A  158A  2477  120A  158A  	fcall	_LCD_SEND_4BIT_CMD
  3326     0C76                     l137:
  3327     0C76  0008               	return
  3328     0C77                     __end_of_lcd_cmd:
  3329                           
  3330                           	psect	text6
  3331     0C77                     __ptext6:	
  3332 ;; *************** function _LCD_SEND_4BIT_CMD *****************
  3333 ;; Defined at:
  3334 ;;		line 22 in file "lib/lcd/lcd.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  CMD             1    wreg     unsigned char 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  CMD             1    5[COMMON] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0, pclath, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3348 ;;      Params:         0       0       0       0       0
  3349 ;;      Locals:         1       0       0       0       0
  3350 ;;      Temps:          2       0       0       0       0
  3351 ;;      Totals:         3       0       0       0       0
  3352 ;;Total ram usage:        3 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 2
  3355 ;; This function calls:
  3356 ;;		_SET_LCD_DATA_PINS
  3357 ;; This function is called by:
  3358 ;;		_lcd_init
  3359 ;;		_lcd_cmd
  3360 ;;		_lcd_set_cursor
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364     0C77                     _LCD_SEND_4BIT_CMD:	
  3365                           ;psect for function _LCD_SEND_4BIT_CMD
  3366                           
  3367                           
  3368                           ;incstack = 0
  3369                           ; Regs used in _LCD_SEND_4BIT_CMD: [wreg+status,2+status,0+pclath+cstack]
  3370                           ;LCD_SEND_4BIT_CMD@CMD stored from wreg
  3371     0C77  00F5               	movwf	LCD_SEND_4BIT_CMD@CMD
  3372     0C78                     l2416:
  3373                           
  3374                           ;lib/lcd/lcd.c: 22: static void LCD_SEND_4BIT_CMD(unsigned char CMD);lib/lcd/lcd.c: 23: 
      +                          {;lib/lcd/lcd.c: 25:   RD0 = 0;
  3375     0C78  1283               	bcf	3,5	;RP0=0, select bank0
  3376     0C79  1303               	bcf	3,6	;RP1=0, select bank0
  3377     0C7A  1008               	bcf	8,0	;volatile
  3378     0C7B                     l2418:
  3379                           
  3380                           ;lib/lcd/lcd.c: 27:   SET_LCD_DATA_PINS(CMD);
  3381     0C7B  0875               	movf	LCD_SEND_4BIT_CMD@CMD,w
  3382     0C7C  120A  158A  2491  120A  158A  	fcall	_SET_LCD_DATA_PINS
  3383     0C81                     l2420:
  3384                           
  3385                           ;lib/lcd/lcd.c: 29:   RD1 = 1;
  3386     0C81  1283               	bcf	3,5	;RP0=0, select bank0
  3387     0C82  1303               	bcf	3,6	;RP1=0, select bank0
  3388     0C83  1488               	bsf	8,1	;volatile
  3389     0C84                     l2422:
  3390                           
  3391                           ;lib/lcd/lcd.c: 30:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3392     0C84  3005               	movlw	5
  3393     0C85  00F4               	movwf	??_LCD_SEND_4BIT_CMD+1
  3394     0C86  30AB               	movlw	171
  3395     0C87  00F3               	movwf	??_LCD_SEND_4BIT_CMD
  3396     0C88                     u3807:
  3397     0C88  0BF3               	decfsz	??_LCD_SEND_4BIT_CMD,f
  3398     0C89  2C88               	goto	u3807
  3399     0C8A  0BF4               	decfsz	??_LCD_SEND_4BIT_CMD+1,f
  3400     0C8B  2C88               	goto	u3807
  3401     0C8C  2C8D               	nop2
  3402     0C8D                     l2424:
  3403                           
  3404                           ;lib/lcd/lcd.c: 31:   RD1 = 0;
  3405     0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  3406     0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  3407     0C8F  1088               	bcf	8,1	;volatile
  3408     0C90                     l128:
  3409     0C90  0008               	return
  3410     0C91                     __end_of_LCD_SEND_4BIT_CMD:
  3411                           
  3412                           	psect	text7
  3413     0C0E                     __ptext7:	
  3414 ;; *************** function _lcd_chr_cp *****************
  3415 ;; Defined at:
  3416 ;;		line 112 in file "lib/lcd/lcd.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  chr             1    wreg     unsigned char 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  chr             1    8[COMMON] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3430 ;;      Params:         0       0       0       0       0
  3431 ;;      Locals:         1       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0
  3433 ;;      Totals:         1       0       0       0       0
  3434 ;;Total ram usage:        1 bytes
  3435 ;; Hardware stack levels used: 1
  3436 ;; Hardware stack levels required when called: 3
  3437 ;; This function calls:
  3438 ;;		_LCD_Write_Char
  3439 ;; This function is called by:
  3440 ;;		_main
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444     0C0E                     _lcd_chr_cp:	
  3445                           ;psect for function _lcd_chr_cp
  3446                           
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _lcd_chr_cp: [wreg+status,2+status,0+pclath+cstack]
  3450                           ;lcd_chr_cp@chr stored from wreg
  3451     0C0E  00F8               	movwf	lcd_chr_cp@chr
  3452     0C0F                     l2522:
  3453                           
  3454                           ;lib/lcd/lcd.c: 112: void lcd_chr_cp(unsigned char chr);lib/lcd/lcd.c: 113: {;lib/lcd/lc
      +                          d.c: 114:   LCD_Write_Char(chr);
  3455     0C0F  0878               	movf	lcd_chr_cp@chr,w
  3456     0C10  120A  158A  2641  120A  158A  	fcall	_LCD_Write_Char
  3457     0C15                     l148:
  3458     0C15  0008               	return
  3459     0C16                     __end_of_lcd_chr_cp:
  3460                           
  3461                           	psect	text8
  3462     0C2D                     __ptext8:	
  3463 ;; *************** function _keypad_init *****************
  3464 ;; Defined at:
  3465 ;;		line 3 in file "lib/keypad/keypad.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;		None
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		wreg, status,2
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3479 ;;      Params:         0       0       0       0       0
  3480 ;;      Locals:         0       0       0       0       0
  3481 ;;      Temps:          0       0       0       0       0
  3482 ;;      Totals:         0       0       0       0       0
  3483 ;;Total ram usage:        0 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; Hardware stack levels required when called: 1
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493     0C2D                     _keypad_init:	
  3494                           ;psect for function _keypad_init
  3495                           
  3496     0C2D                     l1828:	
  3497                           ;incstack = 0
  3498                           ; Regs used in _keypad_init: [wreg+status,2]
  3499                           
  3500                           
  3501                           ;lib/keypad/keypad.c: 4:         TRISB = 0xF0;
  3502     0C2D  30F0               	movlw	240
  3503     0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  3504     0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  3505     0C30  0086               	movwf	6	;volatile
  3506                           
  3507                           ;lib/keypad/keypad.c: 5:         PORTB = 0xFF;
  3508     0C31  30FF               	movlw	255
  3509     0C32  1283               	bcf	3,5	;RP0=0, select bank0
  3510     0C33  1303               	bcf	3,6	;RP1=0, select bank0
  3511     0C34  0086               	movwf	6	;volatile
  3512     0C35                     l1830:
  3513                           
  3514                           ;lib/keypad/keypad.c: 7:         (OPTION_REG = OPTION_REG & (~(1<<7)));
  3515     0C35  1683               	bsf	3,5	;RP0=1, select bank1
  3516     0C36  1303               	bcf	3,6	;RP1=0, select bank1
  3517     0C37  0801               	movf	1,w	;volatile
  3518     0C38  397F               	andlw	127
  3519     0C39  0081               	movwf	1	;volatile
  3520     0C3A                     l9:
  3521     0C3A  0008               	return
  3522     0C3B                     __end_of_keypad_init:
  3523                           
  3524                           	psect	text9
  3525     0626                     __ptext9:	
  3526 ;; *************** function _keypad_get_key *****************
  3527 ;; Defined at:
  3528 ;;		line 13 in file "lib/keypad/keypad.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      unsigned char 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3542 ;;      Params:         0       0       0       0       0
  3543 ;;      Locals:         0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0
  3545 ;;      Totals:         0       0       0       0       0
  3546 ;;Total ram usage:        0 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 1
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556     0626                     _keypad_get_key:	
  3557                           ;psect for function _keypad_get_key
  3558                           
  3559     0626                     l1832:	
  3560                           ;incstack = 0
  3561                           ; Regs used in _keypad_get_key: [wreg+status,2]
  3562                           
  3563                           
  3564                           ;lib/keypad/keypad.c: 15:      PORTB = 0xFF;
  3565     0626  30FF               	movlw	255
  3566     0627  1283               	bcf	3,5	;RP0=0, select bank0
  3567     0628  1303               	bcf	3,6	;RP1=0, select bank0
  3568     0629  0086               	movwf	6	;volatile
  3569     062A                     l1834:
  3570                           
  3571                           ;lib/keypad/keypad.c: 16:      (PORTB = PORTB & (~(1<<0))) ;
  3572     062A  0806               	movf	6,w	;volatile
  3573     062B  39FE               	andlw	254
  3574     062C  0086               	movwf	6	;volatile
  3575     062D                     l1836:
  3576                           
  3577                           ;lib/keypad/keypad.c: 19:      if ((PORTB & (1<<4)?1:0) == 0 ){
  3578     062D  1A06               	btfsc	6,4	;volatile
  3579     062E  2E30               	goto	u1801
  3580     062F  2E31               	goto	u1800
  3581     0630                     u1801:
  3582     0630  2E37               	goto	l12
  3583     0631                     u1800:
  3584     0631                     l13:
  3585     0631  1E06               	btfss	6,4	;volatile
  3586     0632  2E34               	goto	u1811
  3587     0633  2E35               	goto	u1810
  3588     0634                     u1811:
  3589     0634  2E31               	goto	l13
  3590     0635                     u1810:
  3591     0635                     l1840:
  3592                           
  3593                           ;lib/keypad/keypad.c: 21:         return '7' ;
  3594     0635  3037               	movlw	55
  3595     0636  2EDD               	goto	l16
  3596     0637                     l12:
  3597     0637  1A86               	btfsc	6,5	;volatile
  3598     0638  2E3A               	goto	u1821
  3599     0639  2E3B               	goto	u1820
  3600     063A                     u1821:
  3601     063A  2E41               	goto	l18
  3602     063B                     u1820:
  3603     063B                     l19:
  3604     063B  1E86               	btfss	6,5	;volatile
  3605     063C  2E3E               	goto	u1831
  3606     063D  2E3F               	goto	u1830
  3607     063E                     u1831:
  3608     063E  2E3B               	goto	l19
  3609     063F                     u1830:
  3610     063F                     l1848:
  3611                           
  3612                           ;lib/keypad/keypad.c: 24:          return '8' ;
  3613     063F  3038               	movlw	56
  3614     0640  2EDD               	goto	l16
  3615     0641                     l18:
  3616     0641  1B06               	btfsc	6,6	;volatile
  3617     0642  2E44               	goto	u1841
  3618     0643  2E45               	goto	u1840
  3619     0644                     u1841:
  3620     0644  2E4B               	goto	l23
  3621     0645                     u1840:
  3622     0645                     l24:
  3623     0645  1F06               	btfss	6,6	;volatile
  3624     0646  2E48               	goto	u1851
  3625     0647  2E49               	goto	u1850
  3626     0648                     u1851:
  3627     0648  2E45               	goto	l24
  3628     0649                     u1850:
  3629     0649                     l1856:
  3630                           
  3631                           ;lib/keypad/keypad.c: 27:          return '9' ;
  3632     0649  3039               	movlw	57
  3633     064A  2EDD               	goto	l16
  3634     064B                     l23:
  3635     064B  1B86               	btfsc	6,7	;volatile
  3636     064C  2E4E               	goto	u1861
  3637     064D  2E4F               	goto	u1860
  3638     064E                     u1861:
  3639     064E  2E55               	goto	l22
  3640     064F                     u1860:
  3641     064F                     l29:
  3642     064F  1F86               	btfss	6,7	;volatile
  3643     0650  2E52               	goto	u1871
  3644     0651  2E53               	goto	u1870
  3645     0652                     u1871:
  3646     0652  2E4F               	goto	l29
  3647     0653                     u1870:
  3648     0653                     l1864:
  3649                           
  3650                           ;lib/keypad/keypad.c: 30:          return '/' ;
  3651     0653  302F               	movlw	47
  3652     0654  2EDD               	goto	l16
  3653     0655                     l22:
  3654     0655                     l1868:
  3655                           
  3656                           ;lib/keypad/keypad.c: 33:      PORTB = 0xFF;
  3657     0655  30FF               	movlw	255
  3658     0656  0086               	movwf	6	;volatile
  3659     0657                     l1870:
  3660                           
  3661                           ;lib/keypad/keypad.c: 34:      (PORTB = PORTB & (~(1<<1))) ;
  3662     0657  0806               	movf	6,w	;volatile
  3663     0658  39FD               	andlw	253
  3664     0659  0086               	movwf	6	;volatile
  3665     065A                     l1872:
  3666                           
  3667                           ;lib/keypad/keypad.c: 37:      if ((PORTB & (1<<4)?1:0) == 0 ){
  3668     065A  1A06               	btfsc	6,4	;volatile
  3669     065B  2E5D               	goto	u1881
  3670     065C  2E5E               	goto	u1880
  3671     065D                     u1881:
  3672     065D  2E64               	goto	l32
  3673     065E                     u1880:
  3674     065E                     l33:
  3675     065E  1E06               	btfss	6,4	;volatile
  3676     065F  2E61               	goto	u1891
  3677     0660  2E62               	goto	u1890
  3678     0661                     u1891:
  3679     0661  2E5E               	goto	l33
  3680     0662                     u1890:
  3681     0662                     l1876:
  3682                           
  3683                           ;lib/keypad/keypad.c: 39:         return '4' ;
  3684     0662  3034               	movlw	52
  3685     0663  2EDD               	goto	l16
  3686     0664                     l32:
  3687     0664  1A86               	btfsc	6,5	;volatile
  3688     0665  2E67               	goto	u1901
  3689     0666  2E68               	goto	u1900
  3690     0667                     u1901:
  3691     0667  2E6E               	goto	l37
  3692     0668                     u1900:
  3693     0668                     l38:
  3694     0668  1E86               	btfss	6,5	;volatile
  3695     0669  2E6B               	goto	u1911
  3696     066A  2E6C               	goto	u1910
  3697     066B                     u1911:
  3698     066B  2E68               	goto	l38
  3699     066C                     u1910:
  3700     066C                     l1884:
  3701                           
  3702                           ;lib/keypad/keypad.c: 42:          return '5' ;
  3703     066C  3035               	movlw	53
  3704     066D  2EDD               	goto	l16
  3705     066E                     l37:
  3706     066E  1B06               	btfsc	6,6	;volatile
  3707     066F  2E71               	goto	u1921
  3708     0670  2E72               	goto	u1920
  3709     0671                     u1921:
  3710     0671  2E78               	goto	l42
  3711     0672                     u1920:
  3712     0672                     l43:
  3713     0672  1F06               	btfss	6,6	;volatile
  3714     0673  2E75               	goto	u1931
  3715     0674  2E76               	goto	u1930
  3716     0675                     u1931:
  3717     0675  2E72               	goto	l43
  3718     0676                     u1930:
  3719     0676                     l1892:
  3720                           
  3721                           ;lib/keypad/keypad.c: 45:          return '6' ;
  3722     0676  3036               	movlw	54
  3723     0677  2EDD               	goto	l16
  3724     0678                     l42:
  3725     0678  1B86               	btfsc	6,7	;volatile
  3726     0679  2E7B               	goto	u1941
  3727     067A  2E7C               	goto	u1940
  3728     067B                     u1941:
  3729     067B  2E82               	goto	l41
  3730     067C                     u1940:
  3731     067C                     l48:
  3732     067C  1F86               	btfss	6,7	;volatile
  3733     067D  2E7F               	goto	u1951
  3734     067E  2E80               	goto	u1950
  3735     067F                     u1951:
  3736     067F  2E7C               	goto	l48
  3737     0680                     u1950:
  3738     0680                     l1900:
  3739                           
  3740                           ;lib/keypad/keypad.c: 48:          return '*' ;
  3741     0680  302A               	movlw	42
  3742     0681  2EDD               	goto	l16
  3743     0682                     l41:
  3744     0682                     l1904:
  3745                           
  3746                           ;lib/keypad/keypad.c: 51:      PORTB = 0xFF;
  3747     0682  30FF               	movlw	255
  3748     0683  0086               	movwf	6	;volatile
  3749     0684                     l1906:
  3750                           
  3751                           ;lib/keypad/keypad.c: 52:      (PORTB = PORTB & (~(1<<2))) ;
  3752     0684  0806               	movf	6,w	;volatile
  3753     0685  39FB               	andlw	251
  3754     0686  0086               	movwf	6	;volatile
  3755     0687                     l1908:
  3756                           
  3757                           ;lib/keypad/keypad.c: 55:       if ((PORTB & (1<<4)?1:0) == 0 ){
  3758     0687  1A06               	btfsc	6,4	;volatile
  3759     0688  2E8A               	goto	u1961
  3760     0689  2E8B               	goto	u1960
  3761     068A                     u1961:
  3762     068A  2E91               	goto	l51
  3763     068B                     u1960:
  3764     068B                     l52:
  3765     068B  1E06               	btfss	6,4	;volatile
  3766     068C  2E8E               	goto	u1971
  3767     068D  2E8F               	goto	u1970
  3768     068E                     u1971:
  3769     068E  2E8B               	goto	l52
  3770     068F                     u1970:
  3771     068F                     l1912:
  3772                           
  3773                           ;lib/keypad/keypad.c: 57:         return '1' ;
  3774     068F  3031               	movlw	49
  3775     0690  2EDD               	goto	l16
  3776     0691                     l51:
  3777     0691  1A86               	btfsc	6,5	;volatile
  3778     0692  2E94               	goto	u1981
  3779     0693  2E95               	goto	u1980
  3780     0694                     u1981:
  3781     0694  2E9B               	goto	l56
  3782     0695                     u1980:
  3783     0695                     l57:
  3784     0695  1E86               	btfss	6,5	;volatile
  3785     0696  2E98               	goto	u1991
  3786     0697  2E99               	goto	u1990
  3787     0698                     u1991:
  3788     0698  2E95               	goto	l57
  3789     0699                     u1990:
  3790     0699                     l1920:
  3791                           
  3792                           ;lib/keypad/keypad.c: 60:          return '2' ;
  3793     0699  3032               	movlw	50
  3794     069A  2EDD               	goto	l16
  3795     069B                     l56:
  3796     069B  1B06               	btfsc	6,6	;volatile
  3797     069C  2E9E               	goto	u2001
  3798     069D  2E9F               	goto	u2000
  3799     069E                     u2001:
  3800     069E  2EA5               	goto	l61
  3801     069F                     u2000:
  3802     069F                     l62:
  3803     069F  1F06               	btfss	6,6	;volatile
  3804     06A0  2EA2               	goto	u2011
  3805     06A1  2EA3               	goto	u2010
  3806     06A2                     u2011:
  3807     06A2  2E9F               	goto	l62
  3808     06A3                     u2010:
  3809     06A3                     l1928:
  3810                           
  3811                           ;lib/keypad/keypad.c: 63:          return '3' ;
  3812     06A3  3033               	movlw	51
  3813     06A4  2EDD               	goto	l16
  3814     06A5                     l61:
  3815     06A5  1B86               	btfsc	6,7	;volatile
  3816     06A6  2EA8               	goto	u2021
  3817     06A7  2EA9               	goto	u2020
  3818     06A8                     u2021:
  3819     06A8  2EAF               	goto	l60
  3820     06A9                     u2020:
  3821     06A9                     l67:
  3822     06A9  1F86               	btfss	6,7	;volatile
  3823     06AA  2EAC               	goto	u2031
  3824     06AB  2EAD               	goto	u2030
  3825     06AC                     u2031:
  3826     06AC  2EA9               	goto	l67
  3827     06AD                     u2030:
  3828     06AD                     l1936:
  3829                           
  3830                           ;lib/keypad/keypad.c: 66:          return '-' ;
  3831     06AD  302D               	movlw	45
  3832     06AE  2EDD               	goto	l16
  3833     06AF                     l60:
  3834     06AF                     l1940:
  3835                           
  3836                           ;lib/keypad/keypad.c: 69:      PORTB = 0xFF;
  3837     06AF  30FF               	movlw	255
  3838     06B0  0086               	movwf	6	;volatile
  3839     06B1                     l1942:
  3840                           
  3841                           ;lib/keypad/keypad.c: 70:      (PORTB = PORTB & (~(1<<3))) ;
  3842     06B1  0806               	movf	6,w	;volatile
  3843     06B2  39F7               	andlw	247
  3844     06B3  0086               	movwf	6	;volatile
  3845     06B4                     l1944:
  3846                           
  3847                           ;lib/keypad/keypad.c: 73:      if ((PORTB & (1<<4)?1:0) == 0 ){
  3848     06B4  1A06               	btfsc	6,4	;volatile
  3849     06B5  2EB7               	goto	u2041
  3850     06B6  2EB8               	goto	u2040
  3851     06B7                     u2041:
  3852     06B7  2EBE               	goto	l70
  3853     06B8                     u2040:
  3854     06B8                     l71:
  3855     06B8  1E06               	btfss	6,4	;volatile
  3856     06B9  2EBB               	goto	u2051
  3857     06BA  2EBC               	goto	u2050
  3858     06BB                     u2051:
  3859     06BB  2EB8               	goto	l71
  3860     06BC                     u2050:
  3861     06BC                     l1948:
  3862                           
  3863                           ;lib/keypad/keypad.c: 75:         return 'c' ;
  3864     06BC  3063               	movlw	99
  3865     06BD  2EDD               	goto	l16
  3866     06BE                     l70:
  3867     06BE  1A86               	btfsc	6,5	;volatile
  3868     06BF  2EC1               	goto	u2061
  3869     06C0  2EC2               	goto	u2060
  3870     06C1                     u2061:
  3871     06C1  2EC8               	goto	l75
  3872     06C2                     u2060:
  3873     06C2                     l76:
  3874     06C2  1E86               	btfss	6,5	;volatile
  3875     06C3  2EC5               	goto	u2071
  3876     06C4  2EC6               	goto	u2070
  3877     06C5                     u2071:
  3878     06C5  2EC2               	goto	l76
  3879     06C6                     u2070:
  3880     06C6                     l1956:
  3881                           
  3882                           ;lib/keypad/keypad.c: 78:          return '0' ;
  3883     06C6  3030               	movlw	48
  3884     06C7  2EDD               	goto	l16
  3885     06C8                     l75:
  3886     06C8  1B06               	btfsc	6,6	;volatile
  3887     06C9  2ECB               	goto	u2081
  3888     06CA  2ECC               	goto	u2080
  3889     06CB                     u2081:
  3890     06CB  2ED2               	goto	l80
  3891     06CC                     u2080:
  3892     06CC                     l81:
  3893     06CC  1F06               	btfss	6,6	;volatile
  3894     06CD  2ECF               	goto	u2091
  3895     06CE  2ED0               	goto	u2090
  3896     06CF                     u2091:
  3897     06CF  2ECC               	goto	l81
  3898     06D0                     u2090:
  3899     06D0                     l1964:
  3900                           
  3901                           ;lib/keypad/keypad.c: 81:          return '=' ;
  3902     06D0  303D               	movlw	61
  3903     06D1  2EDD               	goto	l16
  3904     06D2                     l80:
  3905     06D2  1B86               	btfsc	6,7	;volatile
  3906     06D3  2ED5               	goto	u2101
  3907     06D4  2ED6               	goto	u2100
  3908     06D5                     u2101:
  3909     06D5  2EDC               	goto	l79
  3910     06D6                     u2100:
  3911     06D6                     l86:
  3912     06D6  1F86               	btfss	6,7	;volatile
  3913     06D7  2ED9               	goto	u2111
  3914     06D8  2EDA               	goto	u2110
  3915     06D9                     u2111:
  3916     06D9  2ED6               	goto	l86
  3917     06DA                     u2110:
  3918     06DA                     l1972:
  3919                           
  3920                           ;lib/keypad/keypad.c: 84:          return '+' ;
  3921     06DA  302B               	movlw	43
  3922     06DB  2EDD               	goto	l16
  3923     06DC                     l79:
  3924     06DC                     l1976:
  3925                           
  3926                           ;lib/keypad/keypad.c: 86:      return '\0' ;
  3927     06DC  3000               	movlw	0
  3928     06DD                     l16:
  3929     06DD  0008               	return
  3930     06DE                     __end_of_keypad_get_key:
  3931                           
  3932                           	psect	text10
  3933     0CD8                     __ptext10:	
  3934 ;; *************** function ___wmul *****************
  3935 ;; Defined at:
  3936 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  multiplier      2    2[COMMON] unsigned int 
  3939 ;;  multiplicand    2    4[COMMON] unsigned int 
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  product         2    6[COMMON] unsigned int 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  2    2[COMMON] unsigned int 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3951 ;;      Params:         4       0       0       0       0
  3952 ;;      Locals:         2       0       0       0       0
  3953 ;;      Temps:          0       0       0       0       0
  3954 ;;      Totals:         6       0       0       0       0
  3955 ;;Total ram usage:        6 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 1
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_main
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965     0CD8                     ___wmul:	
  3966                           ;psect for function ___wmul
  3967                           
  3968     0CD8                     l2078:	
  3969                           ;incstack = 0
  3970                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3971                           
  3972     0CD8  01F6               	clrf	___wmul@product
  3973     0CD9  01F7               	clrf	___wmul@product+1
  3974     0CDA                     l2080:
  3975     0CDA  1C72               	btfss	___wmul@multiplier,0
  3976     0CDB  2CDD               	goto	u2191
  3977     0CDC  2CDE               	goto	u2190
  3978     0CDD                     u2191:
  3979     0CDD  2CE4               	goto	l424
  3980     0CDE                     u2190:
  3981     0CDE                     l2082:
  3982     0CDE  0874               	movf	___wmul@multiplicand,w
  3983     0CDF  07F6               	addwf	___wmul@product,f
  3984     0CE0  1803               	skipnc
  3985     0CE1  0AF7               	incf	___wmul@product+1,f
  3986     0CE2  0875               	movf	___wmul@multiplicand+1,w
  3987     0CE3  07F7               	addwf	___wmul@product+1,f
  3988     0CE4                     l424:
  3989     0CE4  3001               	movlw	1
  3990     0CE5                     u2205:
  3991     0CE5  1003               	clrc
  3992     0CE6  0DF4               	rlf	___wmul@multiplicand,f
  3993     0CE7  0DF5               	rlf	___wmul@multiplicand+1,f
  3994     0CE8  3EFF               	addlw	-1
  3995     0CE9  1D03               	skipz
  3996     0CEA  2CE5               	goto	u2205
  3997     0CEB                     l2084:
  3998     0CEB  3001               	movlw	1
  3999     0CEC                     u2215:
  4000     0CEC  1003               	clrc
  4001     0CED  0CF3               	rrf	___wmul@multiplier+1,f
  4002     0CEE  0CF2               	rrf	___wmul@multiplier,f
  4003     0CEF  3EFF               	addlw	-1
  4004     0CF0  1D03               	skipz
  4005     0CF1  2CEC               	goto	u2215
  4006     0CF2                     l2086:
  4007     0CF2  0872               	movf	___wmul@multiplier,w
  4008     0CF3  0473               	iorwf	___wmul@multiplier+1,w
  4009     0CF4  1D03               	btfss	3,2
  4010     0CF5  2CF7               	goto	u2221
  4011     0CF6  2CF8               	goto	u2220
  4012     0CF7                     u2221:
  4013     0CF7  2CDA               	goto	l2080
  4014     0CF8                     u2220:
  4015     0CF8                     l2088:
  4016     0CF8  0877               	movf	___wmul@product+1,w
  4017     0CF9  00F3               	movwf	?___wmul+1
  4018     0CFA  0876               	movf	___wmul@product,w
  4019     0CFB  00F2               	movwf	?___wmul
  4020     0CFC                     l426:
  4021     0CFC  0008               	return
  4022     0CFD                     __end_of___wmul:
  4023                           
  4024                           	psect	text11
  4025     0E90                     __ptext11:	
  4026 ;; *************** function ___llmod *****************
  4027 ;; Defined at:
  4028 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\llmod.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  divisor         4    2[COMMON] unsigned long 
  4031 ;;  dividend        4    6[COMMON] unsigned long 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  counter         1    1[BANK0 ] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  4    2[COMMON] unsigned long 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0, btemp+1
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4043 ;;      Params:         8       0       0       0       0
  4044 ;;      Locals:         0       1       0       0       0
  4045 ;;      Temps:          0       1       0       0       0
  4046 ;;      Totals:         8       2       0       0       0
  4047 ;;Total ram usage:       10 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 1
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057     0E90                     ___llmod:	
  4058                           ;psect for function ___llmod
  4059                           
  4060     0E90                     l2592:	
  4061                           ;incstack = 0
  4062                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  4063                           
  4064     0E90  0875               	movf	___llmod@divisor+3,w
  4065     0E91  0474               	iorwf	___llmod@divisor+2,w
  4066     0E92  0473               	iorwf	___llmod@divisor+1,w
  4067     0E93  0472               	iorwf	___llmod@divisor,w
  4068     0E94  1903               	skipnz
  4069     0E95  2E97               	goto	u3181
  4070     0E96  2E98               	goto	u3180
  4071     0E97                     u3181:
  4072     0E97  2EDD               	goto	l2610
  4073     0E98                     u3180:
  4074     0E98                     l2594:
  4075     0E98  1283               	bcf	3,5	;RP0=0, select bank0
  4076     0E99  1303               	bcf	3,6	;RP1=0, select bank0
  4077     0E9A  01A1               	clrf	___llmod@counter
  4078     0E9B  0AA1               	incf	___llmod@counter,f
  4079     0E9C  2EAA               	goto	l2600
  4080     0E9D                     l2596:
  4081     0E9D  3001               	movlw	1
  4082     0E9E  00A0               	movwf	??___llmod
  4083     0E9F                     u3195:
  4084     0E9F  1003               	clrc
  4085     0EA0  0DF2               	rlf	___llmod@divisor,f
  4086     0EA1  0DF3               	rlf	___llmod@divisor+1,f
  4087     0EA2  0DF4               	rlf	___llmod@divisor+2,f
  4088     0EA3  0DF5               	rlf	___llmod@divisor+3,f
  4089     0EA4  0BA0               	decfsz	??___llmod,f
  4090     0EA5  2E9F               	goto	u3195
  4091     0EA6                     l2598:
  4092     0EA6  3001               	movlw	1
  4093     0EA7  00FF               	movwf	btemp+1
  4094     0EA8  087F               	movf	btemp+1,w
  4095     0EA9  07A1               	addwf	___llmod@counter,f
  4096     0EAA                     l2600:
  4097     0EAA  1FF5               	btfss	___llmod@divisor+3,7
  4098     0EAB  2EAD               	goto	u3201
  4099     0EAC  2EAE               	goto	u3200
  4100     0EAD                     u3201:
  4101     0EAD  2E9D               	goto	l2596
  4102     0EAE                     u3200:
  4103     0EAE                     l2602:
  4104     0EAE  0875               	movf	___llmod@divisor+3,w
  4105     0EAF  0279               	subwf	___llmod@dividend+3,w
  4106     0EB0  1D03               	skipz
  4107     0EB1  2EBC               	goto	u3215
  4108     0EB2  0874               	movf	___llmod@divisor+2,w
  4109     0EB3  0278               	subwf	___llmod@dividend+2,w
  4110     0EB4  1D03               	skipz
  4111     0EB5  2EBC               	goto	u3215
  4112     0EB6  0873               	movf	___llmod@divisor+1,w
  4113     0EB7  0277               	subwf	___llmod@dividend+1,w
  4114     0EB8  1D03               	skipz
  4115     0EB9  2EBC               	goto	u3215
  4116     0EBA  0872               	movf	___llmod@divisor,w
  4117     0EBB  0276               	subwf	___llmod@dividend,w
  4118     0EBC                     u3215:
  4119     0EBC  1C03               	skipc
  4120     0EBD  2EBF               	goto	u3211
  4121     0EBE  2EC0               	goto	u3210
  4122     0EBF                     u3211:
  4123     0EBF  2ECE               	goto	l2606
  4124     0EC0                     u3210:
  4125     0EC0                     l2604:
  4126     0EC0  0872               	movf	___llmod@divisor,w
  4127     0EC1  02F6               	subwf	___llmod@dividend,f
  4128     0EC2  0873               	movf	___llmod@divisor+1,w
  4129     0EC3  1C03               	skipc
  4130     0EC4  0F73               	incfsz	___llmod@divisor+1,w
  4131     0EC5  02F7               	subwf	___llmod@dividend+1,f
  4132     0EC6  0874               	movf	___llmod@divisor+2,w
  4133     0EC7  1C03               	skipc
  4134     0EC8  0F74               	incfsz	___llmod@divisor+2,w
  4135     0EC9  02F8               	subwf	___llmod@dividend+2,f
  4136     0ECA  0875               	movf	___llmod@divisor+3,w
  4137     0ECB  1C03               	skipc
  4138     0ECC  0F75               	incfsz	___llmod@divisor+3,w
  4139     0ECD  02F9               	subwf	___llmod@dividend+3,f
  4140     0ECE                     l2606:
  4141     0ECE  3001               	movlw	1
  4142     0ECF                     u3225:
  4143     0ECF  1003               	clrc
  4144     0ED0  0CF5               	rrf	___llmod@divisor+3,f
  4145     0ED1  0CF4               	rrf	___llmod@divisor+2,f
  4146     0ED2  0CF3               	rrf	___llmod@divisor+1,f
  4147     0ED3  0CF2               	rrf	___llmod@divisor,f
  4148     0ED4  3EFF               	addlw	-1
  4149     0ED5  1D03               	skipz
  4150     0ED6  2ECF               	goto	u3225
  4151     0ED7                     l2608:
  4152     0ED7  3001               	movlw	1
  4153     0ED8  02A1               	subwf	___llmod@counter,f
  4154     0ED9  1D03               	btfss	3,2
  4155     0EDA  2EDC               	goto	u3231
  4156     0EDB  2EDD               	goto	u3230
  4157     0EDC                     u3231:
  4158     0EDC  2EAE               	goto	l2602
  4159     0EDD                     u3230:
  4160     0EDD                     l2610:
  4161     0EDD  0879               	movf	___llmod@dividend+3,w
  4162     0EDE  00F5               	movwf	?___llmod+3
  4163     0EDF  0878               	movf	___llmod@dividend+2,w
  4164     0EE0  00F4               	movwf	?___llmod+2
  4165     0EE1  0877               	movf	___llmod@dividend+1,w
  4166     0EE2  00F3               	movwf	?___llmod+1
  4167     0EE3  0876               	movf	___llmod@dividend,w
  4168     0EE4  00F2               	movwf	?___llmod
  4169     0EE5                     l654:
  4170     0EE5  0008               	return
  4171     0EE6                     __end_of___llmod:
  4172                           
  4173                           	psect	text12
  4174     0748                     __ptext12:	
  4175 ;; *************** function ___lldiv *****************
  4176 ;; Defined at:
  4177 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  divisor         4    2[COMMON] unsigned long 
  4180 ;;  dividend        4    6[COMMON] unsigned long 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  quotient        4    1[BANK0 ] unsigned long 
  4183 ;;  counter         1    5[BANK0 ] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  4    2[COMMON] unsigned long 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0, btemp+1
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4193 ;;      Params:         8       0       0       0       0
  4194 ;;      Locals:         0       5       0       0       0
  4195 ;;      Temps:          0       1       0       0       0
  4196 ;;      Totals:         8       6       0       0       0
  4197 ;;Total ram usage:       14 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; Hardware stack levels required when called: 1
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_main
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207     0748                     ___lldiv:	
  4208                           ;psect for function ___lldiv
  4209                           
  4210     0748                     l2566:	
  4211                           ;incstack = 0
  4212                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  4213                           
  4214     0748  3000               	movlw	0
  4215     0749  1283               	bcf	3,5	;RP0=0, select bank0
  4216     074A  1303               	bcf	3,6	;RP1=0, select bank0
  4217     074B  00A4               	movwf	___lldiv@quotient+3
  4218     074C  3000               	movlw	0
  4219     074D  00A3               	movwf	___lldiv@quotient+2
  4220     074E  3000               	movlw	0
  4221     074F  00A2               	movwf	___lldiv@quotient+1
  4222     0750  3000               	movlw	0
  4223     0751  00A1               	movwf	___lldiv@quotient
  4224     0752  0875               	movf	___lldiv@divisor+3,w
  4225     0753  0474               	iorwf	___lldiv@divisor+2,w
  4226     0754  0473               	iorwf	___lldiv@divisor+1,w
  4227     0755  0472               	iorwf	___lldiv@divisor,w
  4228     0756  1903               	skipnz
  4229     0757  2F59               	goto	u3111
  4230     0758  2F5A               	goto	u3110
  4231     0759                     u3111:
  4232     0759  2FA7               	goto	l2588
  4233     075A                     u3110:
  4234     075A                     l2568:
  4235     075A  01A5               	clrf	___lldiv@counter
  4236     075B  0AA5               	incf	___lldiv@counter,f
  4237     075C  2F6A               	goto	l2574
  4238     075D                     l2570:
  4239     075D  3001               	movlw	1
  4240     075E  00A0               	movwf	??___lldiv
  4241     075F                     u3125:
  4242     075F  1003               	clrc
  4243     0760  0DF2               	rlf	___lldiv@divisor,f
  4244     0761  0DF3               	rlf	___lldiv@divisor+1,f
  4245     0762  0DF4               	rlf	___lldiv@divisor+2,f
  4246     0763  0DF5               	rlf	___lldiv@divisor+3,f
  4247     0764  0BA0               	decfsz	??___lldiv,f
  4248     0765  2F5F               	goto	u3125
  4249     0766                     l2572:
  4250     0766  3001               	movlw	1
  4251     0767  00FF               	movwf	btemp+1
  4252     0768  087F               	movf	btemp+1,w
  4253     0769  07A5               	addwf	___lldiv@counter,f
  4254     076A                     l2574:
  4255     076A  1FF5               	btfss	___lldiv@divisor+3,7
  4256     076B  2F6D               	goto	u3131
  4257     076C  2F6E               	goto	u3130
  4258     076D                     u3131:
  4259     076D  2F5D               	goto	l2570
  4260     076E                     u3130:
  4261     076E                     l2576:
  4262     076E  3001               	movlw	1
  4263     076F  00A0               	movwf	??___lldiv
  4264     0770                     u3145:
  4265     0770  1003               	clrc
  4266     0771  0DA1               	rlf	___lldiv@quotient,f
  4267     0772  0DA2               	rlf	___lldiv@quotient+1,f
  4268     0773  0DA3               	rlf	___lldiv@quotient+2,f
  4269     0774  0DA4               	rlf	___lldiv@quotient+3,f
  4270     0775  0BA0               	decfsz	??___lldiv,f
  4271     0776  2F70               	goto	u3145
  4272     0777                     l2578:
  4273     0777  0875               	movf	___lldiv@divisor+3,w
  4274     0778  0279               	subwf	___lldiv@dividend+3,w
  4275     0779  1D03               	skipz
  4276     077A  2F85               	goto	u3155
  4277     077B  0874               	movf	___lldiv@divisor+2,w
  4278     077C  0278               	subwf	___lldiv@dividend+2,w
  4279     077D  1D03               	skipz
  4280     077E  2F85               	goto	u3155
  4281     077F  0873               	movf	___lldiv@divisor+1,w
  4282     0780  0277               	subwf	___lldiv@dividend+1,w
  4283     0781  1D03               	skipz
  4284     0782  2F85               	goto	u3155
  4285     0783  0872               	movf	___lldiv@divisor,w
  4286     0784  0276               	subwf	___lldiv@dividend,w
  4287     0785                     u3155:
  4288     0785  1C03               	skipc
  4289     0786  2F88               	goto	u3151
  4290     0787  2F89               	goto	u3150
  4291     0788                     u3151:
  4292     0788  2F98               	goto	l2584
  4293     0789                     u3150:
  4294     0789                     l2580:
  4295     0789  0872               	movf	___lldiv@divisor,w
  4296     078A  02F6               	subwf	___lldiv@dividend,f
  4297     078B  0873               	movf	___lldiv@divisor+1,w
  4298     078C  1C03               	skipc
  4299     078D  0F73               	incfsz	___lldiv@divisor+1,w
  4300     078E  02F7               	subwf	___lldiv@dividend+1,f
  4301     078F  0874               	movf	___lldiv@divisor+2,w
  4302     0790  1C03               	skipc
  4303     0791  0F74               	incfsz	___lldiv@divisor+2,w
  4304     0792  02F8               	subwf	___lldiv@dividend+2,f
  4305     0793  0875               	movf	___lldiv@divisor+3,w
  4306     0794  1C03               	skipc
  4307     0795  0F75               	incfsz	___lldiv@divisor+3,w
  4308     0796  02F9               	subwf	___lldiv@dividend+3,f
  4309     0797                     l2582:
  4310     0797  1421               	bsf	___lldiv@quotient,0
  4311     0798                     l2584:
  4312     0798  3001               	movlw	1
  4313     0799                     u3165:
  4314     0799  1003               	clrc
  4315     079A  0CF5               	rrf	___lldiv@divisor+3,f
  4316     079B  0CF4               	rrf	___lldiv@divisor+2,f
  4317     079C  0CF3               	rrf	___lldiv@divisor+1,f
  4318     079D  0CF2               	rrf	___lldiv@divisor,f
  4319     079E  3EFF               	addlw	-1
  4320     079F  1D03               	skipz
  4321     07A0  2F99               	goto	u3165
  4322     07A1                     l2586:
  4323     07A1  3001               	movlw	1
  4324     07A2  02A5               	subwf	___lldiv@counter,f
  4325     07A3  1D03               	btfss	3,2
  4326     07A4  2FA6               	goto	u3171
  4327     07A5  2FA7               	goto	u3170
  4328     07A6                     u3171:
  4329     07A6  2F6E               	goto	l2576
  4330     07A7                     u3170:
  4331     07A7                     l2588:
  4332     07A7  0824               	movf	___lldiv@quotient+3,w
  4333     07A8  00F5               	movwf	?___lldiv+3
  4334     07A9  0823               	movf	___lldiv@quotient+2,w
  4335     07AA  00F4               	movwf	?___lldiv+2
  4336     07AB  0822               	movf	___lldiv@quotient+1,w
  4337     07AC  00F3               	movwf	?___lldiv+1
  4338     07AD  0821               	movf	___lldiv@quotient,w
  4339     07AE  00F2               	movwf	?___lldiv
  4340     07AF                     l460:
  4341     07AF  0008               	return
  4342     07B0                     __end_of___lldiv:
  4343                           
  4344                           	psect	text13
  4345     07B0                     __ptext13:	
  4346 ;; *************** function _Required_Delay *****************
  4347 ;; Defined at:
  4348 ;;		line 67 in file "main.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  Required_Tim    4    6[COMMON] unsigned long 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  etime           4    8[BANK0 ] unsigned long 
  4353 ;;  stime           4    4[BANK0 ] unsigned long 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4363 ;;      Params:         4       0       0       0       0
  4364 ;;      Locals:         0       8       0       0       0
  4365 ;;      Temps:          0       4       0       0       0
  4366 ;;      Totals:         4      12       0       0       0
  4367 ;;Total ram usage:       16 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 2
  4370 ;; This function calls:
  4371 ;;		_timer_get_time_since_init
  4372 ;; This function is called by:
  4373 ;;		_main
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377     07B0                     _Required_Delay:	
  4378                           ;psect for function _Required_Delay
  4379                           
  4380     07B0                     l2068:	
  4381                           ;incstack = 0
  4382                           ; Regs used in _Required_Delay: [wreg+pclath+cstack]
  4383                           
  4384                           
  4385                           ;main.c: 67: void Required_Delay(unsigned long Required_Time);main.c: 68: {;main.c: 69: 
      +                              unsigned long stime=0,etime=0;
  4386     07B0  3000               	movlw	0
  4387     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4388     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4389     07B3  00A7               	movwf	Required_Delay@stime+3
  4390     07B4  3000               	movlw	0
  4391     07B5  00A6               	movwf	Required_Delay@stime+2
  4392     07B6  3000               	movlw	0
  4393     07B7  00A5               	movwf	Required_Delay@stime+1
  4394     07B8  3000               	movlw	0
  4395     07B9  00A4               	movwf	Required_Delay@stime
  4396     07BA                     l2070:
  4397                           
  4398                           ;main.c: 70:     etime = timer_get_time_since_init();
  4399     07BA  120A  158A  2416  120A  118A  	fcall	_timer_get_time_since_init
  4400     07BF  0875               	movf	?_timer_get_time_since_init+3,w
  4401     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  4402     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  4403     07C2  00AB               	movwf	Required_Delay@etime+3
  4404     07C3  0874               	movf	?_timer_get_time_since_init+2,w
  4405     07C4  00AA               	movwf	Required_Delay@etime+2
  4406     07C5  0873               	movf	?_timer_get_time_since_init+1,w
  4407     07C6  00A9               	movwf	Required_Delay@etime+1
  4408     07C7  0872               	movf	?_timer_get_time_since_init,w
  4409     07C8  00A8               	movwf	Required_Delay@etime
  4410     07C9                     l2074:	
  4411                           ;main.c: 71:     while(etime-stime<=Required_Time)
  4412                           
  4413                           
  4414                           ;main.c: 71:     while(etime-stime<=Required_Time)
  4415     07C9  0828               	movf	Required_Delay@etime,w
  4416     07CA  00A0               	movwf	??_Required_Delay
  4417     07CB  0829               	movf	Required_Delay@etime+1,w
  4418     07CC  00A1               	movwf	??_Required_Delay+1
  4419     07CD  082A               	movf	Required_Delay@etime+2,w
  4420     07CE  00A2               	movwf	??_Required_Delay+2
  4421     07CF  082B               	movf	Required_Delay@etime+3,w
  4422     07D0  00A3               	movwf	??_Required_Delay+3
  4423     07D1  0824               	movf	Required_Delay@stime,w
  4424     07D2  02A0               	subwf	??_Required_Delay,f
  4425     07D3  0825               	movf	Required_Delay@stime+1,w
  4426     07D4  1C03               	skipc
  4427     07D5  0F25               	incfsz	Required_Delay@stime+1,w
  4428     07D6  2FD8               	goto	u2171
  4429     07D7  2FD9               	goto	u2172
  4430     07D8                     u2171:
  4431     07D8  02A1               	subwf	??_Required_Delay+1,f
  4432     07D9                     u2172:
  4433     07D9  0826               	movf	Required_Delay@stime+2,w
  4434     07DA  1C03               	skipc
  4435     07DB  0F26               	incfsz	Required_Delay@stime+2,w
  4436     07DC  2FDE               	goto	u2173
  4437     07DD  2FDF               	goto	u2174
  4438     07DE                     u2173:
  4439     07DE  02A2               	subwf	??_Required_Delay+2,f
  4440     07DF                     u2174:
  4441     07DF  0827               	movf	Required_Delay@stime+3,w
  4442     07E0  1C03               	skipc
  4443     07E1  0F27               	incfsz	Required_Delay@stime+3,w
  4444     07E2  2FE4               	goto	u2175
  4445     07E3  2FE5               	goto	u2176
  4446     07E4                     u2175:
  4447     07E4  02A3               	subwf	??_Required_Delay+3,f
  4448     07E5                     u2176:
  4449     07E5  0823               	movf	??_Required_Delay+3,w
  4450     07E6  0279               	subwf	Required_Delay@Required_Time+3,w
  4451     07E7  1D03               	skipz
  4452     07E8  2FF3               	goto	u2185
  4453     07E9  0822               	movf	??_Required_Delay+2,w
  4454     07EA  0278               	subwf	Required_Delay@Required_Time+2,w
  4455     07EB  1D03               	skipz
  4456     07EC  2FF3               	goto	u2185
  4457     07ED  0821               	movf	??_Required_Delay+1,w
  4458     07EE  0277               	subwf	Required_Delay@Required_Time+1,w
  4459     07EF  1D03               	skipz
  4460     07F0  2FF3               	goto	u2185
  4461     07F1  0820               	movf	??_Required_Delay,w
  4462     07F2  0276               	subwf	Required_Delay@Required_Time,w
  4463     07F3                     u2185:
  4464     07F3  1803               	skipnc
  4465     07F4  2FF6               	goto	u2181
  4466     07F5  2FF7               	goto	u2180
  4467     07F6                     u2181:
  4468     07F6  2FBA               	goto	l2070
  4469     07F7                     u2180:
  4470     07F7                     l2076:
  4471                           
  4472                           ;main.c: 75:     timer0_time_passed_ms=0;
  4473     07F7  3000               	movlw	0
  4474     07F8  00DC               	movwf	_timer0_time_passed_ms+3
  4475     07F9  3000               	movlw	0
  4476     07FA  00DB               	movwf	_timer0_time_passed_ms+2
  4477     07FB  3000               	movlw	0
  4478     07FC  00DA               	movwf	_timer0_time_passed_ms+1
  4479     07FD  3000               	movlw	0
  4480     07FE  00D9               	movwf	_timer0_time_passed_ms
  4481     07FF                     l265:
  4482     07FF  0008               	return
  4483     0800                     __end_of_Required_Delay:
  4484                           
  4485                           	psect	text14
  4486     0C16                     __ptext14:	
  4487 ;; *************** function _timer_get_time_since_init *****************
  4488 ;; Defined at:
  4489 ;;		line 41 in file "lib/timer/timer.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  4    2[COMMON] unsigned long 
  4496 ;; Registers used:
  4497 ;;		wreg
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         4       0       0       0       0
  4504 ;;      Locals:         0       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0
  4506 ;;      Totals:         4       0       0       0       0
  4507 ;;Total ram usage:        4 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 1
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_Required_Delay
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517     0C16                     _timer_get_time_since_init:	
  4518                           ;psect for function _timer_get_time_since_init
  4519                           
  4520     0C16                     l1728:	
  4521                           ;incstack = 0
  4522                           ; Regs used in _timer_get_time_since_init: [wreg]
  4523                           
  4524                           
  4525                           ;lib/timer/timer.c: 43:     return timer0_time_passed_ms;
  4526     0C16  1283               	bcf	3,5	;RP0=0, select bank0
  4527     0C17  1303               	bcf	3,6	;RP1=0, select bank0
  4528     0C18  085C               	movf	_timer0_time_passed_ms+3,w
  4529     0C19  00F5               	movwf	?_timer_get_time_since_init+3
  4530     0C1A  085B               	movf	_timer0_time_passed_ms+2,w
  4531     0C1B  00F4               	movwf	?_timer_get_time_since_init+2
  4532     0C1C  085A               	movf	_timer0_time_passed_ms+1,w
  4533     0C1D  00F3               	movwf	?_timer_get_time_since_init+1
  4534     0C1E  0859               	movf	_timer0_time_passed_ms,w
  4535     0C1F  00F2               	movwf	?_timer_get_time_since_init
  4536     0C20                     l189:
  4537     0C20  0008               	return
  4538     0C21                     __end_of_timer_get_time_since_init:
  4539                           
  4540                           	psect	text15
  4541     0F3F                     __ptext15:	
  4542 ;; *************** function _Print *****************
  4543 ;; Defined at:
  4544 ;;		line 25 in file "main.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  num             2    3[BANK0 ] int 
  4547 ;;  size            2    5[BANK0 ] int 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  Buffer          5    7[BANK0 ] unsigned char [5]
  4550 ;;  i               1   12[BANK0 ] unsigned char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4560 ;;      Params:         0       4       0       0       0
  4561 ;;      Locals:         0       6       0       0       0
  4562 ;;      Temps:          0       0       0       0       0
  4563 ;;      Totals:         0      10       0       0       0
  4564 ;;Total ram usage:       10 bytes
  4565 ;; Hardware stack levels used: 1
  4566 ;; Hardware stack levels required when called: 4
  4567 ;; This function calls:
  4568 ;;		___awdiv
  4569 ;;		___awmod
  4570 ;;		_lcd_out_cp
  4571 ;; This function is called by:
  4572 ;;		_main
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576     0F3F                     _Print:	
  4577                           ;psect for function _Print
  4578                           
  4579     0F3F                     l2548:	
  4580                           ;incstack = 0
  4581                           ; Regs used in _Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4582                           
  4583                           
  4584                           ;main.c: 25: void Print(int num,int size);main.c: 26: {;main.c: 27:     char Buffer[5]={
      +                          5,0,0,0,0};
  4585     0F3F  3027               	movlw	Print@Buffer& (0+255)
  4586     0F40  0084               	movwf	4
  4587     0F41  1283               	bcf	3,5	;RP0=0, select bank0
  4588     0F42  1303               	bcf	3,6	;RP1=0, select bank0
  4589     0F43  0863               	movf	Print@F1366,w
  4590     0F44  1383               	bcf	3,7	;select IRP bank0
  4591     0F45  0080               	movwf	0
  4592     0F46  0A84               	incf	4,f
  4593     0F47  0864               	movf	Print@F1366+1,w
  4594     0F48  0080               	movwf	0
  4595     0F49  0A84               	incf	4,f
  4596     0F4A  0865               	movf	Print@F1366+2,w
  4597     0F4B  0080               	movwf	0
  4598     0F4C  0A84               	incf	4,f
  4599     0F4D  0866               	movf	Print@F1366+3,w
  4600     0F4E  0080               	movwf	0
  4601     0F4F  0A84               	incf	4,f
  4602     0F50  0867               	movf	Print@F1366+4,w
  4603     0F51  0080               	movwf	0
  4604     0F52                     l2550:
  4605                           
  4606                           ;main.c: 28:     char i;;main.c: 29:     if(size==4)
  4607     0F52  3004               	movlw	4
  4608     0F53  0625               	xorwf	Print@size,w
  4609     0F54  0426               	iorwf	Print@size+1,w
  4610     0F55  1D03               	btfss	3,2
  4611     0F56  2F58               	goto	u3091
  4612     0F57  2F59               	goto	u3090
  4613     0F58                     u3091:
  4614     0F58  2F5C               	goto	l247
  4615     0F59                     u3090:
  4616     0F59                     l2552:
  4617                           
  4618                           ;main.c: 30:     {;main.c: 31:         i=3;
  4619     0F59  3003               	movlw	3
  4620     0F5A  00AC               	movwf	Print@i
  4621                           
  4622                           ;main.c: 32:     }
  4623     0F5B  2F8A               	goto	l2560
  4624     0F5C                     l247:	
  4625                           ;main.c: 33:     else
  4626                           
  4627                           
  4628                           ;main.c: 34:     {;main.c: 35:         i=1;
  4629     0F5C  01AC               	clrf	Print@i
  4630     0F5D  0AAC               	incf	Print@i,f
  4631     0F5E  2F8A               	goto	l2560
  4632     0F5F                     l2554:
  4633                           
  4634                           ;main.c: 38:     {;main.c: 39:         Buffer[i] = (num%10)+48;
  4635     0F5F  082C               	movf	Print@i,w
  4636     0F60  3E27               	addlw	(low (Print@Buffer| 0))& (0+255)
  4637     0F61  0084               	movwf	4
  4638     0F62  300A               	movlw	10
  4639     0F63  00F2               	movwf	___awmod@divisor
  4640     0F64  3000               	movlw	0
  4641     0F65  00F3               	movwf	___awmod@divisor+1
  4642     0F66  0824               	movf	Print@num+1,w
  4643     0F67  00F5               	movwf	___awmod@dividend+1
  4644     0F68  0823               	movf	Print@num,w
  4645     0F69  00F4               	movwf	___awmod@dividend
  4646     0F6A  120A  158A  26E6  120A  158A  	fcall	___awmod
  4647     0F6F  0872               	movf	?___awmod,w
  4648     0F70  3E30               	addlw	48
  4649     0F71  1383               	bcf	3,7	;select IRP bank0
  4650     0F72  0080               	movwf	0
  4651     0F73                     l2556:
  4652                           
  4653                           ;main.c: 40:         num/=10;
  4654     0F73  300A               	movlw	10
  4655     0F74  00F2               	movwf	___awdiv@divisor
  4656     0F75  3000               	movlw	0
  4657     0F76  00F3               	movwf	___awdiv@divisor+1
  4658     0F77  1283               	bcf	3,5	;RP0=0, select bank0
  4659     0F78  1303               	bcf	3,6	;RP1=0, select bank0
  4660     0F79  0824               	movf	Print@num+1,w
  4661     0F7A  00F5               	movwf	___awdiv@dividend+1
  4662     0F7B  0823               	movf	Print@num,w
  4663     0F7C  00F4               	movwf	___awdiv@dividend
  4664     0F7D  120A  158A  2799  120A  158A  	fcall	___awdiv
  4665     0F82  0873               	movf	?___awdiv+1,w
  4666     0F83  1283               	bcf	3,5	;RP0=0, select bank0
  4667     0F84  1303               	bcf	3,6	;RP1=0, select bank0
  4668     0F85  00A4               	movwf	Print@num+1
  4669     0F86  0872               	movf	?___awdiv,w
  4670     0F87  00A3               	movwf	Print@num
  4671     0F88                     l2558:
  4672                           
  4673                           ;main.c: 41:         i--;
  4674     0F88  3001               	movlw	1
  4675     0F89  02AC               	subwf	Print@i,f
  4676     0F8A                     l2560:
  4677                           
  4678                           ;main.c: 37:     while(i)
  4679     0F8A  082C               	movf	Print@i,w
  4680     0F8B  1D03               	btfss	3,2
  4681     0F8C  2F8E               	goto	u3101
  4682     0F8D  2F8F               	goto	u3100
  4683     0F8E                     u3101:
  4684     0F8E  2F5F               	goto	l2554
  4685     0F8F                     u3100:
  4686     0F8F                     l2562:
  4687                           
  4688                           ;main.c: 43:     Buffer[0]=num+48;
  4689     0F8F  0823               	movf	Print@num,w
  4690     0F90  3E30               	addlw	48
  4691     0F91  00A7               	movwf	Print@Buffer
  4692     0F92                     l2564:
  4693                           
  4694                           ;main.c: 44:     lcd_out_cp(Buffer);
  4695     0F92  3027               	movlw	(low (Print@Buffer| 0))& (0+255)
  4696     0F93  120A  158A  24B3  120A  158A  	fcall	_lcd_out_cp
  4697     0F98                     l252:
  4698     0F98  0008               	return
  4699     0F99                     __end_of_Print:
  4700                           
  4701                           	psect	text16
  4702     0CB3                     __ptext16:	
  4703 ;; *************** function _lcd_out_cp *****************
  4704 ;; Defined at:
  4705 ;;		line 123 in file "lib/lcd/lcd.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  str             1    wreg     PTR unsigned char 
  4708 ;;		 -> Print@Buffer(5), 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  str             1    0[BANK0 ] PTR unsigned char 
  4711 ;;		 -> Print@Buffer(5), 
  4712 ;;  i               2    1[BANK0 ] int 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4722 ;;      Params:         0       0       0       0       0
  4723 ;;      Locals:         0       3       0       0       0
  4724 ;;      Temps:          1       0       0       0       0
  4725 ;;      Totals:         1       3       0       0       0
  4726 ;;Total ram usage:        4 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; Hardware stack levels required when called: 3
  4729 ;; This function calls:
  4730 ;;		_LCD_Write_Char
  4731 ;; This function is called by:
  4732 ;;		_Print
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736     0CB3                     _lcd_out_cp:	
  4737                           ;psect for function _lcd_out_cp
  4738                           
  4739                           
  4740                           ;incstack = 0
  4741                           ; Regs used in _lcd_out_cp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4742                           ;lcd_out_cp@str stored from wreg
  4743     0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  4744     0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  4745     0CB5  00A0               	movwf	lcd_out_cp@str
  4746     0CB6                     l2470:
  4747                           
  4748                           ;lib/lcd/lcd.c: 123: void lcd_out_cp(char *str);lib/lcd/lcd.c: 124: {;lib/lcd/lcd.c: 125
      +                          :   int i;;lib/lcd/lcd.c: 126:   for(i=0;str[i]!='\0';i++)
  4749     0CB6  01A1               	clrf	lcd_out_cp@i
  4750     0CB7  01A2               	clrf	lcd_out_cp@i+1
  4751     0CB8  2CCC               	goto	l2476
  4752     0CB9                     l2472:
  4753                           
  4754                           ;lib/lcd/lcd.c: 127:     LCD_Write_Char(str[i]);
  4755     0CB9  0821               	movf	lcd_out_cp@i,w
  4756     0CBA  0720               	addwf	lcd_out_cp@str,w
  4757     0CBB  00F8               	movwf	??_lcd_out_cp
  4758     0CBC  0878               	movf	??_lcd_out_cp,w
  4759     0CBD  0084               	movwf	4
  4760     0CBE  0800               	movf	0,w
  4761     0CBF  120A  158A  2641  120A  158A  	fcall	_LCD_Write_Char
  4762     0CC4                     l2474:
  4763     0CC4  3001               	movlw	1
  4764     0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  4765     0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  4766     0CC7  07A1               	addwf	lcd_out_cp@i,f
  4767     0CC8  1803               	skipnc
  4768     0CC9  0AA2               	incf	lcd_out_cp@i+1,f
  4769     0CCA  3000               	movlw	0
  4770     0CCB  07A2               	addwf	lcd_out_cp@i+1,f
  4771     0CCC                     l2476:
  4772     0CCC  0821               	movf	lcd_out_cp@i,w
  4773     0CCD  0720               	addwf	lcd_out_cp@str,w
  4774     0CCE  00F8               	movwf	??_lcd_out_cp
  4775     0CCF  0878               	movf	??_lcd_out_cp,w
  4776     0CD0  0084               	movwf	4
  4777     0CD1  1383               	bcf	3,7	;select IRP bank0
  4778     0CD2  0800               	movf	0,w
  4779     0CD3  1D03               	btfss	3,2
  4780     0CD4  2CD6               	goto	u3001
  4781     0CD5  2CD7               	goto	u3000
  4782     0CD6                     u3001:
  4783     0CD6  2CB9               	goto	l2472
  4784     0CD7                     u3000:
  4785     0CD7                     l160:
  4786     0CD7  0008               	return
  4787     0CD8                     __end_of_lcd_out_cp:
  4788                           
  4789                           	psect	text17
  4790     0E41                     __ptext17:	
  4791 ;; *************** function _LCD_Write_Char *****************
  4792 ;; Defined at:
  4793 ;;		line 34 in file "lib/lcd/lcd.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  Data            1    wreg     unsigned char 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  Data            1    7[COMMON] unsigned char 
  4798 ;;  High4           1    6[COMMON] unsigned char 
  4799 ;;  Low4            1    5[COMMON] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, status,2, status,0, pclath, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4809 ;;      Params:         0       0       0       0       0
  4810 ;;      Locals:         3       0       0       0       0
  4811 ;;      Temps:          2       0       0       0       0
  4812 ;;      Totals:         5       0       0       0       0
  4813 ;;Total ram usage:        5 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; Hardware stack levels required when called: 2
  4816 ;; This function calls:
  4817 ;;		_SET_LCD_DATA_PINS
  4818 ;; This function is called by:
  4819 ;;		_lcd_chr_cp
  4820 ;;		_lcd_out
  4821 ;;		_lcd_out_cp
  4822 ;;		_lcd_chr
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826     0E41                     _LCD_Write_Char:	
  4827                           ;psect for function _LCD_Write_Char
  4828                           
  4829                           
  4830                           ;incstack = 0
  4831                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4832                           ;LCD_Write_Char@Data stored from wreg
  4833     0E41  00F7               	movwf	LCD_Write_Char@Data
  4834     0E42                     l2426:
  4835                           
  4836                           ;lib/lcd/lcd.c: 34: static void LCD_Write_Char(char Data);lib/lcd/lcd.c: 35: {;lib/lcd/l
      +                          cd.c: 36:   char Low4,High4;;lib/lcd/lcd.c: 37:   Low4 = Data & 0x0F;
  4837     0E42  0877               	movf	LCD_Write_Char@Data,w
  4838     0E43  390F               	andlw	15
  4839     0E44  00F5               	movwf	LCD_Write_Char@Low4
  4840                           
  4841                           ;lib/lcd/lcd.c: 38:   High4 = Data & 0xF0;
  4842     0E45  0877               	movf	LCD_Write_Char@Data,w
  4843     0E46  39F0               	andlw	240
  4844     0E47  00F6               	movwf	LCD_Write_Char@High4
  4845     0E48                     l2428:
  4846                           
  4847                           ;lib/lcd/lcd.c: 39:   RD0 = 1;
  4848     0E48  1283               	bcf	3,5	;RP0=0, select bank0
  4849     0E49  1303               	bcf	3,6	;RP1=0, select bank0
  4850     0E4A  1408               	bsf	8,0	;volatile
  4851     0E4B                     l2430:
  4852                           
  4853                           ;lib/lcd/lcd.c: 40:   SET_LCD_DATA_PINS(High4>>4);
  4854     0E4B  0876               	movf	LCD_Write_Char@High4,w
  4855     0E4C  00F3               	movwf	??_LCD_Write_Char
  4856     0E4D  3004               	movlw	4
  4857     0E4E                     u2955:
  4858     0E4E  1003               	clrc
  4859     0E4F  0CF3               	rrf	??_LCD_Write_Char,f
  4860     0E50  3EFF               	addlw	-1
  4861     0E51  1D03               	skipz
  4862     0E52  2E4E               	goto	u2955
  4863     0E53  0873               	movf	??_LCD_Write_Char,w
  4864     0E54  120A  158A  2491  120A  158A  	fcall	_SET_LCD_DATA_PINS
  4865     0E59                     l2432:
  4866                           
  4867                           ;lib/lcd/lcd.c: 41:   RD1 = 1;
  4868     0E59  1283               	bcf	3,5	;RP0=0, select bank0
  4869     0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  4870     0E5B  1488               	bsf	8,1	;volatile
  4871     0E5C                     l2434:
  4872                           
  4873                           ;lib/lcd/lcd.c: 42:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  4874     0E5C  3005               	movlw	5
  4875     0E5D  00F4               	movwf	??_LCD_Write_Char+1
  4876     0E5E  30AB               	movlw	171
  4877     0E5F  00F3               	movwf	??_LCD_Write_Char
  4878     0E60                     u3817:
  4879     0E60  0BF3               	decfsz	??_LCD_Write_Char,f
  4880     0E61  2E60               	goto	u3817
  4881     0E62  0BF4               	decfsz	??_LCD_Write_Char+1,f
  4882     0E63  2E60               	goto	u3817
  4883     0E64  2E65               	nop2
  4884     0E65                     l2436:
  4885                           
  4886                           ;lib/lcd/lcd.c: 43:   RD1 = 0;
  4887     0E65  1283               	bcf	3,5	;RP0=0, select bank0
  4888     0E66  1303               	bcf	3,6	;RP1=0, select bank0
  4889     0E67  1088               	bcf	8,1	;volatile
  4890     0E68                     l2438:
  4891                           
  4892                           ;lib/lcd/lcd.c: 44:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  4893     0E68  3005               	movlw	5
  4894     0E69  00F4               	movwf	??_LCD_Write_Char+1
  4895     0E6A  30AB               	movlw	171
  4896     0E6B  00F3               	movwf	??_LCD_Write_Char
  4897     0E6C                     u3827:
  4898     0E6C  0BF3               	decfsz	??_LCD_Write_Char,f
  4899     0E6D  2E6C               	goto	u3827
  4900     0E6E  0BF4               	decfsz	??_LCD_Write_Char+1,f
  4901     0E6F  2E6C               	goto	u3827
  4902     0E70  2E71               	nop2
  4903     0E71                     l2440:
  4904                           
  4905                           ;lib/lcd/lcd.c: 45:   SET_LCD_DATA_PINS(Low4);
  4906     0E71  0875               	movf	LCD_Write_Char@Low4,w
  4907     0E72  120A  158A  2491  120A  158A  	fcall	_SET_LCD_DATA_PINS
  4908     0E77                     l2442:
  4909                           
  4910                           ;lib/lcd/lcd.c: 46:   RD1 = 1;
  4911     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4912     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4913     0E79  1488               	bsf	8,1	;volatile
  4914     0E7A                     l2444:
  4915                           
  4916                           ;lib/lcd/lcd.c: 47:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  4917     0E7A  3005               	movlw	5
  4918     0E7B  00F4               	movwf	??_LCD_Write_Char+1
  4919     0E7C  30AB               	movlw	171
  4920     0E7D  00F3               	movwf	??_LCD_Write_Char
  4921     0E7E                     u3837:
  4922     0E7E  0BF3               	decfsz	??_LCD_Write_Char,f
  4923     0E7F  2E7E               	goto	u3837
  4924     0E80  0BF4               	decfsz	??_LCD_Write_Char+1,f
  4925     0E81  2E7E               	goto	u3837
  4926     0E82  2E83               	nop2
  4927     0E83                     l2446:
  4928                           
  4929                           ;lib/lcd/lcd.c: 48:   RD1 = 0;
  4930     0E83  1283               	bcf	3,5	;RP0=0, select bank0
  4931     0E84  1303               	bcf	3,6	;RP1=0, select bank0
  4932     0E85  1088               	bcf	8,1	;volatile
  4933     0E86                     l2448:
  4934                           
  4935                           ;lib/lcd/lcd.c: 49:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  4936     0E86  3005               	movlw	5
  4937     0E87  00F4               	movwf	??_LCD_Write_Char+1
  4938     0E88  30AB               	movlw	171
  4939     0E89  00F3               	movwf	??_LCD_Write_Char
  4940     0E8A                     u3847:
  4941     0E8A  0BF3               	decfsz	??_LCD_Write_Char,f
  4942     0E8B  2E8A               	goto	u3847
  4943     0E8C  0BF4               	decfsz	??_LCD_Write_Char+1,f
  4944     0E8D  2E8A               	goto	u3847
  4945     0E8E  2E8F               	nop2
  4946     0E8F                     l131:
  4947     0E8F  0008               	return
  4948     0E90                     __end_of_LCD_Write_Char:
  4949                           
  4950                           	psect	text18
  4951     0C91                     __ptext18:	
  4952 ;; *************** function _SET_LCD_DATA_PINS *****************
  4953 ;; Defined at:
  4954 ;;		line 3 in file "lib/lcd/lcd.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  Data            1    wreg     unsigned char 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  Data            1    2[COMMON] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4968 ;;      Params:         0       0       0       0       0
  4969 ;;      Locals:         1       0       0       0       0
  4970 ;;      Temps:          0       0       0       0       0
  4971 ;;      Totals:         1       0       0       0       0
  4972 ;;Total ram usage:        1 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; Hardware stack levels required when called: 1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_LCD_SEND_4BIT_CMD
  4979 ;;		_LCD_Write_Char
  4980 ;;		_lcd_init
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984     0C91                     _SET_LCD_DATA_PINS:	
  4985                           ;psect for function _SET_LCD_DATA_PINS
  4986                           
  4987                           
  4988                           ;incstack = 0
  4989                           ; Regs used in _SET_LCD_DATA_PINS: [wreg]
  4990                           ;SET_LCD_DATA_PINS@Data stored from wreg
  4991     0C91  00F2               	movwf	SET_LCD_DATA_PINS@Data
  4992     0C92                     l2406:
  4993                           
  4994                           ;lib/lcd/lcd.c: 3: static void SET_LCD_DATA_PINS(unsigned char Data);lib/lcd/lcd.c: 4: {
      +                          ;lib/lcd/lcd.c: 5:   if(Data & 1)
  4995     0C92  1C72               	btfss	SET_LCD_DATA_PINS@Data,0
  4996     0C93  2C95               	goto	u2911
  4997     0C94  2C96               	goto	u2910
  4998     0C95                     u2911:
  4999     0C95  2C9A               	goto	l117
  5000     0C96                     u2910:
  5001     0C96                     l2408:
  5002                           
  5003                           ;lib/lcd/lcd.c: 6:     RD2 = 1;
  5004     0C96  1283               	bcf	3,5	;RP0=0, select bank0
  5005     0C97  1303               	bcf	3,6	;RP1=0, select bank0
  5006     0C98  1508               	bsf	8,2	;volatile
  5007     0C99  2C9D               	goto	l118
  5008     0C9A                     l117:	
  5009                           ;lib/lcd/lcd.c: 7:   else
  5010                           
  5011                           
  5012                           ;lib/lcd/lcd.c: 8:     RD2 = 0;
  5013     0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  5014     0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  5015     0C9C  1108               	bcf	8,2	;volatile
  5016     0C9D                     l118:
  5017                           
  5018                           ;lib/lcd/lcd.c: 9:   if(Data & 2)
  5019     0C9D  1CF2               	btfss	SET_LCD_DATA_PINS@Data,1
  5020     0C9E  2CA0               	goto	u2921
  5021     0C9F  2CA1               	goto	u2920
  5022     0CA0                     u2921:
  5023     0CA0  2CA3               	goto	l119
  5024     0CA1                     u2920:
  5025     0CA1                     l2410:
  5026                           
  5027                           ;lib/lcd/lcd.c: 10:     RD3 = 1;
  5028     0CA1  1588               	bsf	8,3	;volatile
  5029     0CA2  2CA4               	goto	l120
  5030     0CA3                     l119:	
  5031                           ;lib/lcd/lcd.c: 11:   else
  5032                           
  5033                           
  5034                           ;lib/lcd/lcd.c: 12:     RD3 = 0;
  5035     0CA3  1188               	bcf	8,3	;volatile
  5036     0CA4                     l120:
  5037                           
  5038                           ;lib/lcd/lcd.c: 13:   if(Data & 4)
  5039     0CA4  1D72               	btfss	SET_LCD_DATA_PINS@Data,2
  5040     0CA5  2CA7               	goto	u2931
  5041     0CA6  2CA8               	goto	u2930
  5042     0CA7                     u2931:
  5043     0CA7  2CAA               	goto	l121
  5044     0CA8                     u2930:
  5045     0CA8                     l2412:
  5046                           
  5047                           ;lib/lcd/lcd.c: 14:     RD4 = 1;
  5048     0CA8  1608               	bsf	8,4	;volatile
  5049     0CA9  2CAB               	goto	l122
  5050     0CAA                     l121:	
  5051                           ;lib/lcd/lcd.c: 15:   else
  5052                           
  5053                           
  5054                           ;lib/lcd/lcd.c: 16:     RD4 = 0;
  5055     0CAA  1208               	bcf	8,4	;volatile
  5056     0CAB                     l122:
  5057                           
  5058                           ;lib/lcd/lcd.c: 17:   if(Data & 8)
  5059     0CAB  1DF2               	btfss	SET_LCD_DATA_PINS@Data,3
  5060     0CAC  2CAE               	goto	u2941
  5061     0CAD  2CAF               	goto	u2940
  5062     0CAE                     u2941:
  5063     0CAE  2CB1               	goto	l123
  5064     0CAF                     u2940:
  5065     0CAF                     l2414:
  5066                           
  5067                           ;lib/lcd/lcd.c: 18:     RD5 = 1;
  5068     0CAF  1688               	bsf	8,5	;volatile
  5069     0CB0  2CB2               	goto	l125
  5070     0CB1                     l123:	
  5071                           ;lib/lcd/lcd.c: 19:   else
  5072                           
  5073                           
  5074                           ;lib/lcd/lcd.c: 20:     RD5 = 0;
  5075     0CB1  1288               	bcf	8,5	;volatile
  5076     0CB2                     l125:
  5077     0CB2  0008               	return
  5078     0CB3                     __end_of_SET_LCD_DATA_PINS:
  5079                           
  5080                           	psect	text19
  5081     0EE6                     __ptext19:	
  5082 ;; *************** function ___awmod *****************
  5083 ;; Defined at:
  5084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  divisor         2    2[COMMON] int 
  5087 ;;  dividend        2    4[COMMON] int 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  sign            1    7[COMMON] unsigned char 
  5090 ;;  counter         1    6[COMMON] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  2    2[COMMON] int 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0, btemp+1
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5100 ;;      Params:         4       0       0       0       0
  5101 ;;      Locals:         2       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0
  5103 ;;      Totals:         6       0       0       0       0
  5104 ;;Total ram usage:        6 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_Print
  5111 ;;		_main
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115     0EE6                     ___awmod:	
  5116                           ;psect for function ___awmod
  5117                           
  5118     0EE6                     l1790:	
  5119                           ;incstack = 0
  5120                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  5121                           
  5122     0EE6  01F7               	clrf	___awmod@sign
  5123     0EE7                     l1792:
  5124     0EE7  1FF5               	btfss	___awmod@dividend+1,7
  5125     0EE8  2EEA               	goto	u1711
  5126     0EE9  2EEB               	goto	u1710
  5127     0EEA                     u1711:
  5128     0EEA  2EF2               	goto	l1798
  5129     0EEB                     u1710:
  5130     0EEB                     l1794:
  5131     0EEB  09F4               	comf	___awmod@dividend,f
  5132     0EEC  09F5               	comf	___awmod@dividend+1,f
  5133     0EED  0AF4               	incf	___awmod@dividend,f
  5134     0EEE  1903               	skipnz
  5135     0EEF  0AF5               	incf	___awmod@dividend+1,f
  5136     0EF0                     l1796:
  5137     0EF0  01F7               	clrf	___awmod@sign
  5138     0EF1  0AF7               	incf	___awmod@sign,f
  5139     0EF2                     l1798:
  5140     0EF2  1FF3               	btfss	___awmod@divisor+1,7
  5141     0EF3  2EF5               	goto	u1721
  5142     0EF4  2EF6               	goto	u1720
  5143     0EF5                     u1721:
  5144     0EF5  2EFB               	goto	l1802
  5145     0EF6                     u1720:
  5146     0EF6                     l1800:
  5147     0EF6  09F2               	comf	___awmod@divisor,f
  5148     0EF7  09F3               	comf	___awmod@divisor+1,f
  5149     0EF8  0AF2               	incf	___awmod@divisor,f
  5150     0EF9  1903               	skipnz
  5151     0EFA  0AF3               	incf	___awmod@divisor+1,f
  5152     0EFB                     l1802:
  5153     0EFB  0872               	movf	___awmod@divisor,w
  5154     0EFC  0473               	iorwf	___awmod@divisor+1,w
  5155     0EFD  1903               	btfsc	3,2
  5156     0EFE  2F00               	goto	u1731
  5157     0EFF  2F01               	goto	u1730
  5158     0F00                     u1731:
  5159     0F00  2F30               	goto	l1820
  5160     0F01                     u1730:
  5161     0F01                     l1804:
  5162     0F01  01F6               	clrf	___awmod@counter
  5163     0F02  0AF6               	incf	___awmod@counter,f
  5164     0F03  2F0F               	goto	l1810
  5165     0F04                     l1806:
  5166     0F04  3001               	movlw	1
  5167     0F05                     u1745:
  5168     0F05  1003               	clrc
  5169     0F06  0DF2               	rlf	___awmod@divisor,f
  5170     0F07  0DF3               	rlf	___awmod@divisor+1,f
  5171     0F08  3EFF               	addlw	-1
  5172     0F09  1D03               	skipz
  5173     0F0A  2F05               	goto	u1745
  5174     0F0B                     l1808:
  5175     0F0B  3001               	movlw	1
  5176     0F0C  00FF               	movwf	btemp+1
  5177     0F0D  087F               	movf	btemp+1,w
  5178     0F0E  07F6               	addwf	___awmod@counter,f
  5179     0F0F                     l1810:
  5180     0F0F  1FF3               	btfss	___awmod@divisor+1,7
  5181     0F10  2F12               	goto	u1751
  5182     0F11  2F13               	goto	u1750
  5183     0F12                     u1751:
  5184     0F12  2F04               	goto	l1806
  5185     0F13                     u1750:
  5186     0F13                     l1812:
  5187     0F13  0873               	movf	___awmod@divisor+1,w
  5188     0F14  0275               	subwf	___awmod@dividend+1,w
  5189     0F15  1D03               	skipz
  5190     0F16  2F19               	goto	u1765
  5191     0F17  0872               	movf	___awmod@divisor,w
  5192     0F18  0274               	subwf	___awmod@dividend,w
  5193     0F19                     u1765:
  5194     0F19  1C03               	skipc
  5195     0F1A  2F1C               	goto	u1761
  5196     0F1B  2F1D               	goto	u1760
  5197     0F1C                     u1761:
  5198     0F1C  2F23               	goto	l1816
  5199     0F1D                     u1760:
  5200     0F1D                     l1814:
  5201     0F1D  0872               	movf	___awmod@divisor,w
  5202     0F1E  02F4               	subwf	___awmod@dividend,f
  5203     0F1F  0873               	movf	___awmod@divisor+1,w
  5204     0F20  1C03               	skipc
  5205     0F21  03F5               	decf	___awmod@dividend+1,f
  5206     0F22  02F5               	subwf	___awmod@dividend+1,f
  5207     0F23                     l1816:
  5208     0F23  3001               	movlw	1
  5209     0F24                     u1775:
  5210     0F24  1003               	clrc
  5211     0F25  0CF3               	rrf	___awmod@divisor+1,f
  5212     0F26  0CF2               	rrf	___awmod@divisor,f
  5213     0F27  3EFF               	addlw	-1
  5214     0F28  1D03               	skipz
  5215     0F29  2F24               	goto	u1775
  5216     0F2A                     l1818:
  5217     0F2A  3001               	movlw	1
  5218     0F2B  02F6               	subwf	___awmod@counter,f
  5219     0F2C  1D03               	btfss	3,2
  5220     0F2D  2F2F               	goto	u1781
  5221     0F2E  2F30               	goto	u1780
  5222     0F2F                     u1781:
  5223     0F2F  2F13               	goto	l1812
  5224     0F30                     u1780:
  5225     0F30                     l1820:
  5226     0F30  0877               	movf	___awmod@sign,w
  5227     0F31  1903               	btfsc	3,2
  5228     0F32  2F34               	goto	u1791
  5229     0F33  2F35               	goto	u1790
  5230     0F34                     u1791:
  5231     0F34  2F3A               	goto	l1824
  5232     0F35                     u1790:
  5233     0F35                     l1822:
  5234     0F35  09F4               	comf	___awmod@dividend,f
  5235     0F36  09F5               	comf	___awmod@dividend+1,f
  5236     0F37  0AF4               	incf	___awmod@dividend,f
  5237     0F38  1903               	skipnz
  5238     0F39  0AF5               	incf	___awmod@dividend+1,f
  5239     0F3A                     l1824:
  5240     0F3A  0875               	movf	___awmod@dividend+1,w
  5241     0F3B  00F3               	movwf	?___awmod+1
  5242     0F3C  0874               	movf	___awmod@dividend,w
  5243     0F3D  00F2               	movwf	?___awmod
  5244     0F3E                     l590:
  5245     0F3E  0008               	return
  5246     0F3F                     __end_of___awmod:
  5247                           
  5248                           	psect	text20
  5249     0F99                     __ptext20:	
  5250 ;; *************** function ___awdiv *****************
  5251 ;; Defined at:
  5252 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  divisor         2    2[COMMON] int 
  5255 ;;  dividend        2    4[COMMON] int 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  quotient        2    8[COMMON] int 
  5258 ;;  sign            1    7[COMMON] unsigned char 
  5259 ;;  counter         1    6[COMMON] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  2    2[COMMON] int 
  5262 ;; Registers used:
  5263 ;;		wreg, status,2, status,0, btemp+1
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5269 ;;      Params:         4       0       0       0       0
  5270 ;;      Locals:         4       0       0       0       0
  5271 ;;      Temps:          0       0       0       0       0
  5272 ;;      Totals:         8       0       0       0       0
  5273 ;;Total ram usage:        8 bytes
  5274 ;; Hardware stack levels used: 1
  5275 ;; Hardware stack levels required when called: 1
  5276 ;; This function calls:
  5277 ;;		Nothing
  5278 ;; This function is called by:
  5279 ;;		_Print
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283     0F99                     ___awdiv:	
  5284                           ;psect for function ___awdiv
  5285                           
  5286     0F99                     l1746:	
  5287                           ;incstack = 0
  5288                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  5289                           
  5290     0F99  01F7               	clrf	___awdiv@sign
  5291     0F9A                     l1748:
  5292     0F9A  1FF3               	btfss	___awdiv@divisor+1,7
  5293     0F9B  2F9D               	goto	u1611
  5294     0F9C  2F9E               	goto	u1610
  5295     0F9D                     u1611:
  5296     0F9D  2FA5               	goto	l1754
  5297     0F9E                     u1610:
  5298     0F9E                     l1750:
  5299     0F9E  09F2               	comf	___awdiv@divisor,f
  5300     0F9F  09F3               	comf	___awdiv@divisor+1,f
  5301     0FA0  0AF2               	incf	___awdiv@divisor,f
  5302     0FA1  1903               	skipnz
  5303     0FA2  0AF3               	incf	___awdiv@divisor+1,f
  5304     0FA3                     l1752:
  5305     0FA3  01F7               	clrf	___awdiv@sign
  5306     0FA4  0AF7               	incf	___awdiv@sign,f
  5307     0FA5                     l1754:
  5308     0FA5  1FF5               	btfss	___awdiv@dividend+1,7
  5309     0FA6  2FA8               	goto	u1621
  5310     0FA7  2FA9               	goto	u1620
  5311     0FA8                     u1621:
  5312     0FA8  2FB2               	goto	l1760
  5313     0FA9                     u1620:
  5314     0FA9                     l1756:
  5315     0FA9  09F4               	comf	___awdiv@dividend,f
  5316     0FAA  09F5               	comf	___awdiv@dividend+1,f
  5317     0FAB  0AF4               	incf	___awdiv@dividend,f
  5318     0FAC  1903               	skipnz
  5319     0FAD  0AF5               	incf	___awdiv@dividend+1,f
  5320     0FAE                     l1758:
  5321     0FAE  3001               	movlw	1
  5322     0FAF  00FF               	movwf	btemp+1
  5323     0FB0  087F               	movf	btemp+1,w
  5324     0FB1  06F7               	xorwf	___awdiv@sign,f
  5325     0FB2                     l1760:
  5326     0FB2  01F8               	clrf	___awdiv@quotient
  5327     0FB3  01F9               	clrf	___awdiv@quotient+1
  5328     0FB4                     l1762:
  5329     0FB4  0872               	movf	___awdiv@divisor,w
  5330     0FB5  0473               	iorwf	___awdiv@divisor+1,w
  5331     0FB6  1903               	btfsc	3,2
  5332     0FB7  2FB9               	goto	u1631
  5333     0FB8  2FBA               	goto	u1630
  5334     0FB9                     u1631:
  5335     0FB9  2FF1               	goto	l1782
  5336     0FBA                     u1630:
  5337     0FBA                     l1764:
  5338     0FBA  01F6               	clrf	___awdiv@counter
  5339     0FBB  0AF6               	incf	___awdiv@counter,f
  5340     0FBC  2FC8               	goto	l1770
  5341     0FBD                     l1766:
  5342     0FBD  3001               	movlw	1
  5343     0FBE                     u1645:
  5344     0FBE  1003               	clrc
  5345     0FBF  0DF2               	rlf	___awdiv@divisor,f
  5346     0FC0  0DF3               	rlf	___awdiv@divisor+1,f
  5347     0FC1  3EFF               	addlw	-1
  5348     0FC2  1D03               	skipz
  5349     0FC3  2FBE               	goto	u1645
  5350     0FC4                     l1768:
  5351     0FC4  3001               	movlw	1
  5352     0FC5  00FF               	movwf	btemp+1
  5353     0FC6  087F               	movf	btemp+1,w
  5354     0FC7  07F6               	addwf	___awdiv@counter,f
  5355     0FC8                     l1770:
  5356     0FC8  1FF3               	btfss	___awdiv@divisor+1,7
  5357     0FC9  2FCB               	goto	u1651
  5358     0FCA  2FCC               	goto	u1650
  5359     0FCB                     u1651:
  5360     0FCB  2FBD               	goto	l1766
  5361     0FCC                     u1650:
  5362     0FCC                     l1772:
  5363     0FCC  3001               	movlw	1
  5364     0FCD                     u1665:
  5365     0FCD  1003               	clrc
  5366     0FCE  0DF8               	rlf	___awdiv@quotient,f
  5367     0FCF  0DF9               	rlf	___awdiv@quotient+1,f
  5368     0FD0  3EFF               	addlw	-1
  5369     0FD1  1D03               	skipz
  5370     0FD2  2FCD               	goto	u1665
  5371     0FD3  0873               	movf	___awdiv@divisor+1,w
  5372     0FD4  0275               	subwf	___awdiv@dividend+1,w
  5373     0FD5  1D03               	skipz
  5374     0FD6  2FD9               	goto	u1675
  5375     0FD7  0872               	movf	___awdiv@divisor,w
  5376     0FD8  0274               	subwf	___awdiv@dividend,w
  5377     0FD9                     u1675:
  5378     0FD9  1C03               	skipc
  5379     0FDA  2FDC               	goto	u1671
  5380     0FDB  2FDD               	goto	u1670
  5381     0FDC                     u1671:
  5382     0FDC  2FE4               	goto	l1778
  5383     0FDD                     u1670:
  5384     0FDD                     l1774:
  5385     0FDD  0872               	movf	___awdiv@divisor,w
  5386     0FDE  02F4               	subwf	___awdiv@dividend,f
  5387     0FDF  0873               	movf	___awdiv@divisor+1,w
  5388     0FE0  1C03               	skipc
  5389     0FE1  03F5               	decf	___awdiv@dividend+1,f
  5390     0FE2  02F5               	subwf	___awdiv@dividend+1,f
  5391     0FE3                     l1776:
  5392     0FE3  1478               	bsf	___awdiv@quotient,0
  5393     0FE4                     l1778:
  5394     0FE4  3001               	movlw	1
  5395     0FE5                     u1685:
  5396     0FE5  1003               	clrc
  5397     0FE6  0CF3               	rrf	___awdiv@divisor+1,f
  5398     0FE7  0CF2               	rrf	___awdiv@divisor,f
  5399     0FE8  3EFF               	addlw	-1
  5400     0FE9  1D03               	skipz
  5401     0FEA  2FE5               	goto	u1685
  5402     0FEB                     l1780:
  5403     0FEB  3001               	movlw	1
  5404     0FEC  02F6               	subwf	___awdiv@counter,f
  5405     0FED  1D03               	btfss	3,2
  5406     0FEE  2FF0               	goto	u1691
  5407     0FEF  2FF1               	goto	u1690
  5408     0FF0                     u1691:
  5409     0FF0  2FCC               	goto	l1772
  5410     0FF1                     u1690:
  5411     0FF1                     l1782:
  5412     0FF1  0877               	movf	___awdiv@sign,w
  5413     0FF2  1903               	btfsc	3,2
  5414     0FF3  2FF5               	goto	u1701
  5415     0FF4  2FF6               	goto	u1700
  5416     0FF5                     u1701:
  5417     0FF5  2FFB               	goto	l1786
  5418     0FF6                     u1700:
  5419     0FF6                     l1784:
  5420     0FF6  09F8               	comf	___awdiv@quotient,f
  5421     0FF7  09F9               	comf	___awdiv@quotient+1,f
  5422     0FF8  0AF8               	incf	___awdiv@quotient,f
  5423     0FF9  1903               	skipnz
  5424     0FFA  0AF9               	incf	___awdiv@quotient+1,f
  5425     0FFB                     l1786:
  5426     0FFB  0879               	movf	___awdiv@quotient+1,w
  5427     0FFC  00F3               	movwf	?___awdiv+1
  5428     0FFD  0878               	movf	___awdiv@quotient,w
  5429     0FFE  00F2               	movwf	?___awdiv
  5430     0FFF                     l577:
  5431     0FFF  0008               	return
  5432     1000                     __end_of___awdiv:
  5433                           
  5434                           	psect	text21
  5435     0D65                     __ptext21:	
  5436 ;; *************** function _Get_Real_Number *****************
  5437 ;; Defined at:
  5438 ;;		line 12 in file "main.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;  num             1    wreg     unsigned char 
  5441 ;;  looping         1    5[BANK0 ] unsigned char 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;  num             1    9[BANK0 ] unsigned char 
  5444 ;;  result          4   10[BANK0 ] unsigned long 
  5445 ;;  im              1    0        unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  4    5[BANK0 ] unsigned long 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0, pclath, cstack
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         0       4       0       0       0
  5456 ;;      Locals:         0       5       0       0       0
  5457 ;;      Temps:          0       0       0       0       0
  5458 ;;      Totals:         0       9       0       0       0
  5459 ;;Total ram usage:        9 bytes
  5460 ;; Hardware stack levels used: 1
  5461 ;; Hardware stack levels required when called: 2
  5462 ;; This function calls:
  5463 ;;		___lmul
  5464 ;; This function is called by:
  5465 ;;		_main
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469     0D65                     _Get_Real_Number:	
  5470                           ;psect for function _Get_Real_Number
  5471                           
  5472                           
  5473                           ;incstack = 0
  5474                           ; Regs used in _Get_Real_Number: [wreg+status,2+status,0+pclath+cstack]
  5475                           ;Get_Real_Number@num stored from wreg
  5476     0D65  1283               	bcf	3,5	;RP0=0, select bank0
  5477     0D66  1303               	bcf	3,6	;RP1=0, select bank0
  5478     0D67  00A9               	movwf	Get_Real_Number@num
  5479     0D68                     l2534:
  5480                           
  5481                           ;main.c: 15:     unsigned long long result=0;
  5482     0D68  3000               	movlw	0
  5483     0D69  00AD               	movwf	Get_Real_Number@result+3
  5484     0D6A  3000               	movlw	0
  5485     0D6B  00AC               	movwf	Get_Real_Number@result+2
  5486     0D6C  3000               	movlw	0
  5487     0D6D  00AB               	movwf	Get_Real_Number@result+1
  5488     0D6E  3000               	movlw	0
  5489     0D6F  00AA               	movwf	Get_Real_Number@result
  5490     0D70                     l2536:
  5491                           
  5492                           ;main.c: 16:     result = num - im ;
  5493     0D70  0829               	movf	Get_Real_Number@num,w
  5494     0D71  3ED0               	addlw	208
  5495     0D72  00AA               	movwf	Get_Real_Number@result
  5496     0D73  30FF               	movlw	255
  5497     0D74  1803               	skipnc
  5498     0D75  3000               	movlw	0
  5499     0D76  00AB               	movwf	Get_Real_Number@result+1
  5500     0D77  01AC               	clrf	Get_Real_Number@result+2
  5501     0D78  1BAB               	btfsc	Get_Real_Number@result+1,7
  5502     0D79  03AC               	decf	Get_Real_Number@result+2,f
  5503     0D7A  082C               	movf	Get_Real_Number@result+2,w
  5504     0D7B  00AD               	movwf	Get_Real_Number@result+3
  5505                           
  5506                           ;main.c: 17:     while(looping!=0)
  5507     0D7C  2D9E               	goto	l2542
  5508     0D7D                     l2538:
  5509                           
  5510                           ;main.c: 18:     {;main.c: 19:         result*=10;
  5511     0D7D  3000               	movlw	0
  5512     0D7E  00F5               	movwf	___lmul@multiplier+3
  5513     0D7F  3000               	movlw	0
  5514     0D80  00F4               	movwf	___lmul@multiplier+2
  5515     0D81  3000               	movlw	0
  5516     0D82  00F3               	movwf	___lmul@multiplier+1
  5517     0D83  300A               	movlw	10
  5518     0D84  00F2               	movwf	___lmul@multiplier
  5519     0D85  082D               	movf	Get_Real_Number@result+3,w
  5520     0D86  00F9               	movwf	___lmul@multiplicand+3
  5521     0D87  082C               	movf	Get_Real_Number@result+2,w
  5522     0D88  00F8               	movwf	___lmul@multiplicand+2
  5523     0D89  082B               	movf	Get_Real_Number@result+1,w
  5524     0D8A  00F7               	movwf	___lmul@multiplicand+1
  5525     0D8B  082A               	movf	Get_Real_Number@result,w
  5526     0D8C  00F6               	movwf	___lmul@multiplicand
  5527     0D8D  120A  158A  25AC  120A  158A  	fcall	___lmul
  5528     0D92  0875               	movf	?___lmul+3,w
  5529     0D93  1283               	bcf	3,5	;RP0=0, select bank0
  5530     0D94  1303               	bcf	3,6	;RP1=0, select bank0
  5531     0D95  00AD               	movwf	Get_Real_Number@result+3
  5532     0D96  0874               	movf	?___lmul+2,w
  5533     0D97  00AC               	movwf	Get_Real_Number@result+2
  5534     0D98  0873               	movf	?___lmul+1,w
  5535     0D99  00AB               	movwf	Get_Real_Number@result+1
  5536     0D9A  0872               	movf	?___lmul,w
  5537     0D9B  00AA               	movwf	Get_Real_Number@result
  5538     0D9C                     l2540:
  5539                           
  5540                           ;main.c: 20:         looping--;
  5541     0D9C  3001               	movlw	1
  5542     0D9D  02A5               	subwf	Get_Real_Number@looping,f
  5543     0D9E                     l2542:
  5544                           
  5545                           ;main.c: 17:     while(looping!=0)
  5546     0D9E  0825               	movf	Get_Real_Number@looping,w
  5547     0D9F  1D03               	btfss	3,2
  5548     0DA0  2DA2               	goto	u3081
  5549     0DA1  2DA3               	goto	u3080
  5550     0DA2                     u3081:
  5551     0DA2  2D7D               	goto	l2538
  5552     0DA3                     u3080:
  5553     0DA3                     l2544:
  5554                           
  5555                           ;main.c: 22:     return result;
  5556     0DA3  082D               	movf	Get_Real_Number@result+3,w
  5557     0DA4  00A8               	movwf	?_Get_Real_Number+3
  5558     0DA5  082C               	movf	Get_Real_Number@result+2,w
  5559     0DA6  00A7               	movwf	?_Get_Real_Number+2
  5560     0DA7  082B               	movf	Get_Real_Number@result+1,w
  5561     0DA8  00A6               	movwf	?_Get_Real_Number+1
  5562     0DA9  082A               	movf	Get_Real_Number@result,w
  5563     0DAA  00A5               	movwf	?_Get_Real_Number
  5564     0DAB                     l242:
  5565     0DAB  0008               	return
  5566     0DAC                     __end_of_Get_Real_Number:
  5567                           
  5568                           	psect	text22
  5569     0DAC                     __ptext22:	
  5570 ;; *************** function ___lmul *****************
  5571 ;; Defined at:
  5572 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  multiplier      4    2[COMMON] unsigned long 
  5575 ;;  multiplicand    4    6[COMMON] unsigned long 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  product         4    1[BANK0 ] unsigned long 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  4    2[COMMON] unsigned long 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5587 ;;      Params:         8       0       0       0       0
  5588 ;;      Locals:         0       4       0       0       0
  5589 ;;      Temps:          0       1       0       0       0
  5590 ;;      Totals:         8       5       0       0       0
  5591 ;;Total ram usage:       13 bytes
  5592 ;; Hardware stack levels used: 1
  5593 ;; Hardware stack levels required when called: 1
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_Get_Real_Number
  5598 ;;		_main
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602     0DAC                     ___lmul:	
  5603                           ;psect for function ___lmul
  5604                           
  5605     0DAC                     l2478:	
  5606                           ;incstack = 0
  5607                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5608                           
  5609     0DAC  3000               	movlw	0
  5610     0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  5611     0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  5612     0DAF  00A4               	movwf	___lmul@product+3
  5613     0DB0  3000               	movlw	0
  5614     0DB1  00A3               	movwf	___lmul@product+2
  5615     0DB2  3000               	movlw	0
  5616     0DB3  00A2               	movwf	___lmul@product+1
  5617     0DB4  3000               	movlw	0
  5618     0DB5  00A1               	movwf	___lmul@product
  5619     0DB6                     l2480:
  5620     0DB6  1C72               	btfss	___lmul@multiplier,0
  5621     0DB7  2DB9               	goto	u3011
  5622     0DB8  2DBA               	goto	u3010
  5623     0DB9                     u3011:
  5624     0DB9  2DD1               	goto	l2484
  5625     0DBA                     u3010:
  5626     0DBA                     l2482:
  5627     0DBA  0876               	movf	___lmul@multiplicand,w
  5628     0DBB  07A1               	addwf	___lmul@product,f
  5629     0DBC  0877               	movf	___lmul@multiplicand+1,w
  5630     0DBD  1103               	clrz
  5631     0DBE  1803               	skipnc
  5632     0DBF  3E01               	addlw	1
  5633     0DC0  1903               	skipnz
  5634     0DC1  2DC3               	goto	u3021
  5635     0DC2  07A2               	addwf	___lmul@product+1,f
  5636     0DC3                     u3021:
  5637     0DC3  0878               	movf	___lmul@multiplicand+2,w
  5638     0DC4  1103               	clrz
  5639     0DC5  1803               	skipnc
  5640     0DC6  3E01               	addlw	1
  5641     0DC7  1903               	skipnz
  5642     0DC8  2DCA               	goto	u3022
  5643     0DC9  07A3               	addwf	___lmul@product+2,f
  5644     0DCA                     u3022:
  5645     0DCA  0879               	movf	___lmul@multiplicand+3,w
  5646     0DCB  1103               	clrz
  5647     0DCC  1803               	skipnc
  5648     0DCD  3E01               	addlw	1
  5649     0DCE  1903               	skipnz
  5650     0DCF  2DD1               	goto	u3023
  5651     0DD0  07A4               	addwf	___lmul@product+3,f
  5652     0DD1                     u3023:
  5653     0DD1                     l2484:
  5654     0DD1  3001               	movlw	1
  5655     0DD2  00A0               	movwf	??___lmul
  5656     0DD3                     u3035:
  5657     0DD3  1003               	clrc
  5658     0DD4  0DF6               	rlf	___lmul@multiplicand,f
  5659     0DD5  0DF7               	rlf	___lmul@multiplicand+1,f
  5660     0DD6  0DF8               	rlf	___lmul@multiplicand+2,f
  5661     0DD7  0DF9               	rlf	___lmul@multiplicand+3,f
  5662     0DD8  0BA0               	decfsz	??___lmul,f
  5663     0DD9  2DD3               	goto	u3035
  5664     0DDA                     l2486:
  5665     0DDA  3001               	movlw	1
  5666     0DDB                     u3045:
  5667     0DDB  1003               	clrc
  5668     0DDC  0CF5               	rrf	___lmul@multiplier+3,f
  5669     0DDD  0CF4               	rrf	___lmul@multiplier+2,f
  5670     0DDE  0CF3               	rrf	___lmul@multiplier+1,f
  5671     0DDF  0CF2               	rrf	___lmul@multiplier,f
  5672     0DE0  3EFF               	addlw	-1
  5673     0DE1  1D03               	skipz
  5674     0DE2  2DDB               	goto	u3045
  5675     0DE3  0875               	movf	___lmul@multiplier+3,w
  5676     0DE4  0474               	iorwf	___lmul@multiplier+2,w
  5677     0DE5  0473               	iorwf	___lmul@multiplier+1,w
  5678     0DE6  0472               	iorwf	___lmul@multiplier,w
  5679     0DE7  1D03               	skipz
  5680     0DE8  2DEA               	goto	u3051
  5681     0DE9  2DEB               	goto	u3050
  5682     0DEA                     u3051:
  5683     0DEA  2DB6               	goto	l2480
  5684     0DEB                     u3050:
  5685     0DEB                     l2488:
  5686     0DEB  0824               	movf	___lmul@product+3,w
  5687     0DEC  00F5               	movwf	?___lmul+3
  5688     0DED  0823               	movf	___lmul@product+2,w
  5689     0DEE  00F4               	movwf	?___lmul+2
  5690     0DEF  0822               	movf	___lmul@product+1,w
  5691     0DF0  00F3               	movwf	?___lmul+1
  5692     0DF1  0821               	movf	___lmul@product,w
  5693     0DF2  00F2               	movwf	?___lmul
  5694     0DF3                     l438:
  5695     0DF3  0008               	return
  5696     0DF4                     __end_of___lmul:
  5697                           
  5698                           	psect	text23
  5699     0D30                     __ptext23:	
  5700 ;; *************** function _ISR *****************
  5701 ;; Defined at:
  5702 ;;		line 50 in file "main.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;		None
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;		None
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      void 
  5709 ;; Registers used:
  5710 ;;		wreg, status,2, status,0
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5716 ;;      Params:         0       0       0       0       0
  5717 ;;      Locals:         0       0       0       0       0
  5718 ;;      Temps:          2       0       0       0       0
  5719 ;;      Totals:         2       0       0       0       0
  5720 ;;Total ram usage:        2 bytes
  5721 ;; Hardware stack levels used: 1
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		Interrupt level 1
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729     0D30                     _ISR:	
  5730                           ;psect for function _ISR
  5731                           
  5732     0D30                     i1l2142:
  5733                           
  5734                           ;main.c: 52:     GIE=0;
  5735     0D30  138B               	bcf	11,7	;volatile
  5736                           
  5737                           ;main.c: 53:     if(TMR0IF==1 && TMR0IE==1)
  5738     0D31  1D0B               	btfss	11,2	;volatile
  5739     0D32  2D34               	goto	u236_21
  5740     0D33  2D35               	goto	u236_20
  5741     0D34                     u236_21:
  5742     0D34  2D59               	goto	i1l2156
  5743     0D35                     u236_20:
  5744     0D35                     i1l2144:
  5745     0D35  1E8B               	btfss	11,5	;volatile
  5746     0D36  2D38               	goto	u237_21
  5747     0D37  2D39               	goto	u237_20
  5748     0D38                     u237_21:
  5749     0D38  2D59               	goto	i1l2156
  5750     0D39                     u237_20:
  5751     0D39                     i1l2146:
  5752                           
  5753                           ;main.c: 54:     {;main.c: 55:         overflow_cnt++;
  5754     0D39  3001               	movlw	1
  5755     0D3A  07FA               	addwf	_overflow_cnt,f
  5756     0D3B  1803               	skipnc
  5757     0D3C  0AFB               	incf	_overflow_cnt+1,f
  5758     0D3D  3000               	movlw	0
  5759     0D3E  07FB               	addwf	_overflow_cnt+1,f
  5760     0D3F                     i1l2148:
  5761                           
  5762                           ;main.c: 56:         if(overflow_cnt==4)
  5763     0D3F  3004               	movlw	4
  5764     0D40  067A               	xorwf	_overflow_cnt,w
  5765     0D41  047B               	iorwf	_overflow_cnt+1,w
  5766     0D42  1D03               	btfss	3,2
  5767     0D43  2D45               	goto	u238_21
  5768     0D44  2D46               	goto	u238_20
  5769     0D45                     u238_21:
  5770     0D45  2D58               	goto	i1l2154
  5771     0D46                     u238_20:
  5772     0D46                     i1l2150:
  5773                           
  5774                           ;main.c: 57:         {;main.c: 58:             timer0_time_passed_ms++;
  5775     0D46  3001               	movlw	1
  5776     0D47  1283               	bcf	3,5	;RP0=0, select bank0
  5777     0D48  1303               	bcf	3,6	;RP1=0, select bank0
  5778     0D49  07D9               	addwf	_timer0_time_passed_ms,f
  5779     0D4A  3000               	movlw	0
  5780     0D4B  1803               	skipnc
  5781     0D4C  3001               	movlw	1
  5782     0D4D  07DA               	addwf	_timer0_time_passed_ms+1,f
  5783     0D4E  3000               	movlw	0
  5784     0D4F  1803               	skipnc
  5785     0D50  3001               	movlw	1
  5786     0D51  07DB               	addwf	_timer0_time_passed_ms+2,f
  5787     0D52  3000               	movlw	0
  5788     0D53  1803               	skipnc
  5789     0D54  3001               	movlw	1
  5790     0D55  07DC               	addwf	_timer0_time_passed_ms+3,f
  5791     0D56                     i1l2152:
  5792                           
  5793                           ;main.c: 59:             overflow_cnt = 0;
  5794     0D56  01FA               	clrf	_overflow_cnt
  5795     0D57  01FB               	clrf	_overflow_cnt+1
  5796     0D58                     i1l2154:
  5797                           
  5798                           ;main.c: 61:         TMR0IF=0;
  5799     0D58  110B               	bcf	11,2	;volatile
  5800     0D59                     i1l2156:
  5801                           
  5802                           ;main.c: 63:     TMR0= 6+40;
  5803     0D59  302E               	movlw	46
  5804     0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  5805     0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  5806     0D5C  0081               	movwf	1	;volatile
  5807     0D5D                     i1l2158:
  5808                           
  5809                           ;main.c: 64:     GIE=1;
  5810     0D5D  178B               	bsf	11,7	;volatile
  5811     0D5E                     i1l259:
  5812     0D5E  0871               	movf	??_ISR+1,w
  5813     0D5F  008A               	movwf	10
  5814     0D60  0E70               	swapf	??_ISR,w
  5815     0D61  0083               	movwf	3
  5816     0D62  0EFE               	swapf	btemp,f
  5817     0D63  0E7E               	swapf	btemp,w
  5818     0D64  0009               	retfie
  5819     0D65                     __end_of_ISR:
  5820     007E                     btemp	set	126	;btemp
  5821     007E                     wtemp0	set	126
  5822                           
  5823                           	psect	intentry
  5824     0004                     __pintentry:	
  5825                           ;incstack = 0
  5826                           ; Regs used in _ISR: [wreg+status,2+status,0]
  5827                           
  5828     0004                     interrupt_function:
  5829     007E                     saved_w	set	btemp
  5830     0004  00FE               	movwf	btemp
  5831     0005  0E03               	swapf	3,w
  5832     0006  00F0               	movwf	??_ISR
  5833     0007  080A               	movf	10,w
  5834     0008  00F1               	movwf	??_ISR+1
  5835     0009  120A  158A  2D30   	ljmp	_ISR

Data Sizes:
    Strings     37
    Constant    0
    Data        17
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     53      72
    BANK1            80      0      12
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_out@str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[13]), STR_2(CODE[17]), STR_3(CODE[7]), 

    lcd_out_cp@str	PTR unsigned char  size(1) Largest target is 5
		 -> Print@Buffer(BANK0[5]), 

    main@c	PTR unsigned char  size(1) Largest target is 11
		 -> main@My_Buffer(BANK0[11]), 

    main@c_194	PTR unsigned char  size(1) Largest target is 11
		 -> main@My_Buffer(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_Required_Delay
    _main->___lldiv
    _main->___llmod
    _main->___lmul
    _lcd_out->_LCD_Write_Char
    _lcd_out->_lcd_set_cursor
    _lcd_set_cursor->_LCD_SEND_4BIT_CMD
    _lcd_init->_LCD_SEND_4BIT_CMD
    _lcd_cmd->_LCD_SEND_4BIT_CMD
    _LCD_SEND_4BIT_CMD->_SET_LCD_DATA_PINS
    _lcd_chr_cp->_LCD_Write_Char
    _Required_Delay->_timer_get_time_since_init
    _Print->___awdiv
    _lcd_out_cp->_LCD_Write_Char
    _LCD_Write_Char->_SET_LCD_DATA_PINS
    _Get_Real_Number->___lmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Get_Real_Number
    _lcd_out->_lcd_set_cursor
    _Print->_lcd_out_cp
    _Get_Real_Number->___lmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   15449
                                             14 BANK0     39    39      0
                    _Get_Real_Number
                              _Print
                     _Required_Delay
                            ___awmod
                            ___lldiv
                            ___llmod
                             ___lmul
                             ___wmul
                     _keypad_get_key
                        _keypad_init
                         _lcd_chr_cp
                            _lcd_cmd
                           _lcd_init
                            _lcd_out
                     _lcd_set_cursor
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              5     3      2    1981
                                              4 BANK0      5     3      2
                     _LCD_Write_Char
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       6     5      1     995
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                  _LCD_SEND_4BIT_CMD
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     279
                                              6 COMMON     2     2      0
                  _LCD_SEND_4BIT_CMD
                  _SET_LCD_DATA_PINS
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              2     2      0     217
                                              6 COMMON     2     2      0
                  _LCD_SEND_4BIT_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_SEND_4BIT_CMD                                    3     3      0     155
                                              3 COMMON     3     3      0
                  _SET_LCD_DATA_PINS
 ---------------------------------------------------------------------------------
 (1) _lcd_chr_cp                                           1     1      0     285
                                              8 COMMON     1     1      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_get_key                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8     592
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     961
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Required_Delay                                      16    12      4     222
                                              6 COMMON     4     0      4
                                              0 BANK0     12    12      0
          _timer_get_time_since_init
 ---------------------------------------------------------------------------------
 (2) _timer_get_time_since_init                            4     0      4       0
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _Print                                               10     6      4    4806
                                              3 BANK0     10     6      4
                            ___awdiv
                            ___awmod
                         _lcd_out_cp
 ---------------------------------------------------------------------------------
 (2) _lcd_out_cp                                           4     4      0     420
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       5     5      0     254
                                              3 COMMON     5     5      0
                  _SET_LCD_DATA_PINS
 ---------------------------------------------------------------------------------
 (3) _SET_LCD_DATA_PINS                                    1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    2576
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Get_Real_Number                                     10     6      4     756
                                              5 BANK0      9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     496
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Get_Real_Number
     ___lmul
   _Print
     ___awdiv
     ___awmod
     _lcd_out_cp
       _LCD_Write_Char
         _SET_LCD_DATA_PINS
   _Required_Delay
     _timer_get_time_since_init
   ___awmod
   ___lldiv
   ___llmod
   ___lmul
   ___wmul
   _keypad_get_key
   _keypad_init
   _lcd_chr_cp
     _LCD_Write_Char
   _lcd_cmd
     _LCD_SEND_4BIT_CMD
       _SET_LCD_DATA_PINS
   _lcd_init
     _LCD_SEND_4BIT_CMD
     _SET_LCD_DATA_PINS
   _lcd_out
     _LCD_Write_Char
     _lcd_set_cursor
       _LCD_SEND_4BIT_CMD
   _lcd_set_cursor
   _timer0_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       C       7       15.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     35      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      60      12        0.0%
ABS                  0      0      60       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu May 09 22:23:47 2024

                                l9 0C3A                                  pc 0002  
                               l12 0637                                 l13 0631  
                               l22 0655                                 l23 064B  
                               l32 0664                                 l24 0645  
                               l16 06DD                                 l41 0682  
                               l33 065E                                 l42 0678  
                               l18 0641                                 l51 0691  
                               l43 0672                                 l19 063B  
                               l60 06AF                                 l52 068B  
                               l61 06A5                                 l37 066E  
                               l29 064F                                 l70 06BE  
                               l62 069F                                 l38 0668  
                               l71 06B8                                 l80 06D2  
                               l56 069B                                 l48 067C  
                               l81 06CC                                 l57 0695  
                               l75 06C8                                 l67 06A9  
                               l76 06C2                                 l86 06D6  
                               l79 06DC                       ___awdiv@sign 0077  
                               fsr 0004                ___wmul@multiplicand 0074  
                              l120 0CA4                                l121 0CAA  
                              l122 0CAB                                l123 0CB1  
                              l131 0E8F                                l125 0CB2  
                              l117 0C9A                                l118 0C9D  
                              l134 0747                                l142 0E40  
                              l119 0CA3                                l160 0CD7  
                              l128 0C90                                l137 0C76  
                              l242 0DAB                                l154 0D2F  
                              l252 0F98                                l148 0C15  
                   lcd_cmd@command 0077                                l247 0F5C  
                              l183 0C4B                                l424 0CE4  
                              l265 07FF                                l426 0CFC  
                              l290 01C1                                l460 07AF  
                              l189 0C20                                l438 0DF3  
                              l590 0F3E                                l654 0EE5  
                              l577 0FFF                                _GIE 005F  
                              _RD0 0040                                _RD1 0041  
                              _RD2 0042                                _RD3 0043  
                              _RD4 0044                                _RD5 0045  
                              _ISR 0D30                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0077  
      ??_timer_get_time_since_init 0076                    ?_lcd_set_cursor 0076  
                      main@desired 004F                               ?_ISR 0070  
                             l2030 0C48                               l2022 0C3C  
                             l2032 0C49                               l2024 0C45  
                             l2034 0C4A                               l2026 0C46  
                             l2028 0C47                               l2070 07BA  
                             l2080 0CDA                               l2410 0CA1  
                             l2074 07C9                               l2082 0CDE  
                             l2412 0CA8                               l2076 07F7  
                             l2068 07B0                               l2084 0CEB  
                             l2420 0C81                               l2500 0703  
                             l2414 0CAF                               l2406 0C92  
                             l2430 0E4B                               l2086 0CF2  
                             l2078 0CD8                               l2422 0C84  
                             l2510 0729                               l2502 070C  
                             l1800 0EF6                               l2408 0C96  
                             l2440 0E71                               l2432 0E59  
                             l2600 0EAA                               l2088 0CF8  
                             l2424 0C8D                               l2416 0C78  
                             l2520 0C60                               l2512 072F  
                             l2504 0717                               l1810 0F0F  
                             l1802 0EFB                               l2442 0E77  
                             l2434 0E5C                               l2426 0E42  
                             l2602 0EAE                               l2610 0EDD  
                             l2522 0C0F                               l2418 0C7B  
                             l2514 0735                               l2506 071D  
                             l2450 0DF7                               l2530 0D1A  
                             l2540 0D9C                               l1812 0F13  
                             l1804 0F01                               l1820 0F30  
                             l2444 0E7A                               l2436 0E65  
                             l2428 0E48                               l2604 0EC0  
                             l1900 0680                               l2516 073B  
                             l2508 0723                               l2452 0DFC  
                             l2460 0E1A                               l2532 0D22  
                             l2524 0D00                               l2700 01C7  
                             l2620 0065                               l2542 0D9E  
                             l2534 0D68                               l1750 0F9E  
                             l1822 0F35                               l1814 0F1D  
                             l1806 0F04                               l2446 0E83  
                             l2438 0E68                               l2470 0CB6  
                             l2550 0F52                               l2606 0ECE  
                             l1830 0C35                               l2518 0741  
                             l2462 0E22                               l2454 0E09  
                             l2526 0D08                               l2710 0227  
                             l2702 01D3                               l2630 0076  
                             l2622 006B                               l2480 0DB6  
                             l2544 0DA3                               l2536 0D70  
                             l1760 0FB2                               l1752 0FA3  
                             l1824 0F3A                               l1816 0F23  
                             l1808 0F0B                               l2448 0E86  
                             l2472 0CB9                               l2560 0F8A  
                             l2552 0F59                               l1728 0C16  
                             l2608 0ED7                               l1920 0699  
                             l1912 068F                               l1904 0682  
                             l1840 0635                               l1832 0626  
                             l2464 0E2F                               l2456 0E0C  
                             l2528 0D0D                               l2800 0511  
                             l2720 028F                               l2712 0235  
                             l2704 01E6                               l2640 00AC  
                             l2632 0077                               l2624 0071  
                             l2616 003E                               l2482 0DBA  
                             l2538 0D7D                               l1770 0FC8  
                             l1762 0FB4                               l1754 0FA5  
                             l1746 0F99                               l1818 0F2A  
                             l2474 0CC4                               l2562 0F8F  
                             l2554 0F5F                               l2570 075D  
                             l1906 0684                               l1834 062A  
                             l2466 0E32                               l2458 0E12  
                             l2810 0538                               l2802 0512  
                             l2730 02A8                               l2722 0291  
                             l2714 0248                               l2706 01FB  
                             l2650 00BD                               l2642 00B0  
                             l2634 0094                               l2626 0073  
                             l2618 004E                               l2484 0DD1  
                             l1780 0FEB                               l1772 0FCC  
                             l1764 0FBA                               l1756 0FA9  
                             l1748 0F9A                               l2476 0CCC  
                             l2564 0F92                               l2556 0F73  
                             l2548 0F3F                               l2580 0789  
                             l2572 0766                               l1940 06AF  
                             l1908 0687                               l1836 062D  
                             l1828 0C2D                               l2492 06DE  
                             l2468 0E38                               l2812 054D  
                             l2820 0561                               l2804 0518  
                             l2732 02BB                               l2740 02F9  
                             l2724 0293                               l2716 025D  
                             l2708 0211                               l2660 00DE  
                             l2652 00BF                               l2644 00B8  
                             l2636 00A0                               l2628 0075  
                             l2486 0DDA                               l2478 0DAC  
                             l1774 0FDD                               l1766 0FBD  
                             l1782 0FF1                               l1758 0FAE  
                             l1790 0EE6                               l2558 0F88  
                             l2582 0797                               l2574 076A  
                             l2566 0748                               l1942 06B1  
                             l1870 0657                               l2494 06E6  
                             l2830 05A5                               l2822 056F  
                             l2814 0555                               l2806 0519  
                             l2742 0306                               l2734 02D0  
                             l2726 0296                               l2718 0272  
                             l2750 035A                               l2670 00FA  
                             l2654 00C7                               l2646 00BC  
                             l2638 00AC                               l2488 0DEB  
                             l1784 0FF6                               l1776 0FE3  
                             l1768 0FC4                               l1792 0EE7  
                             l2584 0798                               l2576 076E  
                             l2568 075A                               l2592 0E90  
                             l1944 06B4                               l1936 06AD  
                             l1928 06A3                               l1872 065A  
                             l1864 0653                               l1856 0649  
                             l1848 063F                               l2496 06EC  
                             l2840 05E6                               l2824 0582  
                             l2832 05A8                               l2816 055B  
                             l2808 0525                               l2760 03C1  
                             l2752 036F                               l2744 0321  
                             l2728 029C                               l2736 02E4  
                             l2680 0119                               l2672 0100  
                             l2664 00E6                               l2656 00CC  
                             l1786 0FFB                               l1778 0FE4  
                             l1794 0EEB                               l2586 07A1  
                             l2578 0777                               l2594 0E98  
                             l2498 06F4                               l2850 0600  
                             l2834 05B6                               l2842 05EB  
                             l2826 0597                               l2818 055C  
                             l2770 0460                               l2762 03FB  
                             l2754 038A                               l2746 0329  
                             l2738 02F3                               l2690 014E  
                             l2682 011C                               l2674 0105  
                             l2666 00EE                               l2658 00D8  
                             l1796 0EF0                               l2588 07A7  
                             l2596 0E9D                               l1972 06DA  
                             l1964 06D0                               l1956 06C6  
                             l1948 06BC                               l1892 0676  
                             l1884 066C                               l1876 0662  
                             l1868 0655                               l2852 0601  
                             l2836 05C9                               l2828 059F  
                             l2860 0612                               l2780 049F  
                             l2772 046F                               l2764 040E  
                             l2756 038E                               l2748 032E  
                             l2692 015C                               l2684 013F  
                             l2676 0109                               l2668 00F4  
                             l1798 0EF2                               l2598 0EA6  
                             l2846 05F9                               l2838 05DE  
                             l2790 04D7                               l2782 04A7  
                             l2774 0475                               l2766 0429  
                             l2758 03AD                               l2694 016F  
                             l2686 0141                               l2678 010F  
                             l1976 06DC                               l2848 05FA  
                             l2856 0608                               l2792 04E9  
                             l2784 04B9                               l2776 0487  
                             l2768 0458                               l2696 0184  
                             l2688 0145                               l2858 060D  
                             l2794 04F6                               l2786 04BF  
                             l2778 048D                               l2698 01A3  
                             l2796 0501                               l2788 04D1  
                             l2798 050B                               STR_1 0817  
                             STR_2 0806                               STR_3 0824  
                             u2000 069F                               u2001 069E  
                             u2010 06A3                               u2011 06A2  
                             u2100 06D6                               u2020 06A9  
                             u2101 06D5                               u2021 06A8  
                             u2110 06DA                               u2030 06AD  
                             u2111 06D9                               u2031 06AC  
                             u3000 0CD7                               u2040 06B8  
                             u3001 0CD6                               u2041 06B7  
                             u3010 0DBA                               u2050 06BC  
                             u3011 0DB9                               u2051 06BB  
                             u3100 0F8F                               u2220 0CF8  
                             u2060 06C2                               u3021 0DC3  
                             u3101 0F8E                               u2221 0CF7  
                             u2205 0CE5                               u2061 06C1  
                             u3022 0DCA                               u3110 075A  
                             u2070 06C6                               u3023 0DD1  
                             u3111 0759                               u2215 0CEC  
                             u2071 06C5                               u3200 0EAE  
                             u2080 06CC                               u3201 0EAD  
                             u2081 06CB                               u3050 0DEB  
                             u1610 0F9E                               u3130 076E  
                             u3210 0EC0                               u2090 06D0  
                             u3051 0DEA                               u3035 0DD3  
                             u1611 0F9D                               u2171 07D8  
                             u3131 076D                               u3211 0EBF  
                             u2091 06CF                               u1700 0FF6  
                             u1620 0FA9                               u2180 07F7  
                             u2172 07D9                               u3300 014D  
                             u3045 0DDB                               u1701 0FF5  
                             u1621 0FA8                               u2181 07F6  
                             u2173 07DE                               u3125 075F  
                             u3301 014C                               u1630 0FBA  
                             u1710 0EEB                               u2174 07DF  
                             u3150 0789                               u3230 0EDD  
                             u2190 0CDE                               u3070 0D2F  
                             u3310 015C                               u1631 0FB9  
                             u1711 0EEA                               u2175 07E4  
                             u3151 0788                               u3231 0EDC  
                             u3215 0EBC                               u2191 0CDD  
                             u3071 0D2E                               u3311 015B  
                             u3080 0DA3                               u1720 0EF6  
                             u2176 07E5                               u1800 0631  
                             u3400 0227                               u3320 016F  
                             u3240 0058                               u3081 0DA2  
                             u1721 0EF5                               u2185 07F3  
                             u3145 0770                               u3225 0ECF  
                             u1801 0630                               u3065 0C63  
                             u3401 0226                               u3321 016E  
                             u1650 0FCC                               u1730 0F01  
                             u3090 0F59                               u3170 07A7  
                             u1810 0635                               u3410 0235  
                             u3330 0184                               u3250 00CC  
                             u1651 0FCB                               u1731 0F00  
                             u3091 0F58                               u3171 07A6  
                             u3155 0785                               u1811 0634  
                             u3411 0234                               u3403 0223  
                             u3331 0183                               u3251 00CB  
                             u3180 0E98                               u1900 0668  
                             u1820 063B                               u3500 0321  
                             u3420 0248                               u3340 01A2  
                             u3260 00D8                               u1645 0FBE  
                             u3165 0799                               u3181 0E97  
                             u1901 0667                               u1821 063A  
                             u3501 0320                               u3421 0247  
                             u3261 00D7                               u1670 0FDD  
                             u1750 0F13                               u1910 066C  
                             u1830 063F                               u3510 0329  
                             u3430 025D                               u3350 01C1  
                             u3270 00DE                               u1671 0FDC  
                             u1751 0F12                               u1911 066B  
                             u1831 063E                               u3511 0328  
                             u3431 025C                               u3271 00DD  
                             u1760 0F1D                               u1920 0672  
                             u1840 0645                               u3600 0525  
                             u3520 035A                               u3440 0272  
                             u3360 01D3                               u3280 0100  
                             u1665 0FCD                               u1761 0F1C  
                             u1745 0F05                               u1921 0671  
                             u1841 0644                               u3601 0524  
                             u3505 031D                               u3441 0271  
                             u3361 01D2                               u3345 0195  
                             u3281 00FF                               u1690 0FF1  
                             u1930 0676                               u1850 0649  
                             u3610 0538                               u3530 036F  
                             u3450 029C                               u3370 01E6  
                             u3346 0196                               u1691 0FF0  
                             u1675 0FD9                               u3195 0E9F  
                             u1931 0675                               u1851 0648  
                             u3611 0537                               u3531 036E  
                             u3451 029B                               u3443 026E  
                             u3371 01E5                               u3355 01B4  
                             u3347 019B                               u3291 0131  
                             u1780 0F30                               u1940 067C  
                             u1860 064F                               u3700 05B6  
                             u3620 054D                               u3540 03C1  
                             u3460 02A8                               u3380 01FB  
                             u3356 01B5                               u3348 019C  
                             u3292 0138                               u1685 0FE5  
                             u1781 0F2F                               u1765 0F19  
                             u1941 067B                               u1861 064E  
                             u3701 05B5                               u3621 054C  
                             u3541 03C0                               u3533 036B  
                             u3525 034D                               u3461 02A7  
                             u3381 01FA                               u3357 01BA  
                             u3349 01A1                               u3293 013F  
                             u1790 0F35                               u2910 0C96  
                             u1950 0680                               u1870 0653  
                             u3710 05C9                               u3630 0555  
                             u3550 040E                               u3526 034E  
                             u3470 02BB                               u3390 0211  
                             u3358 01BB                               u1791 0F34  
                             u1775 0F24                               u2911 0C95  
                             u1951 067F                               u1871 0652  
                             u3711 05C8                               u3631 0554  
                             u3551 040D                               u3543 03BD  
                             u3527 0353                               u3471 02BA  
                             u3391 0210                               u3359 01C0  
                             u2920 0CA1                               u1960 068B  
                             u1880 065E                               u3720 05DE  
                             u3640 055B                               u3560 0458  
                             u3528 0354                               u3480 02D0  
                             u2921 0CA0                               u1961 068A  
                             u1881 065D                               u3721 05DD  
                             u3641 055A                               u3553 040A  
                             u3529 0359                               u3481 02CF  
                             u3393 020D                               u2930 0CA8  
                             u1970 068F                               u1890 0662  
                             u3730 05E6                               u3650 056F  
                             u3570 0501                               u3490 0306  
                             u2931 0CA7                               u1971 068E  
                             u1891 0661                               u3731 05E5  
                             u3651 056E                               u3571 0500  
                             u3491 0305                               u2940 0CAF  
                             u1980 0695                               u3740 05F8  
                             u3660 0582                               u3580 0511  
                             u2941 0CAE                               u1981 0694  
                             u3741 05F7                               u3661 0581  
                             u3581 0510                               u3565 044B  
                             u1990 0699                               u3750 0600  
                             u3670 0597                               u3590 0518  
                             u3566 044C                               u1991 0698  
                             u3807 0C88                               u3751 05FF  
                             u3671 0596                               u3591 0517  
                             u3567 0451                               u3495 0302  
                             u2960 0DFC                               u3680 059F  
                             u3568 0452                               u3817 0E60  
                             u2961 0DFB                               u3681 059E  
                             u3569 0457                               u3690 05A5  
                             u3827 0E6C                               u2955 0E4E  
                             u3691 05A4                               u2980 0E22  
                             u3837 0E7E                               u2981 0E21  
                             u3847 0E8A                               u3767 06F0  
                             u2975 0E02                               u3777 06F8  
                             u3787 0707                               u2995 0E28  
                             u3797 0714                      lcd_chr_cp@chr 0078  
                             _TMR0 0001                        lcd_out_cp@i 0021  
                             _main 003E                               btemp 007E  
                             start 000C                      main@My_Buffer 0034  
                            ??_ISR 0070                              ?_main 0070  
                  __end_of___awdiv 1000                    __end_of___awmod 0F3F  
                  __end_of___lldiv 07B0                    ___awdiv@divisor 0072  
                  __end_of___llmod 0EE6                              i1l259 0D5E  
                  ___awdiv@counter 0076                              _PORTB 0006  
                            _TRISB 0086                   ??_keypad_get_key 0072  
              ___lmul@multiplicand 0076                    __end_of_lcd_cmd 0C77  
                            _Print 0F3F                    __end_of_lcd_out 0D30  
      Required_Delay@Required_Time 0076                       ?_keypad_init 0070  
                            _month 0062                              main@c 004D  
                            main@i 0053                              pclath 000A  
                            status 0003                              wtemp0 007E  
        _timer_get_time_since_init 0C16                     _LCD_Write_Char 0E41  
                  __initialization 000F                       __end_of_main 0626  
                           ??_main 002E                             ?_Print 0023  
                           _ADCON1 009F                   ___llmod@dividend 0076  
                 ___awdiv@dividend 0074                             i1l2150 0D46  
                           i1l2142 0D30                             i1l2152 0D56  
                           i1l2144 0D35                             i1l2154 0D58  
                           i1l2146 0D39                             i1l2148 0D3F  
                           i1l2156 0D59                             i1l2158 0D5D  
                           u236_20 0D35                             u236_21 0D34  
                           u237_20 0D39                             u237_21 0D38  
                           u238_20 0D46                             u238_21 0D45  
                           _TMR0IE 005D                             _TMR0IF 005A  
                       Print@F1366 0063                             _TRISA4 042C  
                           _TRISD0 0440                             _TRISD1 0441  
                           _TRISD2 0442                             _TRISD3 0443  
                           _TRISD4 0444                             _TRISD5 0445  
           __end_of_LCD_Write_Char 0E90                             Print@i 002C  
                 __end_of_lcd_init 0748                             ___lmul 0DAC  
                           ___wmul 0CD8                          ??___awdiv 0076  
                        ??___awmod 0076                          ??___lldiv 0020  
                    lcd_out_cp@str 0020                       ?_timer0_init 0070  
                        ??___llmod 0020                   ___awdiv@quotient 0078  
                  ___awmod@divisor 0072                    ___awmod@counter 0076  
                        ??_lcd_cmd 0076                          ??_lcd_out 0078  
                           saved_w 007E            __end_of__initialization 003A  
                  ?_LCD_Write_Char 0070                Required_Delay@etime 0028  
                   _Required_Delay 07B0                  _LCD_SEND_4BIT_CMD 0C77  
              Required_Delay@stime 0024                     __pcstackCOMMON 0070  
                    __end_of_Print 0F99                       __pidataBANK0 0C09  
                     __pidataBANK1 0C21                 ?_LCD_SEND_4BIT_CMD 0070  
                ??_Get_Real_Number 007A                     _Current_Minute 005F  
                      _Current_Day 0061                   ??_lcd_set_cursor 0077  
              ??_LCD_SEND_4BIT_CMD 0073                     _OPTION_REGbits 0081  
                          ??_Print 007A                         __pbssBANK0 0055  
           __end_of_Required_Delay 0800          __end_of_LCD_SEND_4BIT_CMD 0C91  
          main@num_of_Current_Days 004B                         __pmaintext 003E  
                          ?___lmul 0072                            ?___wmul 0072  
                       __pintentry 0004                     ___lmul@product 0021  
                       _lcd_chr_cp 0C0E             Get_Real_Number@looping 0025  
                       _lcd_out_cp 0CB3                          ?_lcd_init 0070  
                       __stringtab 0800                    ?_Required_Delay 0076  
                          _Seconds 0055                        Print@Buffer 0027  
                          ___awdiv 0F99                            ___awmod 0EE6  
                          ___lldiv 0748                            ___llmod 0E90  
                          __ptext1 0C3B                            __ptext2 0CFD  
                          __ptext3 0DF4                            __ptext4 06DE  
                          __ptext5 0C5F                            __ptext6 0C77  
                          __ptext7 0C0E                            __ptext8 0C2D  
                          __ptext9 0626                            _lcd_cmd 0C5F  
__end_of_timer_get_time_since_init 0C21                            _lcd_out 0CFD  
                 ___awmod@dividend 0074                            main@end 0052  
                          main@key 0051                         ??_lcd_init 0076  
             end_of_initialization 003A                    ___lldiv@divisor 0072  
                  ___lldiv@counter 0025                        ?_lcd_chr_cp 0070  
                      ?_lcd_out_cp 0070                   ??_LCD_Write_Char 0073  
                  _Get_Real_Number 0D65                         lcd_out@col 0024  
                       lcd_out@row 0026                         lcd_out@str 0025  
                       main@months 003F              _timer0_time_passed_ms 0059  
                   __end_of___lmul 0DF4                     __end_of___wmul 0CFD  
              start_initialization 000F                        __end_of_ISR 0D65  
                     _Current_Hour 0060                       _Current_Year 005D  
                  ___llmod@divisor 0072                    ___llmod@counter 0021  
                         ??___lmul 0020                          Print@size 0025  
                         ??___wmul 0076                         init_fetch0 0C4C  
                      __pdataBANK0 0063                        __pdataBANK1 00A0  
                      __pbssCOMMON 007A                          ___latbits 0002  
                    __pcstackBANK0 0020            __end_of_Get_Real_Number 0DAC  
                    ??_keypad_init 0072                lcd_set_cursor@High4 0022  
                 ??_Required_Delay 0020                           ?___awdiv 0072  
                         ?___awmod 0072                           ?___lldiv 0072  
                         ?___llmod 0072                          __pstrings 0800  
            Get_Real_Number@result 002A                           ?_lcd_cmd 0070  
                         ?_lcd_out 0024                  _SET_LCD_DATA_PINS 0C91  
                   _keypad_get_key 0626                  interrupt_function 0004  
                   ___wmul@product 0076                 ?_SET_LCD_DATA_PINS 0070  
              __end_of_keypad_init 0C3B                    lcd_set_cursor@c 0076  
                  lcd_set_cursor@r 0020                          main@F1377 00A0  
              ??_SET_LCD_DATA_PINS 0072                      ??_timer0_init 0072  
                        main@c_194 004E                        __stringbase 0805  
                ___wmul@multiplier 0072                       ??_lcd_chr_cp 0078  
       ?_timer_get_time_since_init 0072                       ??_lcd_out_cp 0078  
                 ?_Get_Real_Number 0025          __end_of_SET_LCD_DATA_PINS 0CB3  
           __end_of_keypad_get_key 06DE                  ___lmul@multiplier 0072  
              LCD_Write_Char@High4 0076                 __end_of_lcd_chr_cp 0C16  
                         Print@num 0023                 __end_of_lcd_out_cp 0CD8  
               __end_of__stringtab 0806                 lcd_set_cursor@Low4 0021  
               lcd_set_cursor@Temp 0023                __end_of_timer0_init 0C4C  
             LCD_SEND_4BIT_CMD@CMD 0075               timer0_init@prescaler 0073  
                         __ptext10 0CD8                           __ptext11 0E90  
                         __ptext20 0F99                           __ptext12 0748  
                         __ptext21 0D65                           __ptext13 07B0  
                         __ptext22 0DAC                           __ptext14 0C16  
                         __ptext23 0D30                           __ptext15 0F3F  
                         __ptext16 0CB3                           __ptext17 0E41  
                         __ptext18 0C91                           __ptext19 0EE6  
                      _keypad_init 0C2D                           _lcd_init 06DE  
                  ?_keypad_get_key 0070                           lcd_out@i 0027  
               LCD_Write_Char@Data 0077                 LCD_Write_Char@Low4 0075  
                         init_ram0 0C50                           intlevel1 0000  
                   _lcd_set_cursor 0DF4                   ___lldiv@dividend 0076  
                        stringcode 0800                        _timer0_init 0C3B  
                       _OPTION_REG 0081                   ___lldiv@quotient 0021  
               Get_Real_Number@num 0029                           stringdir 0800  
                         stringtab 0800             __end_of_lcd_set_cursor 0E41  
                     _overflow_cnt 007A              SET_LCD_DATA_PINS@Data 0072  
