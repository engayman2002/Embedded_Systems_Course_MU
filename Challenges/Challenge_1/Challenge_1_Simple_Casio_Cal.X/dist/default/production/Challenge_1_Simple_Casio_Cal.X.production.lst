

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 20 02:33:29 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 12/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F877A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     0007                     	;# 
    76     0008                     	;# 
    77     0009                     	;# 
    78     000A                     	;# 
    79     000B                     	;# 
    80     000C                     	;# 
    81     000D                     	;# 
    82     000E                     	;# 
    83     000E                     	;# 
    84     000F                     	;# 
    85     0010                     	;# 
    86     0011                     	;# 
    87     0012                     	;# 
    88     0013                     	;# 
    89     0014                     	;# 
    90     0015                     	;# 
    91     0015                     	;# 
    92     0016                     	;# 
    93     0017                     	;# 
    94     0018                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001B                     	;# 
    99     001C                     	;# 
   100     001D                     	;# 
   101     001E                     	;# 
   102     001F                     	;# 
   103     0081                     	;# 
   104     0085                     	;# 
   105     0086                     	;# 
   106     0087                     	;# 
   107     0088                     	;# 
   108     0089                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0094                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009E                     	;# 
   121     009F                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0000                     	;# 
   129     0001                     	;# 
   130     0002                     	;# 
   131     0003                     	;# 
   132     0004                     	;# 
   133     0005                     	;# 
   134     0006                     	;# 
   135     0007                     	;# 
   136     0008                     	;# 
   137     0009                     	;# 
   138     000A                     	;# 
   139     000B                     	;# 
   140     000C                     	;# 
   141     000D                     	;# 
   142     000E                     	;# 
   143     000E                     	;# 
   144     000F                     	;# 
   145     0010                     	;# 
   146     0011                     	;# 
   147     0012                     	;# 
   148     0013                     	;# 
   149     0014                     	;# 
   150     0015                     	;# 
   151     0015                     	;# 
   152     0016                     	;# 
   153     0017                     	;# 
   154     0018                     	;# 
   155     0019                     	;# 
   156     001A                     	;# 
   157     001B                     	;# 
   158     001B                     	;# 
   159     001C                     	;# 
   160     001D                     	;# 
   161     001E                     	;# 
   162     001F                     	;# 
   163     0081                     	;# 
   164     0085                     	;# 
   165     0086                     	;# 
   166     0087                     	;# 
   167     0088                     	;# 
   168     0089                     	;# 
   169     008C                     	;# 
   170     008D                     	;# 
   171     008E                     	;# 
   172     0091                     	;# 
   173     0092                     	;# 
   174     0093                     	;# 
   175     0094                     	;# 
   176     0098                     	;# 
   177     0099                     	;# 
   178     009C                     	;# 
   179     009D                     	;# 
   180     009E                     	;# 
   181     009F                     	;# 
   182     010C                     	;# 
   183     010D                     	;# 
   184     010E                     	;# 
   185     010F                     	;# 
   186     018C                     	;# 
   187     018D                     	;# 
   188     0000                     	;# 
   189     0001                     	;# 
   190     0002                     	;# 
   191     0003                     	;# 
   192     0004                     	;# 
   193     0005                     	;# 
   194     0006                     	;# 
   195     0007                     	;# 
   196     0008                     	;# 
   197     0009                     	;# 
   198     000A                     	;# 
   199     000B                     	;# 
   200     000C                     	;# 
   201     000D                     	;# 
   202     000E                     	;# 
   203     000E                     	;# 
   204     000F                     	;# 
   205     0010                     	;# 
   206     0011                     	;# 
   207     0012                     	;# 
   208     0013                     	;# 
   209     0014                     	;# 
   210     0015                     	;# 
   211     0015                     	;# 
   212     0016                     	;# 
   213     0017                     	;# 
   214     0018                     	;# 
   215     0019                     	;# 
   216     001A                     	;# 
   217     001B                     	;# 
   218     001B                     	;# 
   219     001C                     	;# 
   220     001D                     	;# 
   221     001E                     	;# 
   222     001F                     	;# 
   223     0081                     	;# 
   224     0085                     	;# 
   225     0086                     	;# 
   226     0087                     	;# 
   227     0088                     	;# 
   228     0089                     	;# 
   229     008C                     	;# 
   230     008D                     	;# 
   231     008E                     	;# 
   232     0091                     	;# 
   233     0092                     	;# 
   234     0093                     	;# 
   235     0094                     	;# 
   236     0098                     	;# 
   237     0099                     	;# 
   238     009C                     	;# 
   239     009D                     	;# 
   240     009E                     	;# 
   241     009F                     	;# 
   242     010C                     	;# 
   243     010D                     	;# 
   244     010E                     	;# 
   245     010F                     	;# 
   246     018C                     	;# 
   247     018D                     	;# 
   248     0000                     	;# 
   249     0001                     	;# 
   250     0002                     	;# 
   251     0003                     	;# 
   252     0004                     	;# 
   253     0005                     	;# 
   254     0006                     	;# 
   255     0007                     	;# 
   256     0008                     	;# 
   257     0009                     	;# 
   258     000A                     	;# 
   259     000B                     	;# 
   260     000C                     	;# 
   261     000D                     	;# 
   262     000E                     	;# 
   263     000E                     	;# 
   264     000F                     	;# 
   265     0010                     	;# 
   266     0011                     	;# 
   267     0012                     	;# 
   268     0013                     	;# 
   269     0014                     	;# 
   270     0015                     	;# 
   271     0015                     	;# 
   272     0016                     	;# 
   273     0017                     	;# 
   274     0018                     	;# 
   275     0019                     	;# 
   276     001A                     	;# 
   277     001B                     	;# 
   278     001B                     	;# 
   279     001C                     	;# 
   280     001D                     	;# 
   281     001E                     	;# 
   282     001F                     	;# 
   283     0081                     	;# 
   284     0085                     	;# 
   285     0086                     	;# 
   286     0087                     	;# 
   287     0088                     	;# 
   288     0089                     	;# 
   289     008C                     	;# 
   290     008D                     	;# 
   291     008E                     	;# 
   292     0091                     	;# 
   293     0092                     	;# 
   294     0093                     	;# 
   295     0094                     	;# 
   296     0098                     	;# 
   297     0099                     	;# 
   298     009C                     	;# 
   299     009D                     	;# 
   300     009E                     	;# 
   301     009F                     	;# 
   302     010C                     	;# 
   303     010D                     	;# 
   304     010E                     	;# 
   305     010F                     	;# 
   306     018C                     	;# 
   307     018D                     	;# 
   308     0006                     _PORTB	set	6
   309     0041                     _RD1	set	65
   310     0040                     _RD0	set	64
   311     0045                     _RD5	set	69
   312     0044                     _RD4	set	68
   313     0043                     _RD3	set	67
   314     0042                     _RD2	set	66
   315     0081                     _OPTION_REG	set	129
   316     0086                     _TRISB	set	134
   317     0445                     _TRISD5	set	1093
   318     0444                     _TRISD4	set	1092
   319     0443                     _TRISD3	set	1091
   320     0442                     _TRISD2	set	1090
   321     0441                     _TRISD1	set	1089
   322     0440                     _TRISD0	set	1088
   323                           
   324                           	psect	cinit
   325     07EB                     start_initialization:	
   326                           ; #config settings
   327                           
   328     07EB                     __initialization:
   329                           
   330                           ; Clear objects allocated to BANK0
   331     07EB  1383               	bcf	3,7	;select IRP bank0
   332     07EC  3054               	movlw	low __pbssBANK0
   333     07ED  0084               	movwf	4
   334     07EE  3065               	movlw	low (__pbssBANK0+17)
   335     07EF  120A  118A  2073  120A  118A  	fcall	clear_ram0
   336                           
   337                           ; Clear objects allocated to BANK1
   338     07F4  30A0               	movlw	low __pbssBANK1
   339     07F5  0084               	movwf	4
   340     07F6  30B2               	movlw	low (__pbssBANK1+18)
   341     07F7  120A  118A  2073  120A  118A  	fcall	clear_ram0
   342     07FC                     end_of_initialization:	
   343                           ;End of C runtime variable initialization code
   344                           
   345     07FC                     __end_of__initialization:
   346     07FC  0183               	clrf	3
   347     07FD  120A  118A  2C15   	ljmp	_main	;jump to C main() function
   348                           
   349                           	psect	bssBANK0
   350     0054                     __pbssBANK0:
   351     0054                     Get_Expression@F1349:
   352     0054                     	ds	17
   353                           
   354                           	psect	bssBANK1
   355     00A0                     __pbssBANK1:
   356     00A0                     main@F1377:
   357     00A0                     	ds	18
   358                           
   359                           	psect	clrtext
   360     0073                     clear_ram0:	
   361                           ;	Called with FSR containing the base address, and
   362                           ;	W with the last address+1
   363                           
   364     0073  0064               	clrwdt	;clear the watchdog before getting into this loop
   365     0074                     clrloop0:
   366     0074  0180               	clrf	0	;clear RAM location pointed to by FSR
   367     0075  0A84               	incf	4,f	;increment pointer
   368     0076  0604               	xorwf	4,w	;XOR with final address
   369     0077  1903               	btfsc	3,2	;have we reached the end yet?
   370     0078  3400               	retlw	0	;all done for this memory range, return
   371     0079  0604               	xorwf	4,w	;XOR again to restore value
   372     007A  2874               	goto	clrloop0	;do the next byte
   373                           
   374                           	psect	cstackCOMMON
   375     0070                     __pcstackCOMMON:
   376     0070                     ?_lcd_cmd:
   377     0070                     ?_keypad_get_key:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ??_keypad_get_key:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ?_lcd_chr_cp:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ?_lcd_init:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ?_keypad_init:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0070                     ??_keypad_init:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ?_Get_Expression:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_Delete_Pre_Num:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_main:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_SET_LCD_DATA_PINS:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ??_SET_LCD_DATA_PINS:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_LCD_SEND_4BIT_CMD:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ?_LCD_Write_Char:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?___wmul:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ?___awmod:	
   420                           ; 2 bytes @ 0x0
   421                           
   422     0070                     Delete_Pre_Num@i:	
   423                           ; 2 bytes @ 0x0
   424                           
   425     0070                     SET_LCD_DATA_PINS@Data:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     ___wmul@multiplier:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ___awmod@divisor:	
   432                           ; 2 bytes @ 0x0
   433                           
   434                           
   435                           ; 2 bytes @ 0x0
   436     0070                     	ds	1
   437     0071                     ??_Delete_Pre_Num:
   438     0071                     ??_LCD_SEND_4BIT_CMD:	
   439                           ; 1 bytes @ 0x1
   440                           
   441     0071                     ??_LCD_Write_Char:	
   442                           ; 1 bytes @ 0x1
   443                           
   444                           
   445                           ; 1 bytes @ 0x1
   446     0071                     	ds	1
   447     0072                     Delete_Pre_Num@j:
   448     0072                     ___wmul@multiplicand:	
   449                           ; 1 bytes @ 0x2
   450                           
   451     0072                     ___awmod@dividend:	
   452                           ; 2 bytes @ 0x2
   453                           
   454                           
   455                           ; 2 bytes @ 0x2
   456     0072                     	ds	1
   457     0073                     Delete_Pre_Num@expr:
   458     0073                     LCD_SEND_4BIT_CMD@CMD:	
   459                           ; 1 bytes @ 0x3
   460                           
   461     0073                     LCD_Write_Char@Low4:	
   462                           ; 1 bytes @ 0x3
   463                           
   464                           
   465                           ; 1 bytes @ 0x3
   466     0073                     	ds	1
   467     0074                     ??_lcd_cmd:
   468     0074                     ?_lcd_set_cursor:	
   469                           ; 1 bytes @ 0x4
   470                           
   471     0074                     ??_lcd_init:	
   472                           ; 1 bytes @ 0x4
   473                           
   474     0074                     ??___wmul:	
   475                           ; 1 bytes @ 0x4
   476                           
   477     0074                     ??___awmod:	
   478                           ; 1 bytes @ 0x4
   479                           
   480     0074                     LCD_Write_Char@High4:	
   481                           ; 1 bytes @ 0x4
   482                           
   483     0074                     lcd_set_cursor@c:	
   484                           ; 1 bytes @ 0x4
   485                           
   486     0074                     ___awmod@counter:	
   487                           ; 1 bytes @ 0x4
   488                           
   489     0074                     ___wmul@product:	
   490                           ; 1 bytes @ 0x4
   491                           
   492                           
   493                           ; 2 bytes @ 0x4
   494     0074                     	ds	1
   495     0075                     ??_lcd_set_cursor:
   496     0075                     LCD_Write_Char@Data:	
   497                           ; 1 bytes @ 0x5
   498                           
   499     0075                     lcd_cmd@command:	
   500                           ; 1 bytes @ 0x5
   501                           
   502     0075                     ___awmod@sign:	
   503                           ; 1 bytes @ 0x5
   504                           
   505                           
   506                           ; 1 bytes @ 0x5
   507     0075                     	ds	1
   508     0076                     ??_lcd_chr_cp:
   509     0076                     ?_atoi:	
   510                           ; 1 bytes @ 0x6
   511                           
   512     0076                     lcd_set_cursor@r:	
   513                           ; 2 bytes @ 0x6
   514                           
   515     0076                     lcd_chr_cp@chr:	
   516                           ; 1 bytes @ 0x6
   517                           
   518                           
   519                           ; 1 bytes @ 0x6
   520     0076                     	ds	1
   521     0077                     lcd_set_cursor@Low4:
   522                           
   523                           ; 1 bytes @ 0x7
   524     0077                     	ds	1
   525     0078                     ??_atoi:
   526     0078                     lcd_set_cursor@High4:	
   527                           ; 1 bytes @ 0x8
   528                           
   529                           
   530                           ; 1 bytes @ 0x8
   531     0078                     	ds	1
   532     0079                     lcd_set_cursor@Temp:
   533                           
   534                           ; 1 bytes @ 0x9
   535     0079                     	ds	1
   536     007A                     ?_lcd_chr:
   537     007A                     ??_Get_Expression:	
   538                           ; 1 bytes @ 0xA
   539                           
   540     007A                     lcd_chr@col:	
   541                           ; 1 bytes @ 0xA
   542                           
   543     007A                     atoi@neg:	
   544                           ; 1 bytes @ 0xA
   545                           
   546                           
   547                           ; 1 bytes @ 0xA
   548     007A                     	ds	1
   549     007B                     lcd_chr@chr:
   550     007B                     atoi@n:	
   551                           ; 1 bytes @ 0xB
   552                           
   553                           
   554                           ; 2 bytes @ 0xB
   555     007B                     	ds	1
   556     007C                     ??_lcd_chr:
   557     007C                     lcd_chr@row:	
   558                           ; 1 bytes @ 0xC
   559                           
   560                           
   561                           ; 1 bytes @ 0xC
   562     007C                     	ds	1
   563     007D                     atoi@s:
   564                           
   565                           ; 1 bytes @ 0xD
   566     007D                     	ds	1
   567     007E                     ??_Solve_expr:
   568     007E                     ??_Print_Result:	
   569                           ; 1 bytes @ 0xE
   570                           
   571     007E                     ??_main:	
   572                           ; 1 bytes @ 0xE
   573                           
   574     007E                     ??___awdiv:	
   575                           ; 1 bytes @ 0xE
   576                           
   577                           
   578                           	psect	cstackBANK0
   579     0020                     __pcstackBANK0:	
   580                           ; 1 bytes @ 0xE
   581                           
   582     0020                     ?_Get_Pre_Num:
   583     0020                     ?_Solve_Add_Sub:	
   584                           ; 2 bytes @ 0x0
   585                           
   586     0020                     Get_Pre_Num@i:	
   587                           ; 2 bytes @ 0x0
   588                           
   589     0020                     Get_Expression@expr:	
   590                           ; 1 bytes @ 0x0
   591                           
   592                           
   593                           ; 17 bytes @ 0x0
   594     0020                     	ds	2
   595     0022                     ??_Get_Pre_Num:
   596     0022                     ??_Solve_Add_Sub:	
   597                           ; 1 bytes @ 0x2
   598                           
   599                           
   600                           ; 1 bytes @ 0x2
   601     0022                     	ds	1
   602     0023                     Solve_Add_Sub@result:
   603                           
   604                           ; 2 bytes @ 0x3
   605     0023                     	ds	1
   606     0024                     Get_Pre_Num@expr:
   607                           
   608                           ; 1 bytes @ 0x4
   609     0024                     	ds	1
   610     0025                     ?___awdiv:
   611     0025                     Solve_Add_Sub@expr:	
   612                           ; 2 bytes @ 0x5
   613                           
   614     0025                     ___awdiv@divisor:	
   615                           ; 1 bytes @ 0x5
   616                           
   617                           
   618                           ; 2 bytes @ 0x5
   619     0025                     	ds	1
   620     0026                     Solve_Add_Sub@i:
   621                           
   622                           ; 2 bytes @ 0x6
   623     0026                     	ds	1
   624     0027                     ___awdiv@dividend:
   625                           
   626                           ; 2 bytes @ 0x7
   627     0027                     	ds	2
   628     0029                     ___awdiv@counter:
   629                           
   630                           ; 1 bytes @ 0x9
   631     0029                     	ds	1
   632     002A                     ___awdiv@sign:
   633                           
   634                           ; 1 bytes @ 0xA
   635     002A                     	ds	1
   636     002B                     ___awdiv@quotient:
   637                           
   638                           ; 2 bytes @ 0xB
   639     002B                     	ds	2
   640     002D                     ?_Print_Result:
   641     002D                     ?_Solve_Mul_Div:	
   642                           ; 1 bytes @ 0xD
   643                           
   644     002D                     Print_Result@result:	
   645                           ; 2 bytes @ 0xD
   646                           
   647                           
   648                           ; 2 bytes @ 0xD
   649     002D                     	ds	2
   650     002F                     ??_Solve_Mul_Div:
   651     002F                     Print_Result@flag:	
   652                           ; 1 bytes @ 0xF
   653                           
   654                           
   655                           ; 1 bytes @ 0xF
   656     002F                     	ds	1
   657     0030                     Print_Result@row:
   658     0030                     _Solve_Mul_Div$793:	
   659                           ; 1 bytes @ 0x10
   660                           
   661                           
   662                           ; 2 bytes @ 0x10
   663     0030                     	ds	1
   664     0031                     Get_Expression@equ:
   665     0031                     Print_Result@col:	
   666                           ; 1 bytes @ 0x11
   667                           
   668                           
   669                           ; 1 bytes @ 0x11
   670     0031                     	ds	1
   671     0032                     Get_Expression@i:
   672     0032                     _Solve_Mul_Div$794:	
   673                           ; 2 bytes @ 0x12
   674                           
   675                           
   676                           ; 2 bytes @ 0x12
   677     0032                     	ds	2
   678     0034                     Solve_Mul_Div@result:
   679                           
   680                           ; 2 bytes @ 0x14
   681     0034                     	ds	2
   682     0036                     Solve_Mul_Div@expr:
   683                           
   684                           ; 1 bytes @ 0x16
   685     0036                     	ds	1
   686     0037                     Solve_Mul_Div@i:
   687                           
   688                           ; 2 bytes @ 0x17
   689     0037                     	ds	2
   690     0039                     ?_Solve_expr:
   691                           
   692                           ; 2 bytes @ 0x19
   693     0039                     	ds	2
   694     003B                     Solve_expr@result:
   695                           
   696                           ; 2 bytes @ 0x1B
   697     003B                     	ds	2
   698     003D                     Solve_expr@expr:
   699                           
   700                           ; 1 bytes @ 0x1D
   701     003D                     	ds	1
   702     003E                     main@expr:
   703                           
   704                           ; 18 bytes @ 0x1E
   705     003E                     	ds	18
   706     0050                     main@result:
   707                           
   708                           ; 2 bytes @ 0x30
   709     0050                     	ds	2
   710     0052                     main@i:
   711                           
   712                           ; 2 bytes @ 0x32
   713     0052                     	ds	2
   714                           
   715                           	psect	maintext
   716     0415                     __pmaintext:	
   717 ;;
   718 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   719 ;;
   720 ;; *************** function _main *****************
   721 ;; Defined at:
   722 ;;		line 169 in file "main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  expr           18   30[BANK0 ] unsigned char [18]
   727 ;;  i               2   50[BANK0 ] int 
   728 ;;  result          2   48[BANK0 ] int 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : B00/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   738 ;;      Params:         0       0       0       0       0
   739 ;;      Locals:         0      22       0       0       0
   740 ;;      Temps:          0       0       0       0       0
   741 ;;      Totals:         0      22       0       0       0
   742 ;;Total ram usage:       22 bytes
   743 ;; Hardware stack levels required when called: 5
   744 ;; This function calls:
   745 ;;		_Get_Expression
   746 ;;		_Print_Result
   747 ;;		_Solve_expr
   748 ;;		_keypad_get_key
   749 ;;		_keypad_init
   750 ;;		_lcd_cmd
   751 ;;		_lcd_init
   752 ;; This function is called by:
   753 ;;		Startup code after reset
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757     0415                     _main:	
   758                           ;psect for function _main
   759                           
   760     0415                     l1991:	
   761                           ;incstack = 0
   762                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   763                           
   764                           
   765                           ;main.c: 172:     lcd_init();
   766     0415  120A  118A  23AB  120A  118A  	fcall	_lcd_init
   767                           
   768                           ;main.c: 173:     lcd_cmd((0x01));
   769     041A  3001               	movlw	1
   770     041B  120A  118A  2099  120A  118A  	fcall	_lcd_cmd
   771                           
   772                           ;main.c: 174:     lcd_cmd((0x02));
   773     0420  3002               	movlw	2
   774     0421  120A  118A  2099  120A  118A  	fcall	_lcd_cmd
   775                           
   776                           ;main.c: 175:     lcd_cmd((0x0C));
   777     0426  300C               	movlw	12
   778     0427  120A  118A  2099  120A  118A  	fcall	_lcd_cmd
   779                           
   780                           ;main.c: 176:     keypad_init();
   781     042C  120A  118A  207B  120A  118A  	fcall	_keypad_init
   782     0431                     l1993:
   783                           
   784                           ;main.c: 177:     int result;;main.c: 179:     char expr[18]={0};
   785     0431  303E               	movlw	main@expr& (0+255)
   786     0432  0084               	movwf	4
   787     0433  3012               	movlw	18
   788     0434  00FF               	movwf	btemp+1
   789     0435                     u2180:
   790     0435  1383               	bcf	3,7	;select IRP bank0
   791     0436  0180               	clrf	0
   792     0437  0A84               	incf	4,f
   793     0438  0BFF               	decfsz	btemp+1,f
   794     0439  2C35               	goto	u2180
   795     043A                     l1995:
   796                           
   797                           ;main.c: 183:     {;main.c: 184:         for(i=0;i<17;i++)
   798     043A  1283               	bcf	3,5	;RP0=0, select bank0
   799     043B  1303               	bcf	3,6	;RP1=0, select bank0
   800     043C  01D2               	clrf	main@i
   801     043D  01D3               	clrf	main@i+1
   802     043E                     l2001:
   803                           
   804                           ;main.c: 185:         {;main.c: 186:             expr[i]=0;
   805     043E  1283               	bcf	3,5	;RP0=0, select bank0
   806     043F  1303               	bcf	3,6	;RP1=0, select bank0
   807     0440  0852               	movf	main@i,w
   808     0441  3E3E               	addlw	(low (main@expr| 0))& (0+255)
   809     0442  0084               	movwf	4
   810     0443  1383               	bcf	3,7	;select IRP bank0
   811     0444  0180               	clrf	0
   812     0445                     l2003:
   813                           
   814                           ;main.c: 187:         }
   815     0445  3001               	movlw	1
   816     0446  07D2               	addwf	main@i,f
   817     0447  1803               	skipnc
   818     0448  0AD3               	incf	main@i+1,f
   819     0449  3000               	movlw	0
   820     044A  07D3               	addwf	main@i+1,f
   821     044B                     l2005:
   822     044B  0853               	movf	main@i+1,w
   823     044C  3A80               	xorlw	128
   824     044D  00FF               	movwf	btemp+1
   825     044E  3080               	movlw	128
   826     044F  027F               	subwf	btemp+1,w
   827     0450  1D03               	skipz
   828     0451  2C54               	goto	u2195
   829     0452  3011               	movlw	17
   830     0453  0252               	subwf	main@i,w
   831     0454                     u2195:
   832     0454  1C03               	skipc
   833     0455  2C57               	goto	u2191
   834     0456  2C58               	goto	u2190
   835     0457                     u2191:
   836     0457  2C3E               	goto	l2001
   837     0458                     u2190:
   838     0458                     l2007:
   839                           
   840                           ;main.c: 188:         expr[0]='+';
   841     0458  302B               	movlw	43
   842     0459  1283               	bcf	3,5	;RP0=0, select bank0
   843     045A  1303               	bcf	3,6	;RP1=0, select bank0
   844     045B  00BE               	movwf	main@expr
   845     045C                     l2009:
   846                           
   847                           ;main.c: 190:         Get_Expression(expr+1);
   848     045C  303F               	movlw	(low ((main@expr| 0+1)))& (0+255)
   849     045D  120A  118A  259D  120A  118A  	fcall	_Get_Expression
   850     0462                     l2011:
   851                           
   852                           ;main.c: 191:         result=Solve_expr(expr);
   853     0462  303E               	movlw	(low (main@expr| 0))& (0+255)
   854     0463  120A  118A  2112  120A  118A  	fcall	_Solve_expr
   855     0468  1283               	bcf	3,5	;RP0=0, select bank0
   856     0469  1303               	bcf	3,6	;RP1=0, select bank0
   857     046A  083A               	movf	?_Solve_expr+1,w
   858     046B  00D1               	movwf	main@result+1
   859     046C  0839               	movf	?_Solve_expr,w
   860     046D  00D0               	movwf	main@result
   861     046E                     l2013:
   862                           
   863                           ;main.c: 192:         Print_Result(result);
   864     046E  0851               	movf	main@result+1,w
   865     046F  00AE               	movwf	Print_Result@result+1
   866     0470  0850               	movf	main@result,w
   867     0471  00AD               	movwf	Print_Result@result
   868     0472  120A  118A  2271  120A  118A  	fcall	_Print_Result
   869     0477                     l2015:	
   870                           ;main.c: 193:         while(keypad_get_key()=='\0');
   871                           
   872     0477  120A  118A  264A  120A  118A  	fcall	_keypad_get_key
   873     047C  3A00               	xorlw	0
   874     047D  1903               	skipnz
   875     047E  2C80               	goto	u2201
   876     047F  2C81               	goto	u2200
   877     0480                     u2201:
   878     0480  2C77               	goto	l2015
   879     0481                     u2200:
   880     0481  2C3A               	goto	l1995
   881     0482  120A  118A  2800   	ljmp	start
   882     0485                     __end_of_main:
   883                           
   884                           	psect	text1
   885     03AB                     __ptext1:	
   886 ;; *************** function _lcd_init *****************
   887 ;; Defined at:
   888 ;;		line 54 in file "lcd.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0, pclath, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0
   904 ;;      Temps:          2       0       0       0       0
   905 ;;      Totals:         2       0       0       0       0
   906 ;;Total ram usage:        2 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; Hardware stack levels required when called: 2
   909 ;; This function calls:
   910 ;;		_LCD_SEND_4BIT_CMD
   911 ;;		_SET_LCD_DATA_PINS
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917     03AB                     _lcd_init:	
   918                           ;psect for function _lcd_init
   919                           
   920     03AB                     l1959:	
   921                           ;incstack = 0
   922                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   923                           
   924                           
   925                           ;lcd.c: 57:   TRISD0 = 0;
   926     03AB  1683               	bsf	3,5	;RP0=1, select bank1
   927     03AC  1303               	bcf	3,6	;RP1=0, select bank1
   928     03AD  1008               	bcf	8,0	;volatile
   929                           
   930                           ;lcd.c: 58:   TRISD1 = 0;
   931     03AE  1088               	bcf	8,1	;volatile
   932                           
   933                           ;lcd.c: 59:   TRISD2 = 0;
   934     03AF  1108               	bcf	8,2	;volatile
   935                           
   936                           ;lcd.c: 60:   TRISD3 = 0;
   937     03B0  1188               	bcf	8,3	;volatile
   938                           
   939                           ;lcd.c: 61:   TRISD4 = 0;
   940     03B1  1208               	bcf	8,4	;volatile
   941                           
   942                           ;lcd.c: 62:   TRISD5 = 0;
   943     03B2  1288               	bcf	8,5	;volatile
   944     03B3                     l1961:
   945                           
   946                           ;lcd.c: 64:   SET_LCD_DATA_PINS(0x00);
   947     03B3  3000               	movlw	0
   948     03B4  120A  118A  20CB  120A  118A  	fcall	_SET_LCD_DATA_PINS
   949     03B9                     l1963:
   950                           
   951                           ;lcd.c: 65:   _delay((unsigned long)((30)*((8000000)/4000.0)));
   952     03B9  304E               	movlw	78
   953     03BA  00F5               	movwf	??_lcd_init+1
   954     03BB  30EB               	movlw	235
   955     03BC  00F4               	movwf	??_lcd_init
   956     03BD                     u2237:
   957     03BD  0BF4               	decfsz	??_lcd_init,f
   958     03BE  2BBD               	goto	u2237
   959     03BF  0BF5               	decfsz	??_lcd_init+1,f
   960     03C0  2BBD               	goto	u2237
   961     03C1                     l1965:
   962                           
   963                           ;lcd.c: 66:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
   964     03C1  3005               	movlw	5
   965     03C2  00F5               	movwf	??_lcd_init+1
   966     03C3  30AB               	movlw	171
   967     03C4  00F4               	movwf	??_lcd_init
   968     03C5                     u2247:
   969     03C5  0BF4               	decfsz	??_lcd_init,f
   970     03C6  2BC5               	goto	u2247
   971     03C7  0BF5               	decfsz	??_lcd_init+1,f
   972     03C8  2BC5               	goto	u2247
   973     03C9  2BCA               	nop2
   974                           
   975                           ;lcd.c: 67:    LCD_SEND_4BIT_CMD(0x03);
   976     03CA  3003               	movlw	3
   977     03CB  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
   978     03D0                     l1967:
   979                           
   980                           ;lcd.c: 68:   _delay((unsigned long)((5)*((8000000)/4000.0)));
   981     03D0  300D               	movlw	13
   982     03D1  00F5               	movwf	??_lcd_init+1
   983     03D2  30FB               	movlw	251
   984     03D3  00F4               	movwf	??_lcd_init
   985     03D4                     u2257:
   986     03D4  0BF4               	decfsz	??_lcd_init,f
   987     03D5  2BD4               	goto	u2257
   988     03D6  0BF5               	decfsz	??_lcd_init+1,f
   989     03D7  2BD4               	goto	u2257
   990     03D8  2BD9               	nop2
   991     03D9                     l1969:
   992                           
   993                           ;lcd.c: 69:    LCD_SEND_4BIT_CMD(0x03);
   994     03D9  3003               	movlw	3
   995     03DA  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
   996                           
   997                           ;lcd.c: 70:   _delay((unsigned long)((150)*((8000000)/4000000.0)));
   998     03DF  3063               	movlw	99
   999     03E0  00F4               	movwf	??_lcd_init
  1000     03E1                     u2267:
  1001     03E1  0BF4               	decfsz	??_lcd_init,f
  1002     03E2  2BE1               	goto	u2267
  1003     03E3  2BE4               	nop2
  1004     03E4                     l1971:
  1005                           
  1006                           ;lcd.c: 71:    LCD_SEND_4BIT_CMD(0x03);
  1007     03E4  3003               	movlw	3
  1008     03E5  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1009     03EA                     l1973:
  1010                           
  1011                           ;lcd.c: 72:    LCD_SEND_4BIT_CMD(0x02);
  1012     03EA  3002               	movlw	2
  1013     03EB  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1014     03F0                     l1975:
  1015                           
  1016                           ;lcd.c: 73:    LCD_SEND_4BIT_CMD(0x02);
  1017     03F0  3002               	movlw	2
  1018     03F1  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1019     03F6                     l1977:
  1020                           
  1021                           ;lcd.c: 74:    LCD_SEND_4BIT_CMD(0x08);
  1022     03F6  3008               	movlw	8
  1023     03F7  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1024     03FC                     l1979:
  1025                           
  1026                           ;lcd.c: 75:    LCD_SEND_4BIT_CMD(0x00);
  1027     03FC  3000               	movlw	0
  1028     03FD  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1029     0402                     l1981:
  1030                           
  1031                           ;lcd.c: 76:    LCD_SEND_4BIT_CMD(0x0C);
  1032     0402  300C               	movlw	12
  1033     0403  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1034     0408                     l1983:
  1035                           
  1036                           ;lcd.c: 77:    LCD_SEND_4BIT_CMD(0x00);
  1037     0408  3000               	movlw	0
  1038     0409  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1039     040E                     l1985:
  1040                           
  1041                           ;lcd.c: 78:    LCD_SEND_4BIT_CMD(0x06);
  1042     040E  3006               	movlw	6
  1043     040F  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  1044     0414                     l245:
  1045     0414  0008               	return
  1046     0415                     __end_of_lcd_init:
  1047                           
  1048                           	psect	text2
  1049     007B                     __ptext2:	
  1050 ;; *************** function _keypad_init *****************
  1051 ;; Defined at:
  1052 ;;		line 3 in file "keypad.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0
  1069 ;;      Totals:         0       0       0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079     007B                     _keypad_init:	
  1080                           ;psect for function _keypad_init
  1081                           
  1082     007B                     l1987:	
  1083                           ;incstack = 0
  1084                           ; Regs used in _keypad_init: [wreg+status,2]
  1085                           
  1086                           
  1087                           ;keypad.c: 4:         TRISB = 0xF0;
  1088     007B  30F0               	movlw	240
  1089     007C  1683               	bsf	3,5	;RP0=1, select bank1
  1090     007D  1303               	bcf	3,6	;RP1=0, select bank1
  1091     007E  0086               	movwf	6	;volatile
  1092                           
  1093                           ;keypad.c: 5:         PORTB = 0xFF;
  1094     007F  30FF               	movlw	255
  1095     0080  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0081  1303               	bcf	3,6	;RP1=0, select bank0
  1097     0082  0086               	movwf	6	;volatile
  1098     0083                     l1989:
  1099                           
  1100                           ;keypad.c: 7:         (OPTION_REG = OPTION_REG & (~(1<<7)));
  1101     0083  1683               	bsf	3,5	;RP0=1, select bank1
  1102     0084  1303               	bcf	3,6	;RP1=0, select bank1
  1103     0085  0801               	movf	1,w	;volatile
  1104     0086  397F               	andlw	127
  1105     0087  0081               	movwf	1	;volatile
  1106     0088                     l120:
  1107     0088  0008               	return
  1108     0089                     __end_of_keypad_init:
  1109                           
  1110                           	psect	text3
  1111     0112                     __ptext3:	
  1112 ;; *************** function _Solve_expr *****************
  1113 ;; Defined at:
  1114 ;;		line 141 in file "main.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  expr            1    wreg     PTR unsigned char 
  1117 ;;		 -> main@expr(18), 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  expr            1   29[BANK0 ] PTR unsigned char 
  1120 ;;		 -> main@expr(18), 
  1121 ;;  result          2   27[BANK0 ] int 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  2   25[BANK0 ] int 
  1124 ;; Registers used:
  1125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       2       0       0       0
  1132 ;;      Locals:         0       3       0       0       0
  1133 ;;      Temps:          0       0       0       0       0
  1134 ;;      Totals:         0       5       0       0       0
  1135 ;;Total ram usage:        5 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 4
  1138 ;; This function calls:
  1139 ;;		_Solve_Add_Sub
  1140 ;;		_Solve_Mul_Div
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146     0112                     _Solve_expr:	
  1147                           ;psect for function _Solve_expr
  1148                           
  1149                           
  1150                           ;incstack = 0
  1151                           ; Regs used in _Solve_expr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1152                           ;Solve_expr@expr stored from wreg
  1153     0112  1283               	bcf	3,5	;RP0=0, select bank0
  1154     0113  1303               	bcf	3,6	;RP1=0, select bank0
  1155     0114  00BD               	movwf	Solve_expr@expr
  1156     0115                     l1929:
  1157                           
  1158                           ;main.c: 141: int Solve_expr(char *expr);main.c: 142: {;main.c: 143:     int result=0;
  1159     0115  01BB               	clrf	Solve_expr@result
  1160     0116  01BC               	clrf	Solve_expr@result+1
  1161     0117                     l1931:
  1162                           
  1163                           ;main.c: 144:     result+=Solve_Mul_Div(expr);
  1164     0117  083D               	movf	Solve_expr@expr,w
  1165     0118  120A  118A  2702  120A  118A  	fcall	_Solve_Mul_Div
  1166     011D  1283               	bcf	3,5	;RP0=0, select bank0
  1167     011E  1303               	bcf	3,6	;RP1=0, select bank0
  1168     011F  082D               	movf	?_Solve_Mul_Div,w
  1169     0120  07BB               	addwf	Solve_expr@result,f
  1170     0121  1803               	skipnc
  1171     0122  0ABC               	incf	Solve_expr@result+1,f
  1172     0123  082E               	movf	?_Solve_Mul_Div+1,w
  1173     0124  07BC               	addwf	Solve_expr@result+1,f
  1174     0125                     l1933:
  1175                           
  1176                           ;main.c: 145:     result+=Solve_Add_Sub(expr);
  1177     0125  083D               	movf	Solve_expr@expr,w
  1178     0126  120A  118A  24FB  120A  118A  	fcall	_Solve_Add_Sub
  1179     012B  1283               	bcf	3,5	;RP0=0, select bank0
  1180     012C  1303               	bcf	3,6	;RP1=0, select bank0
  1181     012D  0820               	movf	?_Solve_Add_Sub,w
  1182     012E  07BB               	addwf	Solve_expr@result,f
  1183     012F  1803               	skipnc
  1184     0130  0ABC               	incf	Solve_expr@result+1,f
  1185     0131  0821               	movf	?_Solve_Add_Sub+1,w
  1186     0132  07BC               	addwf	Solve_expr@result+1,f
  1187     0133                     l1935:
  1188                           
  1189                           ;main.c: 146:     return result;
  1190     0133  083C               	movf	Solve_expr@result+1,w
  1191     0134  00BA               	movwf	?_Solve_expr+1
  1192     0135  083B               	movf	Solve_expr@result,w
  1193     0136  00B9               	movwf	?_Solve_expr
  1194     0137                     l88:
  1195     0137  0008               	return
  1196     0138                     __end_of_Solve_expr:
  1197                           
  1198                           	psect	text4
  1199     0702                     __ptext4:	
  1200 ;; *************** function _Solve_Mul_Div *****************
  1201 ;; Defined at:
  1202 ;;		line 85 in file "main.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  expr            1    wreg     PTR unsigned char 
  1205 ;;		 -> main@expr(18), 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  expr            1   22[BANK0 ] PTR unsigned char 
  1208 ;;		 -> main@expr(18), 
  1209 ;;  i               2   23[BANK0 ] int 
  1210 ;;  result          2   20[BANK0 ] int 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  2   13[BANK0 ] int 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       2       0       0       0
  1221 ;;      Locals:         0       9       0       0       0
  1222 ;;      Temps:          0       1       0       0       0
  1223 ;;      Totals:         0      12       0       0       0
  1224 ;;Total ram usage:       12 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 3
  1227 ;; This function calls:
  1228 ;;		_Delete_Pre_Num
  1229 ;;		_Get_Pre_Num
  1230 ;;		___awdiv
  1231 ;;		___wmul
  1232 ;;		_atoi
  1233 ;; This function is called by:
  1234 ;;		_Solve_expr
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238     0702                     _Solve_Mul_Div:	
  1239                           ;psect for function _Solve_Mul_Div
  1240                           
  1241                           
  1242                           ;incstack = 0
  1243                           ; Regs used in _Solve_Mul_Div: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1244                           ;Solve_Mul_Div@expr stored from wreg
  1245     0702  1283               	bcf	3,5	;RP0=0, select bank0
  1246     0703  1303               	bcf	3,6	;RP1=0, select bank0
  1247     0704  00B6               	movwf	Solve_Mul_Div@expr
  1248     0705                     l1781:
  1249                           
  1250                           ;main.c: 85: int Solve_Mul_Div(char *expr);main.c: 86: {;main.c: 87:     int result=0;
  1251     0705  01B4               	clrf	Solve_Mul_Div@result
  1252     0706  01B5               	clrf	Solve_Mul_Div@result+1
  1253                           
  1254                           ;main.c: 88:     int i=0;
  1255     0707  01B7               	clrf	Solve_Mul_Div@i
  1256     0708  01B8               	clrf	Solve_Mul_Div@i+1
  1257                           
  1258                           ;main.c: 89:     while(i<17)
  1259     0709  2FD7               	goto	l1809
  1260     070A                     l1783:
  1261                           
  1262                           ;main.c: 90:     {;main.c: 91:         if(expr[i]=='*' || expr[i]=='/')
  1263     070A  1283               	bcf	3,5	;RP0=0, select bank0
  1264     070B  1303               	bcf	3,6	;RP1=0, select bank0
  1265     070C  0837               	movf	Solve_Mul_Div@i,w
  1266     070D  0736               	addwf	Solve_Mul_Div@expr,w
  1267     070E  00AF               	movwf	??_Solve_Mul_Div
  1268     070F  082F               	movf	??_Solve_Mul_Div,w
  1269     0710  0084               	movwf	4
  1270     0711  302A               	movlw	42
  1271     0712  1383               	bcf	3,7	;select IRP bank0
  1272     0713  0600               	xorwf	0,w
  1273     0714  1903               	btfsc	3,2
  1274     0715  2F17               	goto	u1861
  1275     0716  2F18               	goto	u1860
  1276     0717                     u1861:
  1277     0717  2F23               	goto	l1787
  1278     0718                     u1860:
  1279     0718                     l1785:
  1280     0718  0837               	movf	Solve_Mul_Div@i,w
  1281     0719  0736               	addwf	Solve_Mul_Div@expr,w
  1282     071A  00AF               	movwf	??_Solve_Mul_Div
  1283     071B  082F               	movf	??_Solve_Mul_Div,w
  1284     071C  0084               	movwf	4
  1285     071D  302F               	movlw	47
  1286     071E  0600               	xorwf	0,w
  1287     071F  1D03               	btfss	3,2
  1288     0720  2F22               	goto	u1871
  1289     0721  2F23               	goto	u1870
  1290     0722                     u1871:
  1291     0722  2FD1               	goto	l1807
  1292     0723                     u1870:
  1293     0723                     l1787:
  1294                           
  1295                           ;main.c: 92:         {;main.c: 93:             i++;
  1296     0723  3001               	movlw	1
  1297     0724  07B7               	addwf	Solve_Mul_Div@i,f
  1298     0725  1803               	skipnc
  1299     0726  0AB8               	incf	Solve_Mul_Div@i+1,f
  1300     0727  3000               	movlw	0
  1301     0728  07B8               	addwf	Solve_Mul_Div@i+1,f
  1302     0729                     l1789:
  1303                           
  1304                           ;main.c: 94:             if(expr[i-1]=='*')
  1305     0729  0837               	movf	Solve_Mul_Div@i,w
  1306     072A  0736               	addwf	Solve_Mul_Div@expr,w
  1307     072B  00AF               	movwf	??_Solve_Mul_Div
  1308     072C  082F               	movf	??_Solve_Mul_Div,w
  1309     072D  3EFF               	addlw	-1
  1310     072E  0084               	movwf	4
  1311     072F  302A               	movlw	42
  1312     0730  0600               	xorwf	0,w
  1313     0731  1D03               	btfss	3,2
  1314     0732  2F34               	goto	u1881
  1315     0733  2F35               	goto	u1880
  1316     0734                     u1881:
  1317     0734  2F67               	goto	l1795
  1318     0735                     u1880:
  1319     0735                     l1791:
  1320                           
  1321                           ;main.c: 95:                 result+=(atoi(expr+i)*Get_Pre_Num(expr,i-2));
  1322     0735  0837               	movf	Solve_Mul_Div@i,w
  1323     0736  0736               	addwf	Solve_Mul_Div@expr,w
  1324     0737  120A  118A  2485  120A  118A  	fcall	_atoi
  1325     073C  0877               	movf	?_atoi+1,w
  1326     073D  1283               	bcf	3,5	;RP0=0, select bank0
  1327     073E  1303               	bcf	3,6	;RP1=0, select bank0
  1328     073F  00B1               	movwf	_Solve_Mul_Div$793+1
  1329     0740  0876               	movf	?_atoi,w
  1330     0741  00B0               	movwf	_Solve_Mul_Div$793
  1331                           
  1332                           ;main.c: 95:                 result+=(atoi(expr+i)*Get_Pre_Num(expr,i-2));
  1333     0742  0837               	movf	Solve_Mul_Div@i,w
  1334     0743  3EFE               	addlw	254
  1335     0744  00A0               	movwf	Get_Pre_Num@i
  1336     0745  0836               	movf	Solve_Mul_Div@expr,w
  1337     0746  120A  118A  2342  120A  118A  	fcall	_Get_Pre_Num
  1338     074B  1283               	bcf	3,5	;RP0=0, select bank0
  1339     074C  1303               	bcf	3,6	;RP1=0, select bank0
  1340     074D  0821               	movf	?_Get_Pre_Num+1,w
  1341     074E  00B3               	movwf	_Solve_Mul_Div$794+1
  1342     074F  0820               	movf	?_Get_Pre_Num,w
  1343     0750  00B2               	movwf	_Solve_Mul_Div$794
  1344     0751                     l1793:
  1345                           
  1346                           ;main.c: 95:                 result+=(atoi(expr+i)*Get_Pre_Num(expr,i-2));
  1347     0751  0831               	movf	_Solve_Mul_Div$793+1,w
  1348     0752  00F1               	movwf	___wmul@multiplier+1
  1349     0753  0830               	movf	_Solve_Mul_Div$793,w
  1350     0754  00F0               	movwf	___wmul@multiplier
  1351     0755  0833               	movf	_Solve_Mul_Div$794+1,w
  1352     0756  00F3               	movwf	___wmul@multiplicand+1
  1353     0757  0832               	movf	_Solve_Mul_Div$794,w
  1354     0758  00F2               	movwf	___wmul@multiplicand
  1355     0759  120A  118A  20ED  120A  118A  	fcall	___wmul
  1356     075E  0870               	movf	?___wmul,w
  1357     075F  1283               	bcf	3,5	;RP0=0, select bank0
  1358     0760  1303               	bcf	3,6	;RP1=0, select bank0
  1359     0761  07B4               	addwf	Solve_Mul_Div@result,f
  1360     0762  1803               	skipnc
  1361     0763  0AB5               	incf	Solve_Mul_Div@result+1,f
  1362     0764  0871               	movf	?___wmul+1,w
  1363     0765  07B5               	addwf	Solve_Mul_Div@result+1,f
  1364     0766  2F90               	goto	l62
  1365     0767                     l1795:
  1366                           
  1367                           ;main.c: 97:                 result+=(atoi(expr+i)/Get_Pre_Num(expr,i-2));
  1368     0767  0837               	movf	Solve_Mul_Div@i,w
  1369     0768  3EFE               	addlw	254
  1370     0769  00A0               	movwf	Get_Pre_Num@i
  1371     076A  0836               	movf	Solve_Mul_Div@expr,w
  1372     076B  120A  118A  2342  120A  118A  	fcall	_Get_Pre_Num
  1373     0770  1283               	bcf	3,5	;RP0=0, select bank0
  1374     0771  1303               	bcf	3,6	;RP1=0, select bank0
  1375     0772  0821               	movf	?_Get_Pre_Num+1,w
  1376     0773  00A6               	movwf	___awdiv@divisor+1
  1377     0774  0820               	movf	?_Get_Pre_Num,w
  1378     0775  00A5               	movwf	___awdiv@divisor
  1379     0776  0837               	movf	Solve_Mul_Div@i,w
  1380     0777  0736               	addwf	Solve_Mul_Div@expr,w
  1381     0778  120A  118A  2485  120A  118A  	fcall	_atoi
  1382     077D  0877               	movf	?_atoi+1,w
  1383     077E  1283               	bcf	3,5	;RP0=0, select bank0
  1384     077F  1303               	bcf	3,6	;RP1=0, select bank0
  1385     0780  00A8               	movwf	___awdiv@dividend+1
  1386     0781  0876               	movf	?_atoi,w
  1387     0782  00A7               	movwf	___awdiv@dividend
  1388     0783  120A  118A  22D9  120A  118A  	fcall	___awdiv
  1389     0788  1283               	bcf	3,5	;RP0=0, select bank0
  1390     0789  1303               	bcf	3,6	;RP1=0, select bank0
  1391     078A  0825               	movf	?___awdiv,w
  1392     078B  07B4               	addwf	Solve_Mul_Div@result,f
  1393     078C  1803               	skipnc
  1394     078D  0AB5               	incf	Solve_Mul_Div@result+1,f
  1395     078E  0826               	movf	?___awdiv+1,w
  1396     078F  07B5               	addwf	Solve_Mul_Div@result+1,f
  1397     0790                     l62:
  1398                           
  1399                           ;main.c: 99:             Delete_Pre_Num(expr,i-2);
  1400     0790  0837               	movf	Solve_Mul_Div@i,w
  1401     0791  3EFE               	addlw	254
  1402     0792  00F0               	movwf	Delete_Pre_Num@i
  1403     0793  0836               	movf	Solve_Mul_Div@expr,w
  1404     0794  120A  118A  217D  120A  118A  	fcall	_Delete_Pre_Num
  1405                           
  1406                           ;main.c: 101:             while( (expr[i]>='0' && expr[i]<='9') && i<17)
  1407     0799  2FA2               	goto	l1799
  1408     079A                     l1797:
  1409                           
  1410                           ;main.c: 102:             {;main.c: 103:                 i++;
  1411     079A  3001               	movlw	1
  1412     079B  1283               	bcf	3,5	;RP0=0, select bank0
  1413     079C  1303               	bcf	3,6	;RP1=0, select bank0
  1414     079D  07B7               	addwf	Solve_Mul_Div@i,f
  1415     079E  1803               	skipnc
  1416     079F  0AB8               	incf	Solve_Mul_Div@i+1,f
  1417     07A0  3000               	movlw	0
  1418     07A1  07B8               	addwf	Solve_Mul_Div@i+1,f
  1419     07A2                     l1799:
  1420                           
  1421                           ;main.c: 101:             while( (expr[i]>='0' && expr[i]<='9') && i<17)
  1422     07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1423     07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1424     07A4  0837               	movf	Solve_Mul_Div@i,w
  1425     07A5  0736               	addwf	Solve_Mul_Div@expr,w
  1426     07A6  00AF               	movwf	??_Solve_Mul_Div
  1427     07A7  082F               	movf	??_Solve_Mul_Div,w
  1428     07A8  0084               	movwf	4
  1429     07A9  3030               	movlw	48
  1430     07AA  1383               	bcf	3,7	;select IRP bank0
  1431     07AB  0200               	subwf	0,w
  1432     07AC  1C03               	skipc
  1433     07AD  2FAF               	goto	u1891
  1434     07AE  2FB0               	goto	u1890
  1435     07AF                     u1891:
  1436     07AF  2FC8               	goto	l1805
  1437     07B0                     u1890:
  1438     07B0                     l1801:
  1439     07B0  0837               	movf	Solve_Mul_Div@i,w
  1440     07B1  0736               	addwf	Solve_Mul_Div@expr,w
  1441     07B2  00AF               	movwf	??_Solve_Mul_Div
  1442     07B3  082F               	movf	??_Solve_Mul_Div,w
  1443     07B4  0084               	movwf	4
  1444     07B5  303A               	movlw	58
  1445     07B6  0200               	subwf	0,w
  1446     07B7  1803               	skipnc
  1447     07B8  2FBA               	goto	u1901
  1448     07B9  2FBB               	goto	u1900
  1449     07BA                     u1901:
  1450     07BA  2FC8               	goto	l1805
  1451     07BB                     u1900:
  1452     07BB                     l1803:
  1453     07BB  0838               	movf	Solve_Mul_Div@i+1,w
  1454     07BC  3A80               	xorlw	128
  1455     07BD  00FF               	movwf	btemp+1
  1456     07BE  3080               	movlw	128
  1457     07BF  027F               	subwf	btemp+1,w
  1458     07C0  1D03               	skipz
  1459     07C1  2FC4               	goto	u1915
  1460     07C2  3011               	movlw	17
  1461     07C3  0237               	subwf	Solve_Mul_Div@i,w
  1462     07C4                     u1915:
  1463     07C4  1C03               	skipc
  1464     07C5  2FC7               	goto	u1911
  1465     07C6  2FC8               	goto	u1910
  1466     07C7                     u1911:
  1467     07C7  2F9A               	goto	l1797
  1468     07C8                     u1910:
  1469     07C8                     l1805:
  1470                           
  1471                           ;main.c: 105:             i--;
  1472     07C8  30FF               	movlw	255
  1473     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1474     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1475     07CB  07B7               	addwf	Solve_Mul_Div@i,f
  1476     07CC  1803               	skipnc
  1477     07CD  0AB8               	incf	Solve_Mul_Div@i+1,f
  1478     07CE  30FF               	movlw	255
  1479     07CF  07B8               	addwf	Solve_Mul_Div@i+1,f
  1480                           
  1481                           ;main.c: 106:             continue;
  1482     07D0  2FD7               	goto	l1809
  1483     07D1                     l1807:
  1484                           
  1485                           ;main.c: 108:         i++;
  1486     07D1  3001               	movlw	1
  1487     07D2  07B7               	addwf	Solve_Mul_Div@i,f
  1488     07D3  1803               	skipnc
  1489     07D4  0AB8               	incf	Solve_Mul_Div@i+1,f
  1490     07D5  3000               	movlw	0
  1491     07D6  07B8               	addwf	Solve_Mul_Div@i+1,f
  1492     07D7                     l1809:
  1493                           
  1494                           ;main.c: 89:     while(i<17)
  1495     07D7  0838               	movf	Solve_Mul_Div@i+1,w
  1496     07D8  3A80               	xorlw	128
  1497     07D9  00FF               	movwf	btemp+1
  1498     07DA  3080               	movlw	128
  1499     07DB  027F               	subwf	btemp+1,w
  1500     07DC  1D03               	skipz
  1501     07DD  2FE0               	goto	u1925
  1502     07DE  3011               	movlw	17
  1503     07DF  0237               	subwf	Solve_Mul_Div@i,w
  1504     07E0                     u1925:
  1505     07E0  1C03               	skipc
  1506     07E1  2FE3               	goto	u1921
  1507     07E2  2FE4               	goto	u1920
  1508     07E3                     u1921:
  1509     07E3  2F0A               	goto	l1783
  1510     07E4                     u1920:
  1511     07E4                     l1811:
  1512                           
  1513                           ;main.c: 110:     return result;
  1514     07E4  1283               	bcf	3,5	;RP0=0, select bank0
  1515     07E5  1303               	bcf	3,6	;RP1=0, select bank0
  1516     07E6  0835               	movf	Solve_Mul_Div@result+1,w
  1517     07E7  00AE               	movwf	?_Solve_Mul_Div+1
  1518     07E8  0834               	movf	Solve_Mul_Div@result,w
  1519     07E9  00AD               	movwf	?_Solve_Mul_Div
  1520     07EA                     l69:
  1521     07EA  0008               	return
  1522     07EB                     __end_of_Solve_Mul_Div:
  1523                           
  1524                           	psect	text5
  1525     0342                     __ptext5:	
  1526 ;; *************** function _Get_Pre_Num *****************
  1527 ;; Defined at:
  1528 ;;		line 69 in file "main.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  expr            1    wreg     PTR unsigned char 
  1531 ;;		 -> main@expr(18), 
  1532 ;;  i               1    0[BANK0 ] unsigned char 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  expr            1    4[BANK0 ] PTR unsigned char 
  1535 ;;		 -> main@expr(18), 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  2    0[BANK0 ] int 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       2       0       0       0
  1546 ;;      Locals:         0       1       0       0       0
  1547 ;;      Temps:          0       2       0       0       0
  1548 ;;      Totals:         0       5       0       0       0
  1549 ;;Total ram usage:        5 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; Hardware stack levels required when called: 2
  1552 ;; This function calls:
  1553 ;;		_atoi
  1554 ;; This function is called by:
  1555 ;;		_Solve_Mul_Div
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559     0342                     _Get_Pre_Num:	
  1560                           ;psect for function _Get_Pre_Num
  1561                           
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in _Get_Pre_Num: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1565                           ;Get_Pre_Num@expr stored from wreg
  1566     0342  1283               	bcf	3,5	;RP0=0, select bank0
  1567     0343  1303               	bcf	3,6	;RP1=0, select bank0
  1568     0344  00A4               	movwf	Get_Pre_Num@expr
  1569     0345                     l1537:
  1570                           
  1571                           ;main.c: 69: int Get_Pre_Num(char *expr,char i);main.c: 70: {;main.c: 71:     while(i!=0
      +                           && expr[i]!='+' && expr[i]!='-' && expr[i]!='*' && expr[i]!='/')
  1572     0345  2B48               	goto	l46
  1573     0346                     l1539:
  1574                           
  1575                           ;main.c: 72:     {;main.c: 73:         i--;
  1576     0346  3001               	movlw	1
  1577     0347  02A0               	subwf	Get_Pre_Num@i,f
  1578     0348                     l46:	
  1579                           ;main.c: 74:     }
  1580                           
  1581                           
  1582                           ;main.c: 71:     while(i!=0 && expr[i]!='+' && expr[i]!='-' && expr[i]!='*' && expr[i]!=
      +                          '/')
  1583     0348  0820               	movf	Get_Pre_Num@i,w
  1584     0349  1903               	btfsc	3,2
  1585     034A  2B4C               	goto	u1361
  1586     034B  2B4D               	goto	u1360
  1587     034C                     u1361:
  1588     034C  2B7A               	goto	l1549
  1589     034D                     u1360:
  1590     034D                     l1541:
  1591     034D  0820               	movf	Get_Pre_Num@i,w
  1592     034E  0724               	addwf	Get_Pre_Num@expr,w
  1593     034F  00A2               	movwf	??_Get_Pre_Num
  1594     0350  0822               	movf	??_Get_Pre_Num,w
  1595     0351  0084               	movwf	4
  1596     0352  302B               	movlw	43
  1597     0353  1383               	bcf	3,7	;select IRP bank0
  1598     0354  0600               	xorwf	0,w
  1599     0355  1903               	btfsc	3,2
  1600     0356  2B58               	goto	u1371
  1601     0357  2B59               	goto	u1370
  1602     0358                     u1371:
  1603     0358  2B7A               	goto	l1549
  1604     0359                     u1370:
  1605     0359                     l1543:
  1606     0359  0820               	movf	Get_Pre_Num@i,w
  1607     035A  0724               	addwf	Get_Pre_Num@expr,w
  1608     035B  00A2               	movwf	??_Get_Pre_Num
  1609     035C  0822               	movf	??_Get_Pre_Num,w
  1610     035D  0084               	movwf	4
  1611     035E  302D               	movlw	45
  1612     035F  0600               	xorwf	0,w
  1613     0360  1903               	btfsc	3,2
  1614     0361  2B63               	goto	u1381
  1615     0362  2B64               	goto	u1380
  1616     0363                     u1381:
  1617     0363  2B7A               	goto	l1549
  1618     0364                     u1380:
  1619     0364                     l1545:
  1620     0364  0820               	movf	Get_Pre_Num@i,w
  1621     0365  0724               	addwf	Get_Pre_Num@expr,w
  1622     0366  00A2               	movwf	??_Get_Pre_Num
  1623     0367  0822               	movf	??_Get_Pre_Num,w
  1624     0368  0084               	movwf	4
  1625     0369  302A               	movlw	42
  1626     036A  0600               	xorwf	0,w
  1627     036B  1903               	btfsc	3,2
  1628     036C  2B6E               	goto	u1391
  1629     036D  2B6F               	goto	u1390
  1630     036E                     u1391:
  1631     036E  2B7A               	goto	l1549
  1632     036F                     u1390:
  1633     036F                     l1547:
  1634     036F  0820               	movf	Get_Pre_Num@i,w
  1635     0370  0724               	addwf	Get_Pre_Num@expr,w
  1636     0371  00A2               	movwf	??_Get_Pre_Num
  1637     0372  0822               	movf	??_Get_Pre_Num,w
  1638     0373  0084               	movwf	4
  1639     0374  302F               	movlw	47
  1640     0375  0600               	xorwf	0,w
  1641     0376  1D03               	btfss	3,2
  1642     0377  2B79               	goto	u1401
  1643     0378  2B7A               	goto	u1400
  1644     0379                     u1401:
  1645     0379  2B46               	goto	l1539
  1646     037A                     u1400:
  1647     037A                     l1549:
  1648                           
  1649                           ;main.c: 75:     if(expr[i]=='-')
  1650     037A  0820               	movf	Get_Pre_Num@i,w
  1651     037B  0724               	addwf	Get_Pre_Num@expr,w
  1652     037C  00A2               	movwf	??_Get_Pre_Num
  1653     037D  0822               	movf	??_Get_Pre_Num,w
  1654     037E  0084               	movwf	4
  1655     037F  302D               	movlw	45
  1656     0380  1383               	bcf	3,7	;select IRP bank0
  1657     0381  0600               	xorwf	0,w
  1658     0382  1D03               	btfss	3,2
  1659     0383  2B85               	goto	u1411
  1660     0384  2B86               	goto	u1410
  1661     0385                     u1411:
  1662     0385  2B9C               	goto	l1557
  1663     0386                     u1410:
  1664     0386                     l1551:
  1665                           
  1666                           ;main.c: 76:     {;main.c: 77:         return -1*atoi(expr+i+1);
  1667     0386  0820               	movf	Get_Pre_Num@i,w
  1668     0387  0724               	addwf	Get_Pre_Num@expr,w
  1669     0388  3E01               	addlw	1
  1670     0389  120A  118A  2485  120A  118A  	fcall	_atoi
  1671     038E  0976               	comf	?_atoi,w
  1672     038F  1283               	bcf	3,5	;RP0=0, select bank0
  1673     0390  1303               	bcf	3,6	;RP1=0, select bank0
  1674     0391  00A2               	movwf	??_Get_Pre_Num
  1675     0392  0977               	comf	?_atoi+1,w
  1676     0393  00A3               	movwf	??_Get_Pre_Num+1
  1677     0394  0AA2               	incf	??_Get_Pre_Num,f
  1678     0395  1903               	skipnz
  1679     0396  0AA3               	incf	??_Get_Pre_Num+1,f
  1680     0397  0822               	movf	??_Get_Pre_Num,w
  1681     0398  00A0               	movwf	?_Get_Pre_Num
  1682     0399  0823               	movf	??_Get_Pre_Num+1,w
  1683     039A  00A1               	movwf	?_Get_Pre_Num+1
  1684     039B  2BAA               	goto	l52
  1685     039C                     l1557:
  1686                           
  1687                           ;main.c: 80:     {;main.c: 81:         return atoi(expr+i+1);
  1688     039C  0820               	movf	Get_Pre_Num@i,w
  1689     039D  0724               	addwf	Get_Pre_Num@expr,w
  1690     039E  3E01               	addlw	1
  1691     039F  120A  118A  2485  120A  118A  	fcall	_atoi
  1692     03A4  0877               	movf	?_atoi+1,w
  1693     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1694     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1695     03A7  00A1               	movwf	?_Get_Pre_Num+1
  1696     03A8  0876               	movf	?_atoi,w
  1697     03A9  00A0               	movwf	?_Get_Pre_Num
  1698     03AA                     l52:
  1699     03AA  0008               	return
  1700     03AB                     __end_of_Get_Pre_Num:
  1701                           
  1702                           	psect	text6
  1703     017D                     __ptext6:	
  1704 ;; *************** function _Delete_Pre_Num *****************
  1705 ;; Defined at:
  1706 ;;		line 53 in file "main.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  expr            1    wreg     PTR unsigned char 
  1709 ;;		 -> main@expr(18), 
  1710 ;;  i               1    0[COMMON] unsigned char 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  expr            1    3[COMMON] PTR unsigned char 
  1713 ;;		 -> main@expr(18), 
  1714 ;;  j               1    2[COMMON] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1724 ;;      Params:         1       0       0       0       0
  1725 ;;      Locals:         2       0       0       0       0
  1726 ;;      Temps:          1       0       0       0       0
  1727 ;;      Totals:         4       0       0       0       0
  1728 ;;Total ram usage:        4 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_Solve_Mul_Div
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737     017D                     _Delete_Pre_Num:	
  1738                           ;psect for function _Delete_Pre_Num
  1739                           
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _Delete_Pre_Num: [wreg-fsr0h+status,2+status,0+btemp+1]
  1743                           ;Delete_Pre_Num@expr stored from wreg
  1744     017D  00F3               	movwf	Delete_Pre_Num@expr
  1745     017E                     l1519:
  1746                           
  1747                           ;main.c: 53: void Delete_Pre_Num(char *expr,char i);main.c: 54: {;main.c: 55:     char j
      +                          =i;
  1748     017E  0870               	movf	Delete_Pre_Num@i,w
  1749     017F  00F2               	movwf	Delete_Pre_Num@j
  1750                           
  1751                           ;main.c: 56:     while(i!=0 && expr[i]!='+' && expr[i]!='-' && expr[i]!='*' && expr[i]!=
      +                          '/')
  1752     0180  2983               	goto	l35
  1753     0181                     l1521:
  1754                           
  1755                           ;main.c: 57:     {;main.c: 58:         i--;
  1756     0181  3001               	movlw	1
  1757     0182  02F0               	subwf	Delete_Pre_Num@i,f
  1758     0183                     l35:	
  1759                           ;main.c: 59:     }
  1760                           
  1761                           
  1762                           ;main.c: 56:     while(i!=0 && expr[i]!='+' && expr[i]!='-' && expr[i]!='*' && expr[i]!=
      +                          '/')
  1763     0183  0870               	movf	Delete_Pre_Num@i,w
  1764     0184  1903               	btfsc	3,2
  1765     0185  2987               	goto	u1301
  1766     0186  2988               	goto	u1300
  1767     0187                     u1301:
  1768     0187  29C2               	goto	l1535
  1769     0188                     u1300:
  1770     0188                     l1523:
  1771     0188  0870               	movf	Delete_Pre_Num@i,w
  1772     0189  0773               	addwf	Delete_Pre_Num@expr,w
  1773     018A  00F1               	movwf	??_Delete_Pre_Num
  1774     018B  0871               	movf	??_Delete_Pre_Num,w
  1775     018C  0084               	movwf	4
  1776     018D  302B               	movlw	43
  1777     018E  1383               	bcf	3,7	;select IRP bank0
  1778     018F  0600               	xorwf	0,w
  1779     0190  1903               	btfsc	3,2
  1780     0191  2993               	goto	u1311
  1781     0192  2994               	goto	u1310
  1782     0193                     u1311:
  1783     0193  29C2               	goto	l1535
  1784     0194                     u1310:
  1785     0194                     l1525:
  1786     0194  0870               	movf	Delete_Pre_Num@i,w
  1787     0195  0773               	addwf	Delete_Pre_Num@expr,w
  1788     0196  00F1               	movwf	??_Delete_Pre_Num
  1789     0197  0871               	movf	??_Delete_Pre_Num,w
  1790     0198  0084               	movwf	4
  1791     0199  302D               	movlw	45
  1792     019A  0600               	xorwf	0,w
  1793     019B  1903               	btfsc	3,2
  1794     019C  299E               	goto	u1321
  1795     019D  299F               	goto	u1320
  1796     019E                     u1321:
  1797     019E  29C2               	goto	l1535
  1798     019F                     u1320:
  1799     019F                     l1527:
  1800     019F  0870               	movf	Delete_Pre_Num@i,w
  1801     01A0  0773               	addwf	Delete_Pre_Num@expr,w
  1802     01A1  00F1               	movwf	??_Delete_Pre_Num
  1803     01A2  0871               	movf	??_Delete_Pre_Num,w
  1804     01A3  0084               	movwf	4
  1805     01A4  302A               	movlw	42
  1806     01A5  0600               	xorwf	0,w
  1807     01A6  1903               	btfsc	3,2
  1808     01A7  29A9               	goto	u1331
  1809     01A8  29AA               	goto	u1330
  1810     01A9                     u1331:
  1811     01A9  29C2               	goto	l1535
  1812     01AA                     u1330:
  1813     01AA                     l1529:
  1814     01AA  0870               	movf	Delete_Pre_Num@i,w
  1815     01AB  0773               	addwf	Delete_Pre_Num@expr,w
  1816     01AC  00F1               	movwf	??_Delete_Pre_Num
  1817     01AD  0871               	movf	??_Delete_Pre_Num,w
  1818     01AE  0084               	movwf	4
  1819     01AF  302F               	movlw	47
  1820     01B0  0600               	xorwf	0,w
  1821     01B1  1D03               	btfss	3,2
  1822     01B2  29B4               	goto	u1341
  1823     01B3  29B5               	goto	u1340
  1824     01B4                     u1341:
  1825     01B4  2981               	goto	l1521
  1826     01B5                     u1340:
  1827     01B5  29C2               	goto	l1535
  1828     01B6                     l1531:
  1829                           
  1830                           ;main.c: 62:     {;main.c: 63:         expr[i]='r';
  1831     01B6  0870               	movf	Delete_Pre_Num@i,w
  1832     01B7  0773               	addwf	Delete_Pre_Num@expr,w
  1833     01B8  00F1               	movwf	??_Delete_Pre_Num
  1834     01B9  0871               	movf	??_Delete_Pre_Num,w
  1835     01BA  0084               	movwf	4
  1836     01BB  3072               	movlw	114
  1837     01BC  1383               	bcf	3,7	;select IRP bank0
  1838     01BD  0080               	movwf	0
  1839     01BE                     l1533:
  1840                           
  1841                           ;main.c: 64:         i++;
  1842     01BE  3001               	movlw	1
  1843     01BF  00FF               	movwf	btemp+1
  1844     01C0  087F               	movf	btemp+1,w
  1845     01C1  07F0               	addwf	Delete_Pre_Num@i,f
  1846     01C2                     l1535:
  1847                           
  1848                           ;main.c: 61:     while(i!=j)
  1849     01C2  0870               	movf	Delete_Pre_Num@i,w
  1850     01C3  0672               	xorwf	Delete_Pre_Num@j,w
  1851     01C4  1D03               	skipz
  1852     01C5  29C7               	goto	u1351
  1853     01C6  29C8               	goto	u1350
  1854     01C7                     u1351:
  1855     01C7  29B6               	goto	l1531
  1856     01C8                     u1350:
  1857     01C8                     l43:
  1858     01C8  0008               	return
  1859     01C9                     __end_of_Delete_Pre_Num:
  1860                           
  1861                           	psect	text7
  1862     04FB                     __ptext7:	
  1863 ;; *************** function _Solve_Add_Sub *****************
  1864 ;; Defined at:
  1865 ;;		line 113 in file "main.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  expr            1    wreg     PTR unsigned char 
  1868 ;;		 -> main@expr(18), 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  expr            1    5[BANK0 ] PTR unsigned char 
  1871 ;;		 -> main@expr(18), 
  1872 ;;  i               2    6[BANK0 ] int 
  1873 ;;  result          2    3[BANK0 ] int 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2    0[BANK0 ] int 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         0       2       0       0       0
  1884 ;;      Locals:         0       5       0       0       0
  1885 ;;      Temps:          0       1       0       0       0
  1886 ;;      Totals:         0       8       0       0       0
  1887 ;;Total ram usage:        8 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 2
  1890 ;; This function calls:
  1891 ;;		_atoi
  1892 ;; This function is called by:
  1893 ;;		_Solve_expr
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897     04FB                     _Solve_Add_Sub:	
  1898                           ;psect for function _Solve_Add_Sub
  1899                           
  1900                           
  1901                           ;incstack = 0
  1902                           ; Regs used in _Solve_Add_Sub: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1903                           ;Solve_Add_Sub@expr stored from wreg
  1904     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  1905     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  1906     04FD  00A5               	movwf	Solve_Add_Sub@expr
  1907     04FE                     l1815:
  1908                           
  1909                           ;main.c: 113: int Solve_Add_Sub(char *expr);main.c: 114: {;main.c: 115:     int result=0
      +                          ;
  1910     04FE  01A3               	clrf	Solve_Add_Sub@result
  1911     04FF  01A4               	clrf	Solve_Add_Sub@result+1
  1912                           
  1913                           ;main.c: 116:     int i=0;
  1914     0500  01A6               	clrf	Solve_Add_Sub@i
  1915     0501  01A7               	clrf	Solve_Add_Sub@i+1
  1916                           
  1917                           ;main.c: 117:     while(i<17)
  1918     0502  2D89               	goto	l1841
  1919     0503                     l1817:
  1920                           
  1921                           ;main.c: 118:     {;main.c: 120:         if(expr[i]=='+' || expr[i]=='-')
  1922     0503  1283               	bcf	3,5	;RP0=0, select bank0
  1923     0504  1303               	bcf	3,6	;RP1=0, select bank0
  1924     0505  0826               	movf	Solve_Add_Sub@i,w
  1925     0506  0725               	addwf	Solve_Add_Sub@expr,w
  1926     0507  00A2               	movwf	??_Solve_Add_Sub
  1927     0508  0822               	movf	??_Solve_Add_Sub,w
  1928     0509  0084               	movwf	4
  1929     050A  302B               	movlw	43
  1930     050B  1383               	bcf	3,7	;select IRP bank0
  1931     050C  0600               	xorwf	0,w
  1932     050D  1903               	btfsc	3,2
  1933     050E  2D10               	goto	u1931
  1934     050F  2D11               	goto	u1930
  1935     0510                     u1931:
  1936     0510  2D1C               	goto	l1821
  1937     0511                     u1930:
  1938     0511                     l1819:
  1939     0511  0826               	movf	Solve_Add_Sub@i,w
  1940     0512  0725               	addwf	Solve_Add_Sub@expr,w
  1941     0513  00A2               	movwf	??_Solve_Add_Sub
  1942     0514  0822               	movf	??_Solve_Add_Sub,w
  1943     0515  0084               	movwf	4
  1944     0516  302D               	movlw	45
  1945     0517  0600               	xorwf	0,w
  1946     0518  1D03               	btfss	3,2
  1947     0519  2D1B               	goto	u1941
  1948     051A  2D1C               	goto	u1940
  1949     051B                     u1941:
  1950     051B  2D83               	goto	l1839
  1951     051C                     u1940:
  1952     051C                     l1821:
  1953                           
  1954                           ;main.c: 121:         {;main.c: 122:             i++;
  1955     051C  3001               	movlw	1
  1956     051D  07A6               	addwf	Solve_Add_Sub@i,f
  1957     051E  1803               	skipnc
  1958     051F  0AA7               	incf	Solve_Add_Sub@i+1,f
  1959     0520  3000               	movlw	0
  1960     0521  07A7               	addwf	Solve_Add_Sub@i+1,f
  1961     0522                     l1823:
  1962                           
  1963                           ;main.c: 123:             if(expr[i-1]=='+')
  1964     0522  0826               	movf	Solve_Add_Sub@i,w
  1965     0523  0725               	addwf	Solve_Add_Sub@expr,w
  1966     0524  00A2               	movwf	??_Solve_Add_Sub
  1967     0525  0822               	movf	??_Solve_Add_Sub,w
  1968     0526  3EFF               	addlw	-1
  1969     0527  0084               	movwf	4
  1970     0528  302B               	movlw	43
  1971     0529  0600               	xorwf	0,w
  1972     052A  1D03               	btfss	3,2
  1973     052B  2D2D               	goto	u1951
  1974     052C  2D2E               	goto	u1950
  1975     052D                     u1951:
  1976     052D  2D3E               	goto	l1827
  1977     052E                     u1950:
  1978     052E                     l1825:
  1979                           
  1980                           ;main.c: 124:                 result+=(atoi(expr+i));
  1981     052E  0826               	movf	Solve_Add_Sub@i,w
  1982     052F  0725               	addwf	Solve_Add_Sub@expr,w
  1983     0530  120A  118A  2485  120A  118A  	fcall	_atoi
  1984     0535  0876               	movf	?_atoi,w
  1985     0536  1283               	bcf	3,5	;RP0=0, select bank0
  1986     0537  1303               	bcf	3,6	;RP1=0, select bank0
  1987     0538  07A3               	addwf	Solve_Add_Sub@result,f
  1988     0539  1803               	skipnc
  1989     053A  0AA4               	incf	Solve_Add_Sub@result+1,f
  1990     053B  0877               	movf	?_atoi+1,w
  1991     053C  07A4               	addwf	Solve_Add_Sub@result+1,f
  1992     053D  2D56               	goto	l1831
  1993     053E                     l1827:
  1994                           
  1995                           ;main.c: 126:                 result-=(atoi(expr+i));
  1996     053E  0826               	movf	Solve_Add_Sub@i,w
  1997     053F  0725               	addwf	Solve_Add_Sub@expr,w
  1998     0540  120A  118A  2485  120A  118A  	fcall	_atoi
  1999     0545  0876               	movf	?_atoi,w
  2000     0546  1283               	bcf	3,5	;RP0=0, select bank0
  2001     0547  1303               	bcf	3,6	;RP1=0, select bank0
  2002     0548  02A3               	subwf	Solve_Add_Sub@result,f
  2003     0549  0877               	movf	?_atoi+1,w
  2004     054A  1C03               	skipc
  2005     054B  03A4               	decf	Solve_Add_Sub@result+1,f
  2006     054C  02A4               	subwf	Solve_Add_Sub@result+1,f
  2007     054D  2D56               	goto	l1831
  2008     054E                     l1829:
  2009                           
  2010                           ;main.c: 129:             {;main.c: 130:                 i++;
  2011     054E  3001               	movlw	1
  2012     054F  1283               	bcf	3,5	;RP0=0, select bank0
  2013     0550  1303               	bcf	3,6	;RP1=0, select bank0
  2014     0551  07A6               	addwf	Solve_Add_Sub@i,f
  2015     0552  1803               	skipnc
  2016     0553  0AA7               	incf	Solve_Add_Sub@i+1,f
  2017     0554  3000               	movlw	0
  2018     0555  07A7               	addwf	Solve_Add_Sub@i+1,f
  2019     0556                     l1831:
  2020                           
  2021                           ;main.c: 128:             while( (expr[i]>='0' && expr[i]<='9') && i<17)
  2022     0556  0826               	movf	Solve_Add_Sub@i,w
  2023     0557  0725               	addwf	Solve_Add_Sub@expr,w
  2024     0558  00A2               	movwf	??_Solve_Add_Sub
  2025     0559  0822               	movf	??_Solve_Add_Sub,w
  2026     055A  0084               	movwf	4
  2027     055B  3030               	movlw	48
  2028     055C  1383               	bcf	3,7	;select IRP bank0
  2029     055D  0200               	subwf	0,w
  2030     055E  1C03               	skipc
  2031     055F  2D61               	goto	u1961
  2032     0560  2D62               	goto	u1960
  2033     0561                     u1961:
  2034     0561  2D7A               	goto	l1837
  2035     0562                     u1960:
  2036     0562                     l1833:
  2037     0562  0826               	movf	Solve_Add_Sub@i,w
  2038     0563  0725               	addwf	Solve_Add_Sub@expr,w
  2039     0564  00A2               	movwf	??_Solve_Add_Sub
  2040     0565  0822               	movf	??_Solve_Add_Sub,w
  2041     0566  0084               	movwf	4
  2042     0567  303A               	movlw	58
  2043     0568  0200               	subwf	0,w
  2044     0569  1803               	skipnc
  2045     056A  2D6C               	goto	u1971
  2046     056B  2D6D               	goto	u1970
  2047     056C                     u1971:
  2048     056C  2D7A               	goto	l1837
  2049     056D                     u1970:
  2050     056D                     l1835:
  2051     056D  0827               	movf	Solve_Add_Sub@i+1,w
  2052     056E  3A80               	xorlw	128
  2053     056F  00FF               	movwf	btemp+1
  2054     0570  3080               	movlw	128
  2055     0571  027F               	subwf	btemp+1,w
  2056     0572  1D03               	skipz
  2057     0573  2D76               	goto	u1985
  2058     0574  3011               	movlw	17
  2059     0575  0226               	subwf	Solve_Add_Sub@i,w
  2060     0576                     u1985:
  2061     0576  1C03               	skipc
  2062     0577  2D79               	goto	u1981
  2063     0578  2D7A               	goto	u1980
  2064     0579                     u1981:
  2065     0579  2D4E               	goto	l1829
  2066     057A                     u1980:
  2067     057A                     l1837:
  2068                           
  2069                           ;main.c: 132:             i--;
  2070     057A  30FF               	movlw	255
  2071     057B  1283               	bcf	3,5	;RP0=0, select bank0
  2072     057C  1303               	bcf	3,6	;RP1=0, select bank0
  2073     057D  07A6               	addwf	Solve_Add_Sub@i,f
  2074     057E  1803               	skipnc
  2075     057F  0AA7               	incf	Solve_Add_Sub@i+1,f
  2076     0580  30FF               	movlw	255
  2077     0581  07A7               	addwf	Solve_Add_Sub@i+1,f
  2078                           
  2079                           ;main.c: 133:             continue;
  2080     0582  2D89               	goto	l1841
  2081     0583                     l1839:
  2082                           
  2083                           ;main.c: 136:         i++;
  2084     0583  3001               	movlw	1
  2085     0584  07A6               	addwf	Solve_Add_Sub@i,f
  2086     0585  1803               	skipnc
  2087     0586  0AA7               	incf	Solve_Add_Sub@i+1,f
  2088     0587  3000               	movlw	0
  2089     0588  07A7               	addwf	Solve_Add_Sub@i+1,f
  2090     0589                     l1841:
  2091                           
  2092                           ;main.c: 117:     while(i<17)
  2093     0589  0827               	movf	Solve_Add_Sub@i+1,w
  2094     058A  3A80               	xorlw	128
  2095     058B  00FF               	movwf	btemp+1
  2096     058C  3080               	movlw	128
  2097     058D  027F               	subwf	btemp+1,w
  2098     058E  1D03               	skipz
  2099     058F  2D92               	goto	u1995
  2100     0590  3011               	movlw	17
  2101     0591  0226               	subwf	Solve_Add_Sub@i,w
  2102     0592                     u1995:
  2103     0592  1C03               	skipc
  2104     0593  2D95               	goto	u1991
  2105     0594  2D96               	goto	u1990
  2106     0595                     u1991:
  2107     0595  2D03               	goto	l1817
  2108     0596                     u1990:
  2109     0596                     l1843:
  2110                           
  2111                           ;main.c: 138:     return result;
  2112     0596  1283               	bcf	3,5	;RP0=0, select bank0
  2113     0597  1303               	bcf	3,6	;RP1=0, select bank0
  2114     0598  0824               	movf	Solve_Add_Sub@result+1,w
  2115     0599  00A1               	movwf	?_Solve_Add_Sub+1
  2116     059A  0823               	movf	Solve_Add_Sub@result,w
  2117     059B  00A0               	movwf	?_Solve_Add_Sub
  2118     059C                     l85:
  2119     059C  0008               	return
  2120     059D                     __end_of_Solve_Add_Sub:
  2121                           
  2122                           	psect	text8
  2123     0485                     __ptext8:	
  2124 ;; *************** function _atoi *****************
  2125 ;; Defined at:
  2126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atoi.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  s               1    wreg     PTR const unsigned char 
  2129 ;;		 -> main@expr(18), 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  s               1   13[COMMON] PTR const unsigned char 
  2132 ;;		 -> main@expr(18), 
  2133 ;;  n               2   11[COMMON] int 
  2134 ;;  neg             1   10[COMMON] _Bool 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  2    6[COMMON] int 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         2       0       0       0       0
  2145 ;;      Locals:         4       0       0       0       0
  2146 ;;      Temps:          2       0       0       0       0
  2147 ;;      Totals:         8       0       0       0       0
  2148 ;;Total ram usage:        8 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 1
  2151 ;; This function calls:
  2152 ;;		___wmul
  2153 ;; This function is called by:
  2154 ;;		_Get_Pre_Num
  2155 ;;		_Solve_Mul_Div
  2156 ;;		_Solve_Add_Sub
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160     0485                     _atoi:	
  2161                           ;psect for function _atoi
  2162                           
  2163                           
  2164                           ;incstack = 0
  2165                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2166                           ;atoi@s stored from wreg
  2167     0485  00FD               	movwf	atoi@s
  2168     0486                     l1457:
  2169     0486  01FB               	clrf	atoi@n
  2170     0487  01FC               	clrf	atoi@n+1
  2171     0488  01FA               	clrf	atoi@neg
  2172     0489  2C8E               	goto	l1461
  2173     048A                     l1459:
  2174     048A  3001               	movlw	1
  2175     048B  00FF               	movwf	btemp+1
  2176     048C  087F               	movf	btemp+1,w
  2177     048D  07FD               	addwf	atoi@s,f
  2178     048E                     l1461:
  2179     048E  087D               	movf	atoi@s,w
  2180     048F  0084               	movwf	4
  2181     0490  3020               	movlw	32
  2182     0491  1383               	bcf	3,7	;select IRP bank0
  2183     0492  0600               	xorwf	0,w
  2184     0493  1903               	btfsc	3,2
  2185     0494  2C96               	goto	u1201
  2186     0495  2C97               	goto	u1200
  2187     0496                     u1201:
  2188     0496  2C8A               	goto	l1459
  2189     0497                     u1200:
  2190     0497                     l1463:
  2191     0497  087D               	movf	atoi@s,w
  2192     0498  0084               	movwf	4
  2193     0499  30F7               	movlw	247
  2194     049A  0700               	addwf	0,w
  2195     049B  00F8               	movwf	??_atoi
  2196     049C  3005               	movlw	5
  2197     049D  0278               	subwf	??_atoi,w
  2198     049E  1C03               	skipc
  2199     049F  2CA1               	goto	u1211
  2200     04A0  2CA2               	goto	u1210
  2201     04A1                     u1211:
  2202     04A1  2C8A               	goto	l1459
  2203     04A2                     u1210:
  2204     04A2                     l1465:
  2205     04A2  087D               	movf	atoi@s,w
  2206     04A3  0084               	movwf	4
  2207     04A4  302D               	movlw	45
  2208     04A5  0600               	xorwf	0,w
  2209     04A6  1D03               	btfss	3,2
  2210     04A7  2CA9               	goto	u1221
  2211     04A8  2CAA               	goto	u1220
  2212     04A9                     u1221:
  2213     04A9  2CB1               	goto	l1471
  2214     04AA                     u1220:
  2215     04AA                     l1467:
  2216     04AA  01FA               	clrf	atoi@neg
  2217     04AB  0AFA               	incf	atoi@neg,f
  2218     04AC                     l1469:
  2219     04AC  3001               	movlw	1
  2220     04AD  00FF               	movwf	btemp+1
  2221     04AE  087F               	movf	btemp+1,w
  2222     04AF  07FD               	addwf	atoi@s,f
  2223     04B0  2CDA               	goto	l1479
  2224     04B1                     l1471:
  2225     04B1  087D               	movf	atoi@s,w
  2226     04B2  0084               	movwf	4
  2227     04B3  302B               	movlw	43
  2228     04B4  0600               	xorwf	0,w
  2229     04B5  1D03               	btfss	3,2
  2230     04B6  2CB8               	goto	u1231
  2231     04B7  2CB9               	goto	u1230
  2232     04B8                     u1231:
  2233     04B8  2CDA               	goto	l1479
  2234     04B9                     u1230:
  2235     04B9  2CAC               	goto	l1469
  2236     04BA                     l1475:
  2237     04BA  087D               	movf	atoi@s,w
  2238     04BB  0084               	movwf	4
  2239     04BC  087C               	movf	atoi@n+1,w
  2240     04BD  00F1               	movwf	___wmul@multiplier+1
  2241     04BE  087B               	movf	atoi@n,w
  2242     04BF  00F0               	movwf	___wmul@multiplier
  2243     04C0  300A               	movlw	10
  2244     04C1  00F2               	movwf	___wmul@multiplicand
  2245     04C2  3000               	movlw	0
  2246     04C3  00F3               	movwf	___wmul@multiplicand+1
  2247     04C4  120A  118A  20ED  120A  118A  	fcall	___wmul
  2248     04C9  0871               	movf	?___wmul+1,w
  2249     04CA  00F9               	movwf	??_atoi+1
  2250     04CB  1383               	bcf	3,7	;select IRP bank0
  2251     04CC  0800               	movf	0,w
  2252     04CD  0270               	subwf	?___wmul,w
  2253     04CE  00F8               	movwf	??_atoi
  2254     04CF  1C03               	skipc
  2255     04D0  03F9               	decf	??_atoi+1,f
  2256     04D1  0878               	movf	??_atoi,w
  2257     04D2  3E30               	addlw	48
  2258     04D3  00FB               	movwf	atoi@n
  2259     04D4  0879               	movf	??_atoi+1,w
  2260     04D5  1803               	skipnc
  2261     04D6  3E01               	addlw	1
  2262     04D7  3E00               	addlw	0
  2263     04D8  00FC               	movwf	atoi@n+1
  2264     04D9  2CAC               	goto	l1469
  2265     04DA                     l1479:
  2266     04DA  087D               	movf	atoi@s,w
  2267     04DB  0084               	movwf	4
  2268     04DC  30D0               	movlw	208
  2269     04DD  0700               	addwf	0,w
  2270     04DE  00F8               	movwf	??_atoi
  2271     04DF  300A               	movlw	10
  2272     04E0  0278               	subwf	??_atoi,w
  2273     04E1  1C03               	skipc
  2274     04E2  2CE4               	goto	u1241
  2275     04E3  2CE5               	goto	u1240
  2276     04E4                     u1241:
  2277     04E4  2CBA               	goto	l1475
  2278     04E5                     u1240:
  2279     04E5                     l1481:
  2280     04E5  087A               	movf	atoi@neg,w
  2281     04E6  1D03               	btfss	3,2
  2282     04E7  2CE9               	goto	u1251
  2283     04E8  2CEA               	goto	u1250
  2284     04E9                     u1251:
  2285     04E9  2CF6               	goto	l1485
  2286     04EA                     u1250:
  2287     04EA                     l1483:
  2288     04EA  097B               	comf	atoi@n,w
  2289     04EB  00F8               	movwf	??_atoi
  2290     04EC  097C               	comf	atoi@n+1,w
  2291     04ED  00F9               	movwf	??_atoi+1
  2292     04EE  0AF8               	incf	??_atoi,f
  2293     04EF  1903               	skipnz
  2294     04F0  0AF9               	incf	??_atoi+1,f
  2295     04F1  0878               	movf	??_atoi,w
  2296     04F2  00F6               	movwf	?_atoi
  2297     04F3  0879               	movf	??_atoi+1,w
  2298     04F4  00F7               	movwf	?_atoi+1
  2299     04F5  2CFA               	goto	l829
  2300     04F6                     l1485:
  2301     04F6  087C               	movf	atoi@n+1,w
  2302     04F7  00F7               	movwf	?_atoi+1
  2303     04F8  087B               	movf	atoi@n,w
  2304     04F9  00F6               	movwf	?_atoi
  2305     04FA                     l829:
  2306     04FA  0008               	return
  2307     04FB                     __end_of_atoi:
  2308                           
  2309                           	psect	text9
  2310     0271                     __ptext9:	
  2311 ;; *************** function _Print_Result *****************
  2312 ;; Defined at:
  2313 ;;		line 149 in file "main.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  result          2   13[BANK0 ] int 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  col             1   17[BANK0 ] unsigned char 
  2318 ;;  row             1   16[BANK0 ] unsigned char 
  2319 ;;  flag            1   15[BANK0 ] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2329 ;;      Params:         0       2       0       0       0
  2330 ;;      Locals:         0       3       0       0       0
  2331 ;;      Temps:          0       0       0       0       0
  2332 ;;      Totals:         0       5       0       0       0
  2333 ;;Total ram usage:        5 bytes
  2334 ;; Hardware stack levels used: 1
  2335 ;; Hardware stack levels required when called: 4
  2336 ;; This function calls:
  2337 ;;		___awdiv
  2338 ;;		___awmod
  2339 ;;		___wmul
  2340 ;;		_lcd_chr
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346     0271                     _Print_Result:	
  2347                           ;psect for function _Print_Result
  2348                           
  2349     0271                     l1939:	
  2350                           ;incstack = 0
  2351                           ; Regs used in _Print_Result: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2352                           
  2353                           
  2354                           ;main.c: 149: void Print_Result(int result);main.c: 150: {;main.c: 151:     char row=2,c
      +                          ol=16,flag=0;
  2355     0271  3002               	movlw	2
  2356     0272  1283               	bcf	3,5	;RP0=0, select bank0
  2357     0273  1303               	bcf	3,6	;RP1=0, select bank0
  2358     0274  00B0               	movwf	Print_Result@row
  2359     0275  3010               	movlw	16
  2360     0276  00B1               	movwf	Print_Result@col
  2361     0277                     l1941:
  2362     0277  01AF               	clrf	Print_Result@flag
  2363     0278                     l1943:
  2364                           
  2365                           ;main.c: 152:     if(result<0)
  2366     0278  1FAE               	btfss	Print_Result@result+1,7
  2367     0279  2A7B               	goto	u2151
  2368     027A  2A7C               	goto	u2150
  2369     027B                     u2151:
  2370     027B  2AC3               	goto	l92
  2371     027C                     u2150:
  2372     027C                     l1945:
  2373                           
  2374                           ;main.c: 153:     {;main.c: 154:         result*=-1;
  2375     027C  30FF               	movlw	255
  2376     027D  00F0               	movwf	___wmul@multiplier
  2377     027E  30FF               	movlw	255
  2378     027F  00F1               	movwf	___wmul@multiplier+1
  2379     0280  082E               	movf	Print_Result@result+1,w
  2380     0281  00F3               	movwf	___wmul@multiplicand+1
  2381     0282  082D               	movf	Print_Result@result,w
  2382     0283  00F2               	movwf	___wmul@multiplicand
  2383     0284  120A  118A  20ED  120A  118A  	fcall	___wmul
  2384     0289  0871               	movf	?___wmul+1,w
  2385     028A  1283               	bcf	3,5	;RP0=0, select bank0
  2386     028B  1303               	bcf	3,6	;RP1=0, select bank0
  2387     028C  00AE               	movwf	Print_Result@result+1
  2388     028D  0870               	movf	?___wmul,w
  2389     028E  00AD               	movwf	Print_Result@result
  2390     028F                     l1947:
  2391                           
  2392                           ;main.c: 155:         flag=1;
  2393     028F  01AF               	clrf	Print_Result@flag
  2394     0290  0AAF               	incf	Print_Result@flag,f
  2395     0291  2AC3               	goto	l92
  2396     0292                     l1949:
  2397                           
  2398                           ;main.c: 158:     {;main.c: 159:         lcd_chr(row,col,((result%10)+48));
  2399     0292  0831               	movf	Print_Result@col,w
  2400     0293  00FA               	movwf	lcd_chr@col
  2401     0294  300A               	movlw	10
  2402     0295  00F0               	movwf	___awmod@divisor
  2403     0296  3000               	movlw	0
  2404     0297  00F1               	movwf	___awmod@divisor+1
  2405     0298  082E               	movf	Print_Result@result+1,w
  2406     0299  00F3               	movwf	___awmod@dividend+1
  2407     029A  082D               	movf	Print_Result@result,w
  2408     029B  00F2               	movwf	___awmod@dividend
  2409     029C  120A  118A  2218  120A  118A  	fcall	___awmod
  2410     02A1  0870               	movf	?___awmod,w
  2411     02A2  3E30               	addlw	48
  2412     02A3  00FB               	movwf	lcd_chr@chr
  2413     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2414     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2415     02A6  0830               	movf	Print_Result@row,w
  2416     02A7  120A  118A  2089  120A  118A  	fcall	_lcd_chr
  2417     02AC                     l1951:
  2418                           
  2419                           ;main.c: 160:         col--;
  2420     02AC  3001               	movlw	1
  2421     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2422     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2423     02AF  02B1               	subwf	Print_Result@col,f
  2424     02B0                     l1953:
  2425                           
  2426                           ;main.c: 161:         result/=10;
  2427     02B0  300A               	movlw	10
  2428     02B1  00A5               	movwf	___awdiv@divisor
  2429     02B2  3000               	movlw	0
  2430     02B3  00A6               	movwf	___awdiv@divisor+1
  2431     02B4  082E               	movf	Print_Result@result+1,w
  2432     02B5  00A8               	movwf	___awdiv@dividend+1
  2433     02B6  082D               	movf	Print_Result@result,w
  2434     02B7  00A7               	movwf	___awdiv@dividend
  2435     02B8  120A  118A  22D9  120A  118A  	fcall	___awdiv
  2436     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2437     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2438     02BF  0826               	movf	?___awdiv+1,w
  2439     02C0  00AE               	movwf	Print_Result@result+1
  2440     02C1  0825               	movf	?___awdiv,w
  2441     02C2  00AD               	movwf	Print_Result@result
  2442     02C3                     l92:	
  2443                           ;main.c: 162:     }
  2444                           
  2445                           
  2446                           ;main.c: 157:     while(result!=0)
  2447     02C3  082D               	movf	Print_Result@result,w
  2448     02C4  042E               	iorwf	Print_Result@result+1,w
  2449     02C5  1D03               	btfss	3,2
  2450     02C6  2AC8               	goto	u2161
  2451     02C7  2AC9               	goto	u2160
  2452     02C8                     u2161:
  2453     02C8  2A92               	goto	l1949
  2454     02C9                     u2160:
  2455     02C9                     l1955:
  2456                           
  2457                           ;main.c: 163:     if(flag==1)
  2458     02C9  032F               	decf	Print_Result@flag,w
  2459     02CA  1D03               	btfss	3,2
  2460     02CB  2ACD               	goto	u2171
  2461     02CC  2ACE               	goto	u2170
  2462     02CD                     u2171:
  2463     02CD  2AD8               	goto	l96
  2464     02CE                     u2170:
  2465     02CE                     l1957:
  2466                           
  2467                           ;main.c: 164:     {;main.c: 165:         lcd_chr(row,col,'-');
  2468     02CE  0831               	movf	Print_Result@col,w
  2469     02CF  00FA               	movwf	lcd_chr@col
  2470     02D0  302D               	movlw	45
  2471     02D1  00FB               	movwf	lcd_chr@chr
  2472     02D2  0830               	movf	Print_Result@row,w
  2473     02D3  120A  118A  2089  120A  118A  	fcall	_lcd_chr
  2474     02D8                     l96:
  2475     02D8  0008               	return
  2476     02D9                     __end_of_Print_Result:
  2477                           
  2478                           	psect	text10
  2479     0089                     __ptext10:	
  2480 ;; *************** function _lcd_chr *****************
  2481 ;; Defined at:
  2482 ;;		line 107 in file "lcd.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  row             1    wreg     unsigned char 
  2485 ;;  col             1   10[COMMON] unsigned char 
  2486 ;;  chr             1   11[COMMON] unsigned char 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  row             1   12[COMMON] unsigned char 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2498 ;;      Params:         2       0       0       0       0
  2499 ;;      Locals:         1       0       0       0       0
  2500 ;;      Temps:          0       0       0       0       0
  2501 ;;      Totals:         3       0       0       0       0
  2502 ;;Total ram usage:        3 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 3
  2505 ;; This function calls:
  2506 ;;		_LCD_Write_Char
  2507 ;;		_lcd_set_cursor
  2508 ;; This function is called by:
  2509 ;;		_Print_Result
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513     0089                     _lcd_chr:	
  2514                           ;psect for function _lcd_chr
  2515                           
  2516                           
  2517                           ;incstack = 0
  2518                           ; Regs used in _lcd_chr: [wreg+status,2+status,0+pclath+cstack]
  2519                           ;lcd_chr@row stored from wreg
  2520     0089  00FC               	movwf	lcd_chr@row
  2521     008A                     l1847:
  2522                           
  2523                           ;lcd.c: 107: void lcd_chr(unsigned char row,unsigned char col, unsigned char chr);lcd.c:
      +                           108: {;lcd.c: 109:   lcd_set_cursor(row,col);
  2524     008A  087A               	movf	lcd_chr@col,w
  2525     008B  00F4               	movwf	lcd_set_cursor@c
  2526     008C  087C               	movf	lcd_chr@row,w
  2527     008D  120A  118A  2138  120A  118A  	fcall	_lcd_set_cursor
  2528                           
  2529                           ;lcd.c: 110:   LCD_Write_Char(chr);
  2530     0092  087B               	movf	lcd_chr@chr,w
  2531     0093  120A  118A  21C9  120A  118A  	fcall	_LCD_Write_Char
  2532     0098                     l256:
  2533     0098  0008               	return
  2534     0099                     __end_of_lcd_chr:
  2535                           
  2536                           	psect	text11
  2537     00ED                     __ptext11:	
  2538 ;; *************** function ___wmul *****************
  2539 ;; Defined at:
  2540 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  multiplier      2    0[COMMON] unsigned int 
  2543 ;;  multiplicand    2    2[COMMON] unsigned int 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  product         2    4[COMMON] unsigned int 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  2    0[COMMON] unsigned int 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         4       0       0       0       0
  2556 ;;      Locals:         2       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0
  2558 ;;      Totals:         6       0       0       0       0
  2559 ;;Total ram usage:        6 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_Solve_Mul_Div
  2565 ;;		_Print_Result
  2566 ;;		_atoi
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570     00ED                     ___wmul:	
  2571                           ;psect for function ___wmul
  2572                           
  2573     00ED                     l1443:	
  2574                           ;incstack = 0
  2575                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2576                           
  2577     00ED  01F4               	clrf	___wmul@product
  2578     00EE  01F5               	clrf	___wmul@product+1
  2579     00EF                     l1445:
  2580     00EF  1C70               	btfss	___wmul@multiplier,0
  2581     00F0  28F2               	goto	u1161
  2582     00F1  28F3               	goto	u1160
  2583     00F2                     u1161:
  2584     00F2  28F9               	goto	l357
  2585     00F3                     u1160:
  2586     00F3                     l1447:
  2587     00F3  0872               	movf	___wmul@multiplicand,w
  2588     00F4  07F4               	addwf	___wmul@product,f
  2589     00F5  1803               	skipnc
  2590     00F6  0AF5               	incf	___wmul@product+1,f
  2591     00F7  0873               	movf	___wmul@multiplicand+1,w
  2592     00F8  07F5               	addwf	___wmul@product+1,f
  2593     00F9                     l357:
  2594     00F9  3001               	movlw	1
  2595     00FA                     u1175:
  2596     00FA  1003               	clrc
  2597     00FB  0DF2               	rlf	___wmul@multiplicand,f
  2598     00FC  0DF3               	rlf	___wmul@multiplicand+1,f
  2599     00FD  3EFF               	addlw	-1
  2600     00FE  1D03               	skipz
  2601     00FF  28FA               	goto	u1175
  2602     0100                     l1449:
  2603     0100  3001               	movlw	1
  2604     0101                     u1185:
  2605     0101  1003               	clrc
  2606     0102  0CF1               	rrf	___wmul@multiplier+1,f
  2607     0103  0CF0               	rrf	___wmul@multiplier,f
  2608     0104  3EFF               	addlw	-1
  2609     0105  1D03               	skipz
  2610     0106  2901               	goto	u1185
  2611     0107                     l1451:
  2612     0107  0870               	movf	___wmul@multiplier,w
  2613     0108  0471               	iorwf	___wmul@multiplier+1,w
  2614     0109  1D03               	btfss	3,2
  2615     010A  290C               	goto	u1191
  2616     010B  290D               	goto	u1190
  2617     010C                     u1191:
  2618     010C  28EF               	goto	l1445
  2619     010D                     u1190:
  2620     010D                     l1453:
  2621     010D  0875               	movf	___wmul@product+1,w
  2622     010E  00F1               	movwf	?___wmul+1
  2623     010F  0874               	movf	___wmul@product,w
  2624     0110  00F0               	movwf	?___wmul
  2625     0111                     l359:
  2626     0111  0008               	return
  2627     0112                     __end_of___wmul:
  2628                           
  2629                           	psect	text12
  2630     0218                     __ptext12:	
  2631 ;; *************** function ___awmod *****************
  2632 ;; Defined at:
  2633 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  divisor         2    0[COMMON] int 
  2636 ;;  dividend        2    2[COMMON] int 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  sign            1    5[COMMON] unsigned char 
  2639 ;;  counter         1    4[COMMON] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  2    0[COMMON] int 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, btemp+1
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         4       0       0       0       0
  2650 ;;      Locals:         2       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0
  2652 ;;      Totals:         6       0       0       0       0
  2653 ;;Total ram usage:        6 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_Print_Result
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662     0218                     ___awmod:	
  2663                           ;psect for function ___awmod
  2664                           
  2665     0218                     l1849:	
  2666                           ;incstack = 0
  2667                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2668                           
  2669     0218  01F5               	clrf	___awmod@sign
  2670     0219                     l1851:
  2671     0219  1FF3               	btfss	___awmod@dividend+1,7
  2672     021A  2A1C               	goto	u2001
  2673     021B  2A1D               	goto	u2000
  2674     021C                     u2001:
  2675     021C  2A24               	goto	l1857
  2676     021D                     u2000:
  2677     021D                     l1853:
  2678     021D  09F2               	comf	___awmod@dividend,f
  2679     021E  09F3               	comf	___awmod@dividend+1,f
  2680     021F  0AF2               	incf	___awmod@dividend,f
  2681     0220  1903               	skipnz
  2682     0221  0AF3               	incf	___awmod@dividend+1,f
  2683     0222                     l1855:
  2684     0222  01F5               	clrf	___awmod@sign
  2685     0223  0AF5               	incf	___awmod@sign,f
  2686     0224                     l1857:
  2687     0224  1FF1               	btfss	___awmod@divisor+1,7
  2688     0225  2A27               	goto	u2011
  2689     0226  2A28               	goto	u2010
  2690     0227                     u2011:
  2691     0227  2A2D               	goto	l1861
  2692     0228                     u2010:
  2693     0228                     l1859:
  2694     0228  09F0               	comf	___awmod@divisor,f
  2695     0229  09F1               	comf	___awmod@divisor+1,f
  2696     022A  0AF0               	incf	___awmod@divisor,f
  2697     022B  1903               	skipnz
  2698     022C  0AF1               	incf	___awmod@divisor+1,f
  2699     022D                     l1861:
  2700     022D  0870               	movf	___awmod@divisor,w
  2701     022E  0471               	iorwf	___awmod@divisor+1,w
  2702     022F  1903               	btfsc	3,2
  2703     0230  2A32               	goto	u2021
  2704     0231  2A33               	goto	u2020
  2705     0232                     u2021:
  2706     0232  2A62               	goto	l1879
  2707     0233                     u2020:
  2708     0233                     l1863:
  2709     0233  01F4               	clrf	___awmod@counter
  2710     0234  0AF4               	incf	___awmod@counter,f
  2711     0235  2A41               	goto	l1869
  2712     0236                     l1865:
  2713     0236  3001               	movlw	1
  2714     0237                     u2035:
  2715     0237  1003               	clrc
  2716     0238  0DF0               	rlf	___awmod@divisor,f
  2717     0239  0DF1               	rlf	___awmod@divisor+1,f
  2718     023A  3EFF               	addlw	-1
  2719     023B  1D03               	skipz
  2720     023C  2A37               	goto	u2035
  2721     023D                     l1867:
  2722     023D  3001               	movlw	1
  2723     023E  00FF               	movwf	btemp+1
  2724     023F  087F               	movf	btemp+1,w
  2725     0240  07F4               	addwf	___awmod@counter,f
  2726     0241                     l1869:
  2727     0241  1FF1               	btfss	___awmod@divisor+1,7
  2728     0242  2A44               	goto	u2041
  2729     0243  2A45               	goto	u2040
  2730     0244                     u2041:
  2731     0244  2A36               	goto	l1865
  2732     0245                     u2040:
  2733     0245                     l1871:
  2734     0245  0871               	movf	___awmod@divisor+1,w
  2735     0246  0273               	subwf	___awmod@dividend+1,w
  2736     0247  1D03               	skipz
  2737     0248  2A4B               	goto	u2055
  2738     0249  0870               	movf	___awmod@divisor,w
  2739     024A  0272               	subwf	___awmod@dividend,w
  2740     024B                     u2055:
  2741     024B  1C03               	skipc
  2742     024C  2A4E               	goto	u2051
  2743     024D  2A4F               	goto	u2050
  2744     024E                     u2051:
  2745     024E  2A55               	goto	l1875
  2746     024F                     u2050:
  2747     024F                     l1873:
  2748     024F  0870               	movf	___awmod@divisor,w
  2749     0250  02F2               	subwf	___awmod@dividend,f
  2750     0251  0871               	movf	___awmod@divisor+1,w
  2751     0252  1C03               	skipc
  2752     0253  03F3               	decf	___awmod@dividend+1,f
  2753     0254  02F3               	subwf	___awmod@dividend+1,f
  2754     0255                     l1875:
  2755     0255  3001               	movlw	1
  2756     0256                     u2065:
  2757     0256  1003               	clrc
  2758     0257  0CF1               	rrf	___awmod@divisor+1,f
  2759     0258  0CF0               	rrf	___awmod@divisor,f
  2760     0259  3EFF               	addlw	-1
  2761     025A  1D03               	skipz
  2762     025B  2A56               	goto	u2065
  2763     025C                     l1877:
  2764     025C  3001               	movlw	1
  2765     025D  02F4               	subwf	___awmod@counter,f
  2766     025E  1D03               	btfss	3,2
  2767     025F  2A61               	goto	u2071
  2768     0260  2A62               	goto	u2070
  2769     0261                     u2071:
  2770     0261  2A45               	goto	l1871
  2771     0262                     u2070:
  2772     0262                     l1879:
  2773     0262  0875               	movf	___awmod@sign,w
  2774     0263  1903               	btfsc	3,2
  2775     0264  2A66               	goto	u2081
  2776     0265  2A67               	goto	u2080
  2777     0266                     u2081:
  2778     0266  2A6C               	goto	l1883
  2779     0267                     u2080:
  2780     0267                     l1881:
  2781     0267  09F2               	comf	___awmod@dividend,f
  2782     0268  09F3               	comf	___awmod@dividend+1,f
  2783     0269  0AF2               	incf	___awmod@dividend,f
  2784     026A  1903               	skipnz
  2785     026B  0AF3               	incf	___awmod@dividend+1,f
  2786     026C                     l1883:
  2787     026C  0873               	movf	___awmod@dividend+1,w
  2788     026D  00F1               	movwf	?___awmod+1
  2789     026E  0872               	movf	___awmod@dividend,w
  2790     026F  00F0               	movwf	?___awmod
  2791     0270                     l523:
  2792     0270  0008               	return
  2793     0271                     __end_of___awmod:
  2794                           
  2795                           	psect	text13
  2796     02D9                     __ptext13:	
  2797 ;; *************** function ___awdiv *****************
  2798 ;; Defined at:
  2799 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  divisor         2    5[BANK0 ] int 
  2802 ;;  dividend        2    7[BANK0 ] int 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  quotient        2   11[BANK0 ] int 
  2805 ;;  sign            1   10[BANK0 ] unsigned char 
  2806 ;;  counter         1    9[BANK0 ] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  2    5[BANK0 ] int 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, btemp+1
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2816 ;;      Params:         0       4       0       0       0
  2817 ;;      Locals:         0       4       0       0       0
  2818 ;;      Temps:          0       0       0       0       0
  2819 ;;      Totals:         0       8       0       0       0
  2820 ;;Total ram usage:        8 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_Solve_Mul_Div
  2826 ;;		_Print_Result
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830     02D9                     ___awdiv:	
  2831                           ;psect for function ___awdiv
  2832                           
  2833     02D9                     l1585:	
  2834                           ;incstack = 0
  2835                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2836                           
  2837     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2838     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2839     02DB  01AA               	clrf	___awdiv@sign
  2840     02DC                     l1587:
  2841     02DC  1FA6               	btfss	___awdiv@divisor+1,7
  2842     02DD  2ADF               	goto	u1431
  2843     02DE  2AE0               	goto	u1430
  2844     02DF                     u1431:
  2845     02DF  2AE7               	goto	l1593
  2846     02E0                     u1430:
  2847     02E0                     l1589:
  2848     02E0  09A5               	comf	___awdiv@divisor,f
  2849     02E1  09A6               	comf	___awdiv@divisor+1,f
  2850     02E2  0AA5               	incf	___awdiv@divisor,f
  2851     02E3  1903               	skipnz
  2852     02E4  0AA6               	incf	___awdiv@divisor+1,f
  2853     02E5                     l1591:
  2854     02E5  01AA               	clrf	___awdiv@sign
  2855     02E6  0AAA               	incf	___awdiv@sign,f
  2856     02E7                     l1593:
  2857     02E7  1FA8               	btfss	___awdiv@dividend+1,7
  2858     02E8  2AEA               	goto	u1441
  2859     02E9  2AEB               	goto	u1440
  2860     02EA                     u1441:
  2861     02EA  2AF4               	goto	l1599
  2862     02EB                     u1440:
  2863     02EB                     l1595:
  2864     02EB  09A7               	comf	___awdiv@dividend,f
  2865     02EC  09A8               	comf	___awdiv@dividend+1,f
  2866     02ED  0AA7               	incf	___awdiv@dividend,f
  2867     02EE  1903               	skipnz
  2868     02EF  0AA8               	incf	___awdiv@dividend+1,f
  2869     02F0                     l1597:
  2870     02F0  3001               	movlw	1
  2871     02F1  00FF               	movwf	btemp+1
  2872     02F2  087F               	movf	btemp+1,w
  2873     02F3  06AA               	xorwf	___awdiv@sign,f
  2874     02F4                     l1599:
  2875     02F4  01AB               	clrf	___awdiv@quotient
  2876     02F5  01AC               	clrf	___awdiv@quotient+1
  2877     02F6                     l1601:
  2878     02F6  0825               	movf	___awdiv@divisor,w
  2879     02F7  0426               	iorwf	___awdiv@divisor+1,w
  2880     02F8  1903               	btfsc	3,2
  2881     02F9  2AFB               	goto	u1451
  2882     02FA  2AFC               	goto	u1450
  2883     02FB                     u1451:
  2884     02FB  2B33               	goto	l1621
  2885     02FC                     u1450:
  2886     02FC                     l1603:
  2887     02FC  01A9               	clrf	___awdiv@counter
  2888     02FD  0AA9               	incf	___awdiv@counter,f
  2889     02FE  2B0A               	goto	l1609
  2890     02FF                     l1605:
  2891     02FF  3001               	movlw	1
  2892     0300                     u1465:
  2893     0300  1003               	clrc
  2894     0301  0DA5               	rlf	___awdiv@divisor,f
  2895     0302  0DA6               	rlf	___awdiv@divisor+1,f
  2896     0303  3EFF               	addlw	-1
  2897     0304  1D03               	skipz
  2898     0305  2B00               	goto	u1465
  2899     0306                     l1607:
  2900     0306  3001               	movlw	1
  2901     0307  00FF               	movwf	btemp+1
  2902     0308  087F               	movf	btemp+1,w
  2903     0309  07A9               	addwf	___awdiv@counter,f
  2904     030A                     l1609:
  2905     030A  1FA6               	btfss	___awdiv@divisor+1,7
  2906     030B  2B0D               	goto	u1471
  2907     030C  2B0E               	goto	u1470
  2908     030D                     u1471:
  2909     030D  2AFF               	goto	l1605
  2910     030E                     u1470:
  2911     030E                     l1611:
  2912     030E  3001               	movlw	1
  2913     030F                     u1485:
  2914     030F  1003               	clrc
  2915     0310  0DAB               	rlf	___awdiv@quotient,f
  2916     0311  0DAC               	rlf	___awdiv@quotient+1,f
  2917     0312  3EFF               	addlw	-1
  2918     0313  1D03               	skipz
  2919     0314  2B0F               	goto	u1485
  2920     0315  0826               	movf	___awdiv@divisor+1,w
  2921     0316  0228               	subwf	___awdiv@dividend+1,w
  2922     0317  1D03               	skipz
  2923     0318  2B1B               	goto	u1495
  2924     0319  0825               	movf	___awdiv@divisor,w
  2925     031A  0227               	subwf	___awdiv@dividend,w
  2926     031B                     u1495:
  2927     031B  1C03               	skipc
  2928     031C  2B1E               	goto	u1491
  2929     031D  2B1F               	goto	u1490
  2930     031E                     u1491:
  2931     031E  2B26               	goto	l1617
  2932     031F                     u1490:
  2933     031F                     l1613:
  2934     031F  0825               	movf	___awdiv@divisor,w
  2935     0320  02A7               	subwf	___awdiv@dividend,f
  2936     0321  0826               	movf	___awdiv@divisor+1,w
  2937     0322  1C03               	skipc
  2938     0323  03A8               	decf	___awdiv@dividend+1,f
  2939     0324  02A8               	subwf	___awdiv@dividend+1,f
  2940     0325                     l1615:
  2941     0325  142B               	bsf	___awdiv@quotient,0
  2942     0326                     l1617:
  2943     0326  3001               	movlw	1
  2944     0327                     u1505:
  2945     0327  1003               	clrc
  2946     0328  0CA6               	rrf	___awdiv@divisor+1,f
  2947     0329  0CA5               	rrf	___awdiv@divisor,f
  2948     032A  3EFF               	addlw	-1
  2949     032B  1D03               	skipz
  2950     032C  2B27               	goto	u1505
  2951     032D                     l1619:
  2952     032D  3001               	movlw	1
  2953     032E  02A9               	subwf	___awdiv@counter,f
  2954     032F  1D03               	btfss	3,2
  2955     0330  2B32               	goto	u1511
  2956     0331  2B33               	goto	u1510
  2957     0332                     u1511:
  2958     0332  2B0E               	goto	l1611
  2959     0333                     u1510:
  2960     0333                     l1621:
  2961     0333  082A               	movf	___awdiv@sign,w
  2962     0334  1903               	btfsc	3,2
  2963     0335  2B37               	goto	u1521
  2964     0336  2B38               	goto	u1520
  2965     0337                     u1521:
  2966     0337  2B3D               	goto	l1625
  2967     0338                     u1520:
  2968     0338                     l1623:
  2969     0338  09AB               	comf	___awdiv@quotient,f
  2970     0339  09AC               	comf	___awdiv@quotient+1,f
  2971     033A  0AAB               	incf	___awdiv@quotient,f
  2972     033B  1903               	skipnz
  2973     033C  0AAC               	incf	___awdiv@quotient+1,f
  2974     033D                     l1625:
  2975     033D  082C               	movf	___awdiv@quotient+1,w
  2976     033E  00A6               	movwf	?___awdiv+1
  2977     033F  082B               	movf	___awdiv@quotient,w
  2978     0340  00A5               	movwf	?___awdiv
  2979     0341                     l510:
  2980     0341  0008               	return
  2981     0342                     __end_of___awdiv:
  2982                           
  2983                           	psect	text14
  2984     059D                     __ptext14:	
  2985 ;; *************** function _Get_Expression *****************
  2986 ;; Defined at:
  2987 ;;		line 18 in file "main.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  equ             1    wreg     PTR unsigned char 
  2990 ;;		 -> main@expr(18), 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  equ             1   17[BANK0 ] PTR unsigned char 
  2993 ;;		 -> main@expr(18), 
  2994 ;;  expr           17    0[BANK0 ] unsigned char [17]
  2995 ;;  i               2   18[BANK0 ] int 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3005 ;;      Params:         0       0       0       0       0
  3006 ;;      Locals:         0      20       0       0       0
  3007 ;;      Temps:          1       0       0       0       0
  3008 ;;      Totals:         1      20       0       0       0
  3009 ;;Total ram usage:       21 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 3
  3012 ;; This function calls:
  3013 ;;		_keypad_get_key
  3014 ;;		_lcd_chr_cp
  3015 ;;		_lcd_cmd
  3016 ;;		_lcd_set_cursor
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022     059D                     _Get_Expression:	
  3023                           ;psect for function _Get_Expression
  3024                           
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _Get_Expression: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3028                           ;Get_Expression@equ stored from wreg
  3029     059D  1283               	bcf	3,5	;RP0=0, select bank0
  3030     059E  1303               	bcf	3,6	;RP1=0, select bank0
  3031     059F  00B1               	movwf	Get_Expression@equ
  3032     05A0                     l1887:
  3033                           
  3034                           ;main.c: 18: void Get_Expression(char *equ);main.c: 19: {;main.c: 20:     lcd_cmd((0x01)
      +                          );
  3035     05A0  3001               	movlw	1
  3036     05A1  120A  118A  2099  120A  118A  	fcall	_lcd_cmd
  3037                           
  3038                           ;main.c: 21:     lcd_cmd((0x02));
  3039     05A6  3002               	movlw	2
  3040     05A7  120A  118A  2099  120A  118A  	fcall	_lcd_cmd
  3041                           
  3042                           ;main.c: 22:     lcd_cmd((0x0C));
  3043     05AC  300C               	movlw	12
  3044     05AD  120A  118A  2099  120A  118A  	fcall	_lcd_cmd
  3045     05B2                     l1889:
  3046                           
  3047                           ;main.c: 24:     char expr[17]={0};
  3048     05B2  3020               	movlw	Get_Expression@expr& (0+255)
  3049     05B3  0084               	movwf	4
  3050     05B4  3011               	movlw	17
  3051     05B5  00FF               	movwf	btemp+1
  3052     05B6                     u2090:
  3053     05B6  1383               	bcf	3,7	;select IRP bank0
  3054     05B7  0180               	clrf	0
  3055     05B8  0A84               	incf	4,f
  3056     05B9  0BFF               	decfsz	btemp+1,f
  3057     05BA  2DB6               	goto	u2090
  3058     05BB                     l1891:
  3059                           
  3060                           ;main.c: 25:     int i;;main.c: 26:     lcd_set_cursor(1,1);
  3061     05BB  01F4               	clrf	lcd_set_cursor@c
  3062     05BC  0AF4               	incf	lcd_set_cursor@c,f
  3063     05BD  3001               	movlw	1
  3064     05BE  120A  118A  2138  120A  118A  	fcall	_lcd_set_cursor
  3065     05C3                     l1893:
  3066                           
  3067                           ;main.c: 27:     for(i=0;i<16;i++)
  3068     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3069     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3070     05C5  01B2               	clrf	Get_Expression@i
  3071     05C6  01B3               	clrf	Get_Expression@i+1
  3072     05C7                     l1899:
  3073                           
  3074                           ;main.c: 28:     {;main.c: 29:         expr[i]='\0';
  3075     05C7  1283               	bcf	3,5	;RP0=0, select bank0
  3076     05C8  1303               	bcf	3,6	;RP1=0, select bank0
  3077     05C9  0832               	movf	Get_Expression@i,w
  3078     05CA  3E20               	addlw	(low (Get_Expression@expr| 0))& (0+255)
  3079     05CB  0084               	movwf	4
  3080     05CC  1383               	bcf	3,7	;select IRP bank0
  3081     05CD  0180               	clrf	0
  3082                           
  3083                           ;main.c: 30:         while(expr[i]=='\0')
  3084     05CE  2DD9               	goto	l1903
  3085     05CF                     l1901:
  3086                           
  3087                           ;main.c: 31:         {;main.c: 32:             expr[i]=keypad_get_key();
  3088     05CF  0832               	movf	Get_Expression@i,w
  3089     05D0  3E20               	addlw	(low (Get_Expression@expr| 0))& (0+255)
  3090     05D1  0084               	movwf	4
  3091     05D2  120A  118A  264A  120A  118A  	fcall	_keypad_get_key
  3092     05D7  1383               	bcf	3,7	;select IRP bank0
  3093     05D8  0080               	movwf	0
  3094     05D9                     l1903:
  3095                           
  3096                           ;main.c: 30:         while(expr[i]=='\0')
  3097     05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3098     05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3099     05DB  0832               	movf	Get_Expression@i,w
  3100     05DC  3E20               	addlw	(low (Get_Expression@expr| 0))& (0+255)
  3101     05DD  0084               	movwf	4
  3102     05DE  0800               	movf	0,w
  3103     05DF  1903               	btfsc	3,2
  3104     05E0  2DE2               	goto	u2101
  3105     05E1  2DE3               	goto	u2100
  3106     05E2                     u2101:
  3107     05E2  2DCF               	goto	l1901
  3108     05E3                     u2100:
  3109     05E3                     l1905:
  3110     05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3111     05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3112     05E5  0832               	movf	Get_Expression@i,w
  3113     05E6  3E20               	addlw	(low (Get_Expression@expr| 0))& (0+255)
  3114     05E7  0084               	movwf	4
  3115     05E8  120A  118A  264A  120A  118A  	fcall	_keypad_get_key
  3116     05ED  1383               	bcf	3,7	;select IRP bank0
  3117     05EE  0600               	xorwf	0,w
  3118     05EF  1903               	skipnz
  3119     05F0  2DF2               	goto	u2111
  3120     05F1  2DF3               	goto	u2110
  3121     05F2                     u2111:
  3122     05F2  2DE3               	goto	l1905
  3123     05F3                     u2110:
  3124     05F3                     l1907:
  3125                           
  3126                           ;main.c: 35:         lcd_chr_cp(expr[i]);
  3127     05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3128     05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3129     05F5  0832               	movf	Get_Expression@i,w
  3130     05F6  3E20               	addlw	(low (Get_Expression@expr| 0))& (0+255)
  3131     05F7  0084               	movwf	4
  3132     05F8  0800               	movf	0,w
  3133     05F9  120A  118A  206B  120A  118A  	fcall	_lcd_chr_cp
  3134     05FE                     l1909:
  3135                           
  3136                           ;main.c: 37:         *(equ+i)=expr[i];
  3137     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3138     05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3139     0600  0832               	movf	Get_Expression@i,w
  3140     0601  3E20               	addlw	(low (Get_Expression@expr| 0))& (0+255)
  3141     0602  0084               	movwf	4
  3142     0603  1383               	bcf	3,7	;select IRP bank0
  3143     0604  0800               	movf	0,w
  3144     0605  00FF               	movwf	btemp+1
  3145     0606  0832               	movf	Get_Expression@i,w
  3146     0607  0731               	addwf	Get_Expression@equ,w
  3147     0608  00FA               	movwf	??_Get_Expression
  3148     0609  087A               	movf	??_Get_Expression,w
  3149     060A  0084               	movwf	4
  3150     060B  087F               	movf	btemp+1,w
  3151     060C  0080               	movwf	0
  3152     060D                     l1911:
  3153                           
  3154                           ;main.c: 38:         if(expr[i]=='=')
  3155     060D  0832               	movf	Get_Expression@i,w
  3156     060E  3E20               	addlw	(low (Get_Expression@expr| 0))& (0+255)
  3157     060F  0084               	movwf	4
  3158     0610  303D               	movlw	61
  3159     0611  0600               	xorwf	0,w
  3160     0612  1D03               	btfss	3,2
  3161     0613  2E15               	goto	u2121
  3162     0614  2E16               	goto	u2120
  3163     0615                     u2121:
  3164     0615  2E17               	goto	l1915
  3165     0616                     u2120:
  3166     0616  2E49               	goto	l32
  3167     0617                     l1915:
  3168                           
  3169                           ;main.c: 42:         if(expr[i]=='c')
  3170     0617  0832               	movf	Get_Expression@i,w
  3171     0618  3E20               	addlw	(low (Get_Expression@expr| 0))& (0+255)
  3172     0619  0084               	movwf	4
  3173     061A  3063               	movlw	99
  3174     061B  0600               	xorwf	0,w
  3175     061C  1D03               	btfss	3,2
  3176     061D  2E1F               	goto	u2131
  3177     061E  2E20               	goto	u2130
  3178     061F                     u2131:
  3179     061F  2E34               	goto	l1925
  3180     0620                     u2130:
  3181     0620                     l1917:
  3182                           
  3183                           ;main.c: 43:         {;main.c: 44:             i=0;
  3184     0620  01B2               	clrf	Get_Expression@i
  3185     0621  01B3               	clrf	Get_Expression@i+1
  3186     0622                     l1919:
  3187                           
  3188                           ;main.c: 45:             lcd_cmd((0x01));
  3189     0622  3001               	movlw	1
  3190     0623  120A  118A  2099  120A  118A  	fcall	_lcd_cmd
  3191     0628                     l1921:
  3192                           
  3193                           ;main.c: 46:             lcd_cmd((0x02));
  3194     0628  3002               	movlw	2
  3195     0629  120A  118A  2099  120A  118A  	fcall	_lcd_cmd
  3196     062E                     l1923:
  3197                           
  3198                           ;main.c: 47:             lcd_cmd((0x0C));
  3199     062E  300C               	movlw	12
  3200     062F  120A  118A  2099  120A  118A  	fcall	_lcd_cmd
  3201     0634                     l1925:	
  3202                           ;main.c: 48:             continue;
  3203                           
  3204     0634  3001               	movlw	1
  3205     0635  1283               	bcf	3,5	;RP0=0, select bank0
  3206     0636  1303               	bcf	3,6	;RP1=0, select bank0
  3207     0637  07B2               	addwf	Get_Expression@i,f
  3208     0638  1803               	skipnc
  3209     0639  0AB3               	incf	Get_Expression@i+1,f
  3210     063A  3000               	movlw	0
  3211     063B  07B3               	addwf	Get_Expression@i+1,f
  3212     063C                     l1927:
  3213     063C  0833               	movf	Get_Expression@i+1,w
  3214     063D  3A80               	xorlw	128
  3215     063E  00FF               	movwf	btemp+1
  3216     063F  3080               	movlw	128
  3217     0640  027F               	subwf	btemp+1,w
  3218     0641  1D03               	skipz
  3219     0642  2E45               	goto	u2145
  3220     0643  3010               	movlw	16
  3221     0644  0232               	subwf	Get_Expression@i,w
  3222     0645                     u2145:
  3223     0645  1C03               	skipc
  3224     0646  2E48               	goto	u2141
  3225     0647  2E49               	goto	u2140
  3226     0648                     u2141:
  3227     0648  2DC7               	goto	l1899
  3228     0649                     u2140:
  3229     0649                     l32:
  3230     0649  0008               	return
  3231     064A                     __end_of_Get_Expression:
  3232                           
  3233                           	psect	text15
  3234     0138                     __ptext15:	
  3235 ;; *************** function _lcd_set_cursor *****************
  3236 ;; Defined at:
  3237 ;;		line 87 in file "lcd.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  r               1    wreg     unsigned char 
  3240 ;;  c               1    4[COMMON] unsigned char 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  r               1    6[COMMON] unsigned char 
  3243 ;;  Temp            1    9[COMMON] unsigned char 
  3244 ;;  High4           1    8[COMMON] unsigned char 
  3245 ;;  Low4            1    7[COMMON] unsigned char 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0, pclath, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         1       0       0       0       0
  3256 ;;      Locals:         4       0       0       0       0
  3257 ;;      Temps:          1       0       0       0       0
  3258 ;;      Totals:         6       0       0       0       0
  3259 ;;Total ram usage:        6 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; Hardware stack levels required when called: 2
  3262 ;; This function calls:
  3263 ;;		_LCD_SEND_4BIT_CMD
  3264 ;; This function is called by:
  3265 ;;		_Get_Expression
  3266 ;;		_lcd_chr
  3267 ;;		_lcd_out
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271     0138                     _lcd_set_cursor:	
  3272                           ;psect for function _lcd_set_cursor
  3273                           
  3274                           
  3275                           ;incstack = 0
  3276                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3277                           ;lcd_set_cursor@r stored from wreg
  3278     0138  00F6               	movwf	lcd_set_cursor@r
  3279     0139                     l1499:
  3280                           
  3281                           ;lcd.c: 87: void lcd_set_cursor(unsigned char r, unsigned char c);lcd.c: 88: {;lcd.c: 89
      +                          :   unsigned char Temp,Low4,High4;;lcd.c: 90:   if(r == 1)
  3282     0139  0376               	decf	lcd_set_cursor@r,w
  3283     013A  1D03               	btfss	3,2
  3284     013B  293D               	goto	u1261
  3285     013C  293E               	goto	u1260
  3286     013D                     u1261:
  3287     013D  295A               	goto	l1509
  3288     013E                     u1260:
  3289     013E                     l1501:
  3290                           
  3291                           ;lcd.c: 91:   {;lcd.c: 92:     Temp = 0x80 + c - 1;
  3292     013E  0874               	movf	lcd_set_cursor@c,w
  3293     013F  3E7F               	addlw	127
  3294     0140  00F9               	movwf	lcd_set_cursor@Temp
  3295                           
  3296                           ;lcd.c: 93:     High4 = Temp >> 4;
  3297     0141  0879               	movf	lcd_set_cursor@Temp,w
  3298     0142  00F5               	movwf	??_lcd_set_cursor
  3299     0143  3004               	movlw	4
  3300     0144                     u1275:
  3301     0144  1003               	clrc
  3302     0145  0CF5               	rrf	??_lcd_set_cursor,f
  3303     0146  3EFF               	addlw	-1
  3304     0147  1D03               	skipz
  3305     0148  2944               	goto	u1275
  3306     0149  0875               	movf	??_lcd_set_cursor,w
  3307     014A  00F8               	movwf	lcd_set_cursor@High4
  3308     014B                     l1503:
  3309                           
  3310                           ;lcd.c: 94:     Low4 = Temp & 0x0F;
  3311     014B  0879               	movf	lcd_set_cursor@Temp,w
  3312     014C  390F               	andlw	15
  3313     014D  00F7               	movwf	lcd_set_cursor@Low4
  3314     014E                     l1505:
  3315                           
  3316                           ;lcd.c: 95:     LCD_SEND_4BIT_CMD(High4);
  3317     014E  0878               	movf	lcd_set_cursor@High4,w
  3318     014F  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3319     0154                     l1507:
  3320                           
  3321                           ;lcd.c: 96:     LCD_SEND_4BIT_CMD(Low4);
  3322     0154  0877               	movf	lcd_set_cursor@Low4,w
  3323     0155  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3324     015A                     l1509:
  3325                           
  3326                           ;lcd.c: 98:   if(r == 2)
  3327     015A  3002               	movlw	2
  3328     015B  0676               	xorwf	lcd_set_cursor@r,w
  3329     015C  1D03               	btfss	3,2
  3330     015D  295F               	goto	u1281
  3331     015E  2960               	goto	u1280
  3332     015F                     u1281:
  3333     015F  297C               	goto	l253
  3334     0160                     u1280:
  3335     0160                     l1511:
  3336                           
  3337                           ;lcd.c: 99:   {;lcd.c: 100:     Temp = 0xC0 + c - 1;
  3338     0160  0874               	movf	lcd_set_cursor@c,w
  3339     0161  3EBF               	addlw	191
  3340     0162  00F9               	movwf	lcd_set_cursor@Temp
  3341                           
  3342                           ;lcd.c: 101:     High4 = Temp >> 4;
  3343     0163  0879               	movf	lcd_set_cursor@Temp,w
  3344     0164  00F5               	movwf	??_lcd_set_cursor
  3345     0165  3004               	movlw	4
  3346     0166                     u1295:
  3347     0166  1003               	clrc
  3348     0167  0CF5               	rrf	??_lcd_set_cursor,f
  3349     0168  3EFF               	addlw	-1
  3350     0169  1D03               	skipz
  3351     016A  2966               	goto	u1295
  3352     016B  0875               	movf	??_lcd_set_cursor,w
  3353     016C  00F8               	movwf	lcd_set_cursor@High4
  3354     016D                     l1513:
  3355                           
  3356                           ;lcd.c: 102:     Low4 = Temp & 0x0F;
  3357     016D  0879               	movf	lcd_set_cursor@Temp,w
  3358     016E  390F               	andlw	15
  3359     016F  00F7               	movwf	lcd_set_cursor@Low4
  3360     0170                     l1515:
  3361                           
  3362                           ;lcd.c: 103:     LCD_SEND_4BIT_CMD(High4);
  3363     0170  0878               	movf	lcd_set_cursor@High4,w
  3364     0171  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3365     0176                     l1517:
  3366                           
  3367                           ;lcd.c: 104:     LCD_SEND_4BIT_CMD(Low4);
  3368     0176  0877               	movf	lcd_set_cursor@Low4,w
  3369     0177  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3370     017C                     l253:
  3371     017C  0008               	return
  3372     017D                     __end_of_lcd_set_cursor:
  3373                           
  3374                           	psect	text16
  3375     0099                     __ptext16:	
  3376 ;; *************** function _lcd_cmd *****************
  3377 ;; Defined at:
  3378 ;;		line 80 in file "lcd.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  command         1    wreg     unsigned char 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  command         1    5[COMMON] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, pclath, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         0       0       0       0       0
  3393 ;;      Locals:         1       0       0       0       0
  3394 ;;      Temps:          1       0       0       0       0
  3395 ;;      Totals:         2       0       0       0       0
  3396 ;;Total ram usage:        2 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 2
  3399 ;; This function calls:
  3400 ;;		_LCD_SEND_4BIT_CMD
  3401 ;; This function is called by:
  3402 ;;		_Get_Expression
  3403 ;;		_main
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407     0099                     _lcd_cmd:	
  3408                           ;psect for function _lcd_cmd
  3409                           
  3410                           
  3411                           ;incstack = 0
  3412                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3413                           ;lcd_cmd@command stored from wreg
  3414     0099  00F5               	movwf	lcd_cmd@command
  3415     009A                     l1629:
  3416                           
  3417                           ;lcd.c: 80: void lcd_cmd(unsigned char command);lcd.c: 81: {;lcd.c: 83:   LCD_SEND_4BIT_
      +                          CMD( (command & 0xF0) >> 4 );
  3418     009A  0875               	movf	lcd_cmd@command,w
  3419     009B  00F4               	movwf	??_lcd_cmd
  3420     009C  3004               	movlw	4
  3421     009D                     u1535:
  3422     009D  1003               	clrc
  3423     009E  0CF4               	rrf	??_lcd_cmd,f
  3424     009F  3EFF               	addlw	-1
  3425     00A0  1D03               	skipz
  3426     00A1  289D               	goto	u1535
  3427     00A2  0874               	movf	??_lcd_cmd,w
  3428     00A3  390F               	andlw	15
  3429     00A4  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3430                           
  3431                           ;lcd.c: 85:   LCD_SEND_4BIT_CMD( command & 0x0F );
  3432     00A9  0875               	movf	lcd_cmd@command,w
  3433     00AA  390F               	andlw	15
  3434     00AB  120A  118A  20B1  120A  118A  	fcall	_LCD_SEND_4BIT_CMD
  3435     00B0                     l248:
  3436     00B0  0008               	return
  3437     00B1                     __end_of_lcd_cmd:
  3438                           
  3439                           	psect	text17
  3440     00B1                     __ptext17:	
  3441 ;; *************** function _LCD_SEND_4BIT_CMD *****************
  3442 ;; Defined at:
  3443 ;;		line 22 in file "lcd.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  CMD             1    wreg     unsigned char 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  CMD             1    3[COMMON] unsigned char 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0, pclath, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         0       0       0       0       0
  3458 ;;      Locals:         1       0       0       0       0
  3459 ;;      Temps:          2       0       0       0       0
  3460 ;;      Totals:         3       0       0       0       0
  3461 ;;Total ram usage:        3 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 1
  3464 ;; This function calls:
  3465 ;;		_SET_LCD_DATA_PINS
  3466 ;; This function is called by:
  3467 ;;		_lcd_init
  3468 ;;		_lcd_cmd
  3469 ;;		_lcd_set_cursor
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473     00B1                     _LCD_SEND_4BIT_CMD:	
  3474                           ;psect for function _LCD_SEND_4BIT_CMD
  3475                           
  3476                           
  3477                           ;incstack = 0
  3478                           ; Regs used in _LCD_SEND_4BIT_CMD: [wreg+status,2+status,0+pclath+cstack]
  3479                           ;LCD_SEND_4BIT_CMD@CMD stored from wreg
  3480     00B1  00F3               	movwf	LCD_SEND_4BIT_CMD@CMD
  3481     00B2                     l1489:
  3482                           
  3483                           ;lcd.c: 22: static void LCD_SEND_4BIT_CMD(unsigned char CMD);lcd.c: 23: {;lcd.c: 25:   R
      +                          D0 = 0;
  3484     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  3485     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  3486     00B4  1008               	bcf	8,0	;volatile
  3487     00B5                     l1491:
  3488                           
  3489                           ;lcd.c: 27:   SET_LCD_DATA_PINS(CMD);
  3490     00B5  0873               	movf	LCD_SEND_4BIT_CMD@CMD,w
  3491     00B6  120A  118A  20CB  120A  118A  	fcall	_SET_LCD_DATA_PINS
  3492     00BB                     l1493:
  3493                           
  3494                           ;lcd.c: 29:   RD1 = 1;
  3495     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  3496     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  3497     00BD  1488               	bsf	8,1	;volatile
  3498     00BE                     l1495:
  3499                           
  3500                           ;lcd.c: 30:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3501     00BE  3005               	movlw	5
  3502     00BF  00F2               	movwf	??_LCD_SEND_4BIT_CMD+1
  3503     00C0  30AB               	movlw	171
  3504     00C1  00F1               	movwf	??_LCD_SEND_4BIT_CMD
  3505     00C2                     u2277:
  3506     00C2  0BF1               	decfsz	??_LCD_SEND_4BIT_CMD,f
  3507     00C3  28C2               	goto	u2277
  3508     00C4  0BF2               	decfsz	??_LCD_SEND_4BIT_CMD+1,f
  3509     00C5  28C2               	goto	u2277
  3510     00C6  28C7               	nop2
  3511     00C7                     l1497:
  3512                           
  3513                           ;lcd.c: 31:   RD1 = 0;
  3514     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  3515     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  3516     00C9  1088               	bcf	8,1	;volatile
  3517     00CA                     l239:
  3518     00CA  0008               	return
  3519     00CB                     __end_of_LCD_SEND_4BIT_CMD:
  3520                           
  3521                           	psect	text18
  3522     006B                     __ptext18:	
  3523 ;; *************** function _lcd_chr_cp *****************
  3524 ;; Defined at:
  3525 ;;		line 112 in file "lcd.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  chr             1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  chr             1    6[COMMON] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, pclath, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       0       0       0       0
  3540 ;;      Locals:         1       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0
  3542 ;;      Totals:         1       0       0       0       0
  3543 ;;Total ram usage:        1 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 2
  3546 ;; This function calls:
  3547 ;;		_LCD_Write_Char
  3548 ;; This function is called by:
  3549 ;;		_Get_Expression
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553     006B                     _lcd_chr_cp:	
  3554                           ;psect for function _lcd_chr_cp
  3555                           
  3556                           
  3557                           ;incstack = 0
  3558                           ; Regs used in _lcd_chr_cp: [wreg+status,2+status,0+pclath+cstack]
  3559                           ;lcd_chr_cp@chr stored from wreg
  3560     006B  00F6               	movwf	lcd_chr_cp@chr
  3561     006C                     l1779:
  3562                           
  3563                           ;lcd.c: 112: void lcd_chr_cp(unsigned char chr);lcd.c: 113: {;lcd.c: 114:   LCD_Write_Ch
      +                          ar(chr);
  3564     006C  0876               	movf	lcd_chr_cp@chr,w
  3565     006D  120A  118A  21C9  120A  118A  	fcall	_LCD_Write_Char
  3566     0072                     l259:
  3567     0072  0008               	return
  3568     0073                     __end_of_lcd_chr_cp:
  3569                           
  3570                           	psect	text19
  3571     01C9                     __ptext19:	
  3572 ;; *************** function _LCD_Write_Char *****************
  3573 ;; Defined at:
  3574 ;;		line 34 in file "lcd.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  Data            1    wreg     unsigned char 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  Data            1    5[COMMON] unsigned char 
  3579 ;;  High4           1    4[COMMON] unsigned char 
  3580 ;;  Low4            1    3[COMMON] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0, pclath, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         0       0       0       0       0
  3591 ;;      Locals:         3       0       0       0       0
  3592 ;;      Temps:          2       0       0       0       0
  3593 ;;      Totals:         5       0       0       0       0
  3594 ;;Total ram usage:        5 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 1
  3597 ;; This function calls:
  3598 ;;		_SET_LCD_DATA_PINS
  3599 ;; This function is called by:
  3600 ;;		_lcd_chr
  3601 ;;		_lcd_chr_cp
  3602 ;;		_lcd_out
  3603 ;;		_lcd_out_cp
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607     01C9                     _LCD_Write_Char:	
  3608                           ;psect for function _LCD_Write_Char
  3609                           
  3610                           
  3611                           ;incstack = 0
  3612                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3613                           ;LCD_Write_Char@Data stored from wreg
  3614     01C9  00F5               	movwf	LCD_Write_Char@Data
  3615     01CA                     l1561:
  3616                           
  3617                           ;lcd.c: 34: static void LCD_Write_Char(char Data);lcd.c: 35: {;lcd.c: 36:   char Low4,Hi
      +                          gh4;;lcd.c: 37:   Low4 = Data & 0x0F;
  3618     01CA  0875               	movf	LCD_Write_Char@Data,w
  3619     01CB  390F               	andlw	15
  3620     01CC  00F3               	movwf	LCD_Write_Char@Low4
  3621                           
  3622                           ;lcd.c: 38:   High4 = Data & 0xF0;
  3623     01CD  0875               	movf	LCD_Write_Char@Data,w
  3624     01CE  39F0               	andlw	240
  3625     01CF  00F4               	movwf	LCD_Write_Char@High4
  3626     01D0                     l1563:
  3627                           
  3628                           ;lcd.c: 39:   RD0 = 1;
  3629     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  3630     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  3631     01D2  1408               	bsf	8,0	;volatile
  3632     01D3                     l1565:
  3633                           
  3634                           ;lcd.c: 40:   SET_LCD_DATA_PINS(High4>>4);
  3635     01D3  0874               	movf	LCD_Write_Char@High4,w
  3636     01D4  00F1               	movwf	??_LCD_Write_Char
  3637     01D5  3004               	movlw	4
  3638     01D6                     u1425:
  3639     01D6  1003               	clrc
  3640     01D7  0CF1               	rrf	??_LCD_Write_Char,f
  3641     01D8  3EFF               	addlw	-1
  3642     01D9  1D03               	skipz
  3643     01DA  29D6               	goto	u1425
  3644     01DB  0871               	movf	??_LCD_Write_Char,w
  3645     01DC  120A  118A  20CB  120A  118A  	fcall	_SET_LCD_DATA_PINS
  3646     01E1                     l1567:
  3647                           
  3648                           ;lcd.c: 41:   RD1 = 1;
  3649     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  3650     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  3651     01E3  1488               	bsf	8,1	;volatile
  3652     01E4                     l1569:
  3653                           
  3654                           ;lcd.c: 42:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3655     01E4  3005               	movlw	5
  3656     01E5  00F2               	movwf	??_LCD_Write_Char+1
  3657     01E6  30AB               	movlw	171
  3658     01E7  00F1               	movwf	??_LCD_Write_Char
  3659     01E8                     u2287:
  3660     01E8  0BF1               	decfsz	??_LCD_Write_Char,f
  3661     01E9  29E8               	goto	u2287
  3662     01EA  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3663     01EB  29E8               	goto	u2287
  3664     01EC  29ED               	nop2
  3665     01ED                     l1571:
  3666                           
  3667                           ;lcd.c: 43:   RD1 = 0;
  3668     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3669     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  3670     01EF  1088               	bcf	8,1	;volatile
  3671     01F0                     l1573:
  3672                           
  3673                           ;lcd.c: 44:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3674     01F0  3005               	movlw	5
  3675     01F1  00F2               	movwf	??_LCD_Write_Char+1
  3676     01F2  30AB               	movlw	171
  3677     01F3  00F1               	movwf	??_LCD_Write_Char
  3678     01F4                     u2297:
  3679     01F4  0BF1               	decfsz	??_LCD_Write_Char,f
  3680     01F5  29F4               	goto	u2297
  3681     01F6  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3682     01F7  29F4               	goto	u2297
  3683     01F8  29F9               	nop2
  3684     01F9                     l1575:
  3685                           
  3686                           ;lcd.c: 45:   SET_LCD_DATA_PINS(Low4);
  3687     01F9  0873               	movf	LCD_Write_Char@Low4,w
  3688     01FA  120A  118A  20CB  120A  118A  	fcall	_SET_LCD_DATA_PINS
  3689     01FF                     l1577:
  3690                           
  3691                           ;lcd.c: 46:   RD1 = 1;
  3692     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  3693     0200  1303               	bcf	3,6	;RP1=0, select bank0
  3694     0201  1488               	bsf	8,1	;volatile
  3695     0202                     l1579:
  3696                           
  3697                           ;lcd.c: 47:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3698     0202  3005               	movlw	5
  3699     0203  00F2               	movwf	??_LCD_Write_Char+1
  3700     0204  30AB               	movlw	171
  3701     0205  00F1               	movwf	??_LCD_Write_Char
  3702     0206                     u2307:
  3703     0206  0BF1               	decfsz	??_LCD_Write_Char,f
  3704     0207  2A06               	goto	u2307
  3705     0208  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3706     0209  2A06               	goto	u2307
  3707     020A  2A0B               	nop2
  3708     020B                     l1581:
  3709                           
  3710                           ;lcd.c: 48:   RD1 = 0;
  3711     020B  1283               	bcf	3,5	;RP0=0, select bank0
  3712     020C  1303               	bcf	3,6	;RP1=0, select bank0
  3713     020D  1088               	bcf	8,1	;volatile
  3714     020E                     l1583:
  3715                           
  3716                           ;lcd.c: 49:   _delay((unsigned long)((1800)*((8000000)/4000000.0)));
  3717     020E  3005               	movlw	5
  3718     020F  00F2               	movwf	??_LCD_Write_Char+1
  3719     0210  30AB               	movlw	171
  3720     0211  00F1               	movwf	??_LCD_Write_Char
  3721     0212                     u2317:
  3722     0212  0BF1               	decfsz	??_LCD_Write_Char,f
  3723     0213  2A12               	goto	u2317
  3724     0214  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3725     0215  2A12               	goto	u2317
  3726     0216  2A17               	nop2
  3727     0217                     l242:
  3728     0217  0008               	return
  3729     0218                     __end_of_LCD_Write_Char:
  3730                           
  3731                           	psect	text20
  3732     00CB                     __ptext20:	
  3733 ;; *************** function _SET_LCD_DATA_PINS *****************
  3734 ;; Defined at:
  3735 ;;		line 3 in file "lcd.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  Data            1    wreg     unsigned char 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  Data            1    0[COMMON] unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         0       0       0       0       0
  3750 ;;      Locals:         1       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0
  3752 ;;      Totals:         1       0       0       0       0
  3753 ;;Total ram usage:        1 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_LCD_SEND_4BIT_CMD
  3759 ;;		_LCD_Write_Char
  3760 ;;		_lcd_init
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764     00CB                     _SET_LCD_DATA_PINS:	
  3765                           ;psect for function _SET_LCD_DATA_PINS
  3766                           
  3767                           
  3768                           ;incstack = 0
  3769                           ; Regs used in _SET_LCD_DATA_PINS: [wreg]
  3770                           ;SET_LCD_DATA_PINS@Data stored from wreg
  3771     00CB  00F0               	movwf	SET_LCD_DATA_PINS@Data
  3772     00CC                     l1433:
  3773                           
  3774                           ;lcd.c: 3: static void SET_LCD_DATA_PINS(unsigned char Data);lcd.c: 4: {;lcd.c: 5:   if(
      +                          Data & 1)
  3775     00CC  1C70               	btfss	SET_LCD_DATA_PINS@Data,0
  3776     00CD  28CF               	goto	u1121
  3777     00CE  28D0               	goto	u1120
  3778     00CF                     u1121:
  3779     00CF  28D4               	goto	l228
  3780     00D0                     u1120:
  3781     00D0                     l1435:
  3782                           
  3783                           ;lcd.c: 6:     RD2 = 1;
  3784     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  3785     00D1  1303               	bcf	3,6	;RP1=0, select bank0
  3786     00D2  1508               	bsf	8,2	;volatile
  3787     00D3  28D7               	goto	l229
  3788     00D4                     l228:	
  3789                           ;lcd.c: 7:   else
  3790                           
  3791                           
  3792                           ;lcd.c: 8:     RD2 = 0;
  3793     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  3794     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  3795     00D6  1108               	bcf	8,2	;volatile
  3796     00D7                     l229:
  3797                           
  3798                           ;lcd.c: 9:   if(Data & 2)
  3799     00D7  1CF0               	btfss	SET_LCD_DATA_PINS@Data,1
  3800     00D8  28DA               	goto	u1131
  3801     00D9  28DB               	goto	u1130
  3802     00DA                     u1131:
  3803     00DA  28DD               	goto	l230
  3804     00DB                     u1130:
  3805     00DB                     l1437:
  3806                           
  3807                           ;lcd.c: 10:     RD3 = 1;
  3808     00DB  1588               	bsf	8,3	;volatile
  3809     00DC  28DE               	goto	l231
  3810     00DD                     l230:	
  3811                           ;lcd.c: 11:   else
  3812                           
  3813                           
  3814                           ;lcd.c: 12:     RD3 = 0;
  3815     00DD  1188               	bcf	8,3	;volatile
  3816     00DE                     l231:
  3817                           
  3818                           ;lcd.c: 13:   if(Data & 4)
  3819     00DE  1D70               	btfss	SET_LCD_DATA_PINS@Data,2
  3820     00DF  28E1               	goto	u1141
  3821     00E0  28E2               	goto	u1140
  3822     00E1                     u1141:
  3823     00E1  28E4               	goto	l232
  3824     00E2                     u1140:
  3825     00E2                     l1439:
  3826                           
  3827                           ;lcd.c: 14:     RD4 = 1;
  3828     00E2  1608               	bsf	8,4	;volatile
  3829     00E3  28E5               	goto	l233
  3830     00E4                     l232:	
  3831                           ;lcd.c: 15:   else
  3832                           
  3833                           
  3834                           ;lcd.c: 16:     RD4 = 0;
  3835     00E4  1208               	bcf	8,4	;volatile
  3836     00E5                     l233:
  3837                           
  3838                           ;lcd.c: 17:   if(Data & 8)
  3839     00E5  1DF0               	btfss	SET_LCD_DATA_PINS@Data,3
  3840     00E6  28E8               	goto	u1151
  3841     00E7  28E9               	goto	u1150
  3842     00E8                     u1151:
  3843     00E8  28EB               	goto	l234
  3844     00E9                     u1150:
  3845     00E9                     l1441:
  3846                           
  3847                           ;lcd.c: 18:     RD5 = 1;
  3848     00E9  1688               	bsf	8,5	;volatile
  3849     00EA  28EC               	goto	l236
  3850     00EB                     l234:	
  3851                           ;lcd.c: 19:   else
  3852                           
  3853                           
  3854                           ;lcd.c: 20:     RD5 = 0;
  3855     00EB  1288               	bcf	8,5	;volatile
  3856     00EC                     l236:
  3857     00EC  0008               	return
  3858     00ED                     __end_of_SET_LCD_DATA_PINS:
  3859                           
  3860                           	psect	text21
  3861     064A                     __ptext21:	
  3862 ;; *************** function _keypad_get_key *****************
  3863 ;; Defined at:
  3864 ;;		line 13 in file "keypad.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      unsigned char 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3878 ;;      Params:         0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0
  3881 ;;      Totals:         0       0       0       0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels used: 1
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_Get_Expression
  3888 ;;		_main
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892     064A                     _keypad_get_key:	
  3893                           ;psect for function _keypad_get_key
  3894                           
  3895     064A                     l1631:	
  3896                           ;incstack = 0
  3897                           ; Regs used in _keypad_get_key: [wreg+status,2]
  3898                           
  3899                           
  3900                           ;keypad.c: 15:      PORTB = 0xFF;
  3901     064A  30FF               	movlw	255
  3902     064B  1283               	bcf	3,5	;RP0=0, select bank0
  3903     064C  1303               	bcf	3,6	;RP1=0, select bank0
  3904     064D  0086               	movwf	6	;volatile
  3905     064E                     l1633:
  3906                           
  3907                           ;keypad.c: 16:      (PORTB = PORTB & (~(1<<0))) ;
  3908     064E  0806               	movf	6,w	;volatile
  3909     064F  39FE               	andlw	254
  3910     0650  0086               	movwf	6	;volatile
  3911     0651                     l1635:
  3912                           
  3913                           ;keypad.c: 19:      if ((PORTB & (1<<4)?1:0) == 0 ){
  3914     0651  1A06               	btfsc	6,4	;volatile
  3915     0652  2E54               	goto	u1541
  3916     0653  2E55               	goto	u1540
  3917     0654                     u1541:
  3918     0654  2E5B               	goto	l123
  3919     0655                     u1540:
  3920     0655                     l124:
  3921     0655  1E06               	btfss	6,4	;volatile
  3922     0656  2E58               	goto	u1551
  3923     0657  2E59               	goto	u1550
  3924     0658                     u1551:
  3925     0658  2E55               	goto	l124
  3926     0659                     u1550:
  3927     0659                     l1639:
  3928                           
  3929                           ;keypad.c: 21:         return '7' ;
  3930     0659  3037               	movlw	55
  3931     065A  2F01               	goto	l127
  3932     065B                     l123:
  3933     065B  1A86               	btfsc	6,5	;volatile
  3934     065C  2E5E               	goto	u1561
  3935     065D  2E5F               	goto	u1560
  3936     065E                     u1561:
  3937     065E  2E65               	goto	l129
  3938     065F                     u1560:
  3939     065F                     l130:
  3940     065F  1E86               	btfss	6,5	;volatile
  3941     0660  2E62               	goto	u1571
  3942     0661  2E63               	goto	u1570
  3943     0662                     u1571:
  3944     0662  2E5F               	goto	l130
  3945     0663                     u1570:
  3946     0663                     l1647:
  3947                           
  3948                           ;keypad.c: 24:          return '8' ;
  3949     0663  3038               	movlw	56
  3950     0664  2F01               	goto	l127
  3951     0665                     l129:
  3952     0665  1B06               	btfsc	6,6	;volatile
  3953     0666  2E68               	goto	u1581
  3954     0667  2E69               	goto	u1580
  3955     0668                     u1581:
  3956     0668  2E6F               	goto	l134
  3957     0669                     u1580:
  3958     0669                     l135:
  3959     0669  1F06               	btfss	6,6	;volatile
  3960     066A  2E6C               	goto	u1591
  3961     066B  2E6D               	goto	u1590
  3962     066C                     u1591:
  3963     066C  2E69               	goto	l135
  3964     066D                     u1590:
  3965     066D                     l1655:
  3966                           
  3967                           ;keypad.c: 27:          return '9' ;
  3968     066D  3039               	movlw	57
  3969     066E  2F01               	goto	l127
  3970     066F                     l134:
  3971     066F  1B86               	btfsc	6,7	;volatile
  3972     0670  2E72               	goto	u1601
  3973     0671  2E73               	goto	u1600
  3974     0672                     u1601:
  3975     0672  2E79               	goto	l133
  3976     0673                     u1600:
  3977     0673                     l140:
  3978     0673  1F86               	btfss	6,7	;volatile
  3979     0674  2E76               	goto	u1611
  3980     0675  2E77               	goto	u1610
  3981     0676                     u1611:
  3982     0676  2E73               	goto	l140
  3983     0677                     u1610:
  3984     0677                     l1663:
  3985                           
  3986                           ;keypad.c: 30:          return '/' ;
  3987     0677  302F               	movlw	47
  3988     0678  2F01               	goto	l127
  3989     0679                     l133:
  3990     0679                     l1667:
  3991                           
  3992                           ;keypad.c: 33:      PORTB = 0xFF;
  3993     0679  30FF               	movlw	255
  3994     067A  0086               	movwf	6	;volatile
  3995     067B                     l1669:
  3996                           
  3997                           ;keypad.c: 34:      (PORTB = PORTB & (~(1<<1))) ;
  3998     067B  0806               	movf	6,w	;volatile
  3999     067C  39FD               	andlw	253
  4000     067D  0086               	movwf	6	;volatile
  4001     067E                     l1671:
  4002                           
  4003                           ;keypad.c: 37:      if ((PORTB & (1<<4)?1:0) == 0 ){
  4004     067E  1A06               	btfsc	6,4	;volatile
  4005     067F  2E81               	goto	u1621
  4006     0680  2E82               	goto	u1620
  4007     0681                     u1621:
  4008     0681  2E88               	goto	l143
  4009     0682                     u1620:
  4010     0682                     l144:
  4011     0682  1E06               	btfss	6,4	;volatile
  4012     0683  2E85               	goto	u1631
  4013     0684  2E86               	goto	u1630
  4014     0685                     u1631:
  4015     0685  2E82               	goto	l144
  4016     0686                     u1630:
  4017     0686                     l1675:
  4018                           
  4019                           ;keypad.c: 39:         return '4' ;
  4020     0686  3034               	movlw	52
  4021     0687  2F01               	goto	l127
  4022     0688                     l143:
  4023     0688  1A86               	btfsc	6,5	;volatile
  4024     0689  2E8B               	goto	u1641
  4025     068A  2E8C               	goto	u1640
  4026     068B                     u1641:
  4027     068B  2E92               	goto	l148
  4028     068C                     u1640:
  4029     068C                     l149:
  4030     068C  1E86               	btfss	6,5	;volatile
  4031     068D  2E8F               	goto	u1651
  4032     068E  2E90               	goto	u1650
  4033     068F                     u1651:
  4034     068F  2E8C               	goto	l149
  4035     0690                     u1650:
  4036     0690                     l1683:
  4037                           
  4038                           ;keypad.c: 42:          return '5' ;
  4039     0690  3035               	movlw	53
  4040     0691  2F01               	goto	l127
  4041     0692                     l148:
  4042     0692  1B06               	btfsc	6,6	;volatile
  4043     0693  2E95               	goto	u1661
  4044     0694  2E96               	goto	u1660
  4045     0695                     u1661:
  4046     0695  2E9C               	goto	l153
  4047     0696                     u1660:
  4048     0696                     l154:
  4049     0696  1F06               	btfss	6,6	;volatile
  4050     0697  2E99               	goto	u1671
  4051     0698  2E9A               	goto	u1670
  4052     0699                     u1671:
  4053     0699  2E96               	goto	l154
  4054     069A                     u1670:
  4055     069A                     l1691:
  4056                           
  4057                           ;keypad.c: 45:          return '6' ;
  4058     069A  3036               	movlw	54
  4059     069B  2F01               	goto	l127
  4060     069C                     l153:
  4061     069C  1B86               	btfsc	6,7	;volatile
  4062     069D  2E9F               	goto	u1681
  4063     069E  2EA0               	goto	u1680
  4064     069F                     u1681:
  4065     069F  2EA6               	goto	l152
  4066     06A0                     u1680:
  4067     06A0                     l159:
  4068     06A0  1F86               	btfss	6,7	;volatile
  4069     06A1  2EA3               	goto	u1691
  4070     06A2  2EA4               	goto	u1690
  4071     06A3                     u1691:
  4072     06A3  2EA0               	goto	l159
  4073     06A4                     u1690:
  4074     06A4                     l1699:
  4075                           
  4076                           ;keypad.c: 48:          return '*' ;
  4077     06A4  302A               	movlw	42
  4078     06A5  2F01               	goto	l127
  4079     06A6                     l152:
  4080     06A6                     l1703:
  4081                           
  4082                           ;keypad.c: 51:      PORTB = 0xFF;
  4083     06A6  30FF               	movlw	255
  4084     06A7  0086               	movwf	6	;volatile
  4085     06A8                     l1705:
  4086                           
  4087                           ;keypad.c: 52:      (PORTB = PORTB & (~(1<<2))) ;
  4088     06A8  0806               	movf	6,w	;volatile
  4089     06A9  39FB               	andlw	251
  4090     06AA  0086               	movwf	6	;volatile
  4091     06AB                     l1707:
  4092                           
  4093                           ;keypad.c: 55:       if ((PORTB & (1<<4)?1:0) == 0 ){
  4094     06AB  1A06               	btfsc	6,4	;volatile
  4095     06AC  2EAE               	goto	u1701
  4096     06AD  2EAF               	goto	u1700
  4097     06AE                     u1701:
  4098     06AE  2EB5               	goto	l162
  4099     06AF                     u1700:
  4100     06AF                     l163:
  4101     06AF  1E06               	btfss	6,4	;volatile
  4102     06B0  2EB2               	goto	u1711
  4103     06B1  2EB3               	goto	u1710
  4104     06B2                     u1711:
  4105     06B2  2EAF               	goto	l163
  4106     06B3                     u1710:
  4107     06B3                     l1711:
  4108                           
  4109                           ;keypad.c: 57:         return '1' ;
  4110     06B3  3031               	movlw	49
  4111     06B4  2F01               	goto	l127
  4112     06B5                     l162:
  4113     06B5  1A86               	btfsc	6,5	;volatile
  4114     06B6  2EB8               	goto	u1721
  4115     06B7  2EB9               	goto	u1720
  4116     06B8                     u1721:
  4117     06B8  2EBF               	goto	l167
  4118     06B9                     u1720:
  4119     06B9                     l168:
  4120     06B9  1E86               	btfss	6,5	;volatile
  4121     06BA  2EBC               	goto	u1731
  4122     06BB  2EBD               	goto	u1730
  4123     06BC                     u1731:
  4124     06BC  2EB9               	goto	l168
  4125     06BD                     u1730:
  4126     06BD                     l1719:
  4127                           
  4128                           ;keypad.c: 60:          return '2' ;
  4129     06BD  3032               	movlw	50
  4130     06BE  2F01               	goto	l127
  4131     06BF                     l167:
  4132     06BF  1B06               	btfsc	6,6	;volatile
  4133     06C0  2EC2               	goto	u1741
  4134     06C1  2EC3               	goto	u1740
  4135     06C2                     u1741:
  4136     06C2  2EC9               	goto	l172
  4137     06C3                     u1740:
  4138     06C3                     l173:
  4139     06C3  1F06               	btfss	6,6	;volatile
  4140     06C4  2EC6               	goto	u1751
  4141     06C5  2EC7               	goto	u1750
  4142     06C6                     u1751:
  4143     06C6  2EC3               	goto	l173
  4144     06C7                     u1750:
  4145     06C7                     l1727:
  4146                           
  4147                           ;keypad.c: 63:          return '3' ;
  4148     06C7  3033               	movlw	51
  4149     06C8  2F01               	goto	l127
  4150     06C9                     l172:
  4151     06C9  1B86               	btfsc	6,7	;volatile
  4152     06CA  2ECC               	goto	u1761
  4153     06CB  2ECD               	goto	u1760
  4154     06CC                     u1761:
  4155     06CC  2ED3               	goto	l171
  4156     06CD                     u1760:
  4157     06CD                     l178:
  4158     06CD  1F86               	btfss	6,7	;volatile
  4159     06CE  2ED0               	goto	u1771
  4160     06CF  2ED1               	goto	u1770
  4161     06D0                     u1771:
  4162     06D0  2ECD               	goto	l178
  4163     06D1                     u1770:
  4164     06D1                     l1735:
  4165                           
  4166                           ;keypad.c: 66:          return '-' ;
  4167     06D1  302D               	movlw	45
  4168     06D2  2F01               	goto	l127
  4169     06D3                     l171:
  4170     06D3                     l1739:
  4171                           
  4172                           ;keypad.c: 69:      PORTB = 0xFF;
  4173     06D3  30FF               	movlw	255
  4174     06D4  0086               	movwf	6	;volatile
  4175     06D5                     l1741:
  4176                           
  4177                           ;keypad.c: 70:      (PORTB = PORTB & (~(1<<3))) ;
  4178     06D5  0806               	movf	6,w	;volatile
  4179     06D6  39F7               	andlw	247
  4180     06D7  0086               	movwf	6	;volatile
  4181     06D8                     l1743:
  4182                           
  4183                           ;keypad.c: 73:      if ((PORTB & (1<<4)?1:0) == 0 ){
  4184     06D8  1A06               	btfsc	6,4	;volatile
  4185     06D9  2EDB               	goto	u1781
  4186     06DA  2EDC               	goto	u1780
  4187     06DB                     u1781:
  4188     06DB  2EE2               	goto	l181
  4189     06DC                     u1780:
  4190     06DC                     l182:
  4191     06DC  1E06               	btfss	6,4	;volatile
  4192     06DD  2EDF               	goto	u1791
  4193     06DE  2EE0               	goto	u1790
  4194     06DF                     u1791:
  4195     06DF  2EDC               	goto	l182
  4196     06E0                     u1790:
  4197     06E0                     l1747:
  4198                           
  4199                           ;keypad.c: 75:         return 'c' ;
  4200     06E0  3063               	movlw	99
  4201     06E1  2F01               	goto	l127
  4202     06E2                     l181:
  4203     06E2  1A86               	btfsc	6,5	;volatile
  4204     06E3  2EE5               	goto	u1801
  4205     06E4  2EE6               	goto	u1800
  4206     06E5                     u1801:
  4207     06E5  2EEC               	goto	l186
  4208     06E6                     u1800:
  4209     06E6                     l187:
  4210     06E6  1E86               	btfss	6,5	;volatile
  4211     06E7  2EE9               	goto	u1811
  4212     06E8  2EEA               	goto	u1810
  4213     06E9                     u1811:
  4214     06E9  2EE6               	goto	l187
  4215     06EA                     u1810:
  4216     06EA                     l1755:
  4217                           
  4218                           ;keypad.c: 78:          return '0' ;
  4219     06EA  3030               	movlw	48
  4220     06EB  2F01               	goto	l127
  4221     06EC                     l186:
  4222     06EC  1B06               	btfsc	6,6	;volatile
  4223     06ED  2EEF               	goto	u1821
  4224     06EE  2EF0               	goto	u1820
  4225     06EF                     u1821:
  4226     06EF  2EF6               	goto	l191
  4227     06F0                     u1820:
  4228     06F0                     l192:
  4229     06F0  1F06               	btfss	6,6	;volatile
  4230     06F1  2EF3               	goto	u1831
  4231     06F2  2EF4               	goto	u1830
  4232     06F3                     u1831:
  4233     06F3  2EF0               	goto	l192
  4234     06F4                     u1830:
  4235     06F4                     l1763:
  4236                           
  4237                           ;keypad.c: 81:          return '=' ;
  4238     06F4  303D               	movlw	61
  4239     06F5  2F01               	goto	l127
  4240     06F6                     l191:
  4241     06F6  1B86               	btfsc	6,7	;volatile
  4242     06F7  2EF9               	goto	u1841
  4243     06F8  2EFA               	goto	u1840
  4244     06F9                     u1841:
  4245     06F9  2F00               	goto	l190
  4246     06FA                     u1840:
  4247     06FA                     l197:
  4248     06FA  1F86               	btfss	6,7	;volatile
  4249     06FB  2EFD               	goto	u1851
  4250     06FC  2EFE               	goto	u1850
  4251     06FD                     u1851:
  4252     06FD  2EFA               	goto	l197
  4253     06FE                     u1850:
  4254     06FE                     l1771:
  4255                           
  4256                           ;keypad.c: 84:          return '+' ;
  4257     06FE  302B               	movlw	43
  4258     06FF  2F01               	goto	l127
  4259     0700                     l190:
  4260     0700                     l1775:
  4261                           
  4262                           ;keypad.c: 86:      return '\0' ;
  4263     0700  3000               	movlw	0
  4264     0701                     l127:
  4265     0701  0008               	return
  4266     0702                     __end_of_keypad_get_key:
  4267     007E                     btemp	set	126	;btemp
  4268     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      69
    BANK1            80      0      18
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 18
		 -> main@expr(BANK0[18]), 

    Delete_Pre_Num@expr	PTR unsigned char  size(1) Largest target is 18
		 -> main@expr(BANK0[18]), 

    Get_Expression@equ	PTR unsigned char  size(1) Largest target is 18
		 -> main@expr(BANK0[18]), 

    Get_Pre_Num@expr	PTR unsigned char  size(1) Largest target is 18
		 -> main@expr(BANK0[18]), 

    Solve_Add_Sub@expr	PTR unsigned char  size(1) Largest target is 18
		 -> main@expr(BANK0[18]), 

    Solve_expr@expr	PTR unsigned char  size(1) Largest target is 18
		 -> main@expr(BANK0[18]), 

    Solve_Mul_Div@expr	PTR unsigned char  size(1) Largest target is 18
		 -> main@expr(BANK0[18]), 


Critical Paths under _main in COMMON

    _lcd_init->_LCD_SEND_4BIT_CMD
    _Solve_Mul_Div->_atoi
    _Get_Pre_Num->_atoi
    _Solve_Add_Sub->_atoi
    _atoi->___wmul
    _lcd_chr->_lcd_set_cursor
    ___awdiv->_atoi
    _Get_Expression->_lcd_set_cursor
    _lcd_set_cursor->_LCD_SEND_4BIT_CMD
    _lcd_cmd->_LCD_SEND_4BIT_CMD
    _LCD_SEND_4BIT_CMD->_SET_LCD_DATA_PINS
    _lcd_chr_cp->_LCD_Write_Char
    _LCD_Write_Char->_SET_LCD_DATA_PINS

Critical Paths under _main in BANK0

    _main->_Solve_expr
    _Solve_expr->_Solve_Mul_Div
    _Solve_Mul_Div->___awdiv
    _Print_Result->___awdiv
    ___awdiv->_Get_Pre_Num

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   11203
                                             30 BANK0     22    22      0
                     _Get_Expression
                       _Print_Result
                         _Solve_expr
                     _keypad_get_key
                        _keypad_init
                            _lcd_cmd
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              4 COMMON     2     2      0
                  _LCD_SEND_4BIT_CMD
                  _SET_LCD_DATA_PINS
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Solve_expr                                           5     3      2    6153
                                             25 BANK0      5     3      2
                      _Solve_Add_Sub
                      _Solve_Mul_Div
 ---------------------------------------------------------------------------------
 (2) _Solve_Mul_Div                                       12    10      2    4662
                                             13 BANK0     12    10      2
                     _Delete_Pre_Num
                        _Get_Pre_Num
                            ___awdiv
                             ___wmul
                               _atoi
 ---------------------------------------------------------------------------------
 (3) _Get_Pre_Num                                          5     3      2    1523
                                              0 BANK0      5     3      2
                               _atoi
 ---------------------------------------------------------------------------------
 (3) _Delete_Pre_Num                                       4     3      1     420
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Solve_Add_Sub                                        8     6      2    1389
                                              0 BANK0      8     6      2
                               _atoi
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     974
                                              6 COMMON     8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Print_Result                                         5     3      2    3059
                                             13 BANK0      5     3      2
                            ___awdiv
                            ___awmod
                             ___wmul
                            _lcd_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_chr                                              3     1      2    1156
                                             10 COMMON     3     1      2
                     _LCD_Write_Char
                            ___awmod (ARG)
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              5 BANK0      8     4      4
                        _Get_Pre_Num (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (1) _Get_Expression                                      21    21      0    1449
                                             10 COMMON     1     1      0
                                              0 BANK0     20    20      0
                     _keypad_get_key
                         _lcd_chr_cp
                            _lcd_cmd
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       6     5      1     608
                                              4 COMMON     6     5      1
                  _LCD_SEND_4BIT_CMD
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              2     2      0     154
                                              4 COMMON     2     2      0
                  _LCD_SEND_4BIT_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_SEND_4BIT_CMD                                    3     3      0     110
                                              1 COMMON     3     3      0
                  _SET_LCD_DATA_PINS
 ---------------------------------------------------------------------------------
 (2) _lcd_chr_cp                                           1     1      0     200
                                              6 COMMON     1     1      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       5     5      0     178
                                              1 COMMON     5     5      0
                  _SET_LCD_DATA_PINS
 ---------------------------------------------------------------------------------
 (2) _SET_LCD_DATA_PINS                                    1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _keypad_get_key                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Get_Expression
     _keypad_get_key
     _lcd_chr_cp
       _LCD_Write_Char
         _SET_LCD_DATA_PINS
     _lcd_cmd
       _LCD_SEND_4BIT_CMD
         _SET_LCD_DATA_PINS
     _lcd_set_cursor
       _LCD_SEND_4BIT_CMD
   _Print_Result
     ___awdiv
       _Get_Pre_Num (ARG)
         _atoi
           ___wmul
       _atoi (ARG)
     ___awmod
     ___wmul
     _lcd_chr
       _LCD_Write_Char
       ___awmod (ARG)
       _lcd_set_cursor (ARG)
   _Solve_expr
     _Solve_Add_Sub
       _atoi
     _Solve_Mul_Div
       _Delete_Pre_Num
       _Get_Pre_Num
       ___awdiv
       ___wmul
       _atoi
   _keypad_get_key
   _keypad_init
   _lcd_cmd
   _lcd_init
     _LCD_SEND_4BIT_CMD
     _SET_LCD_DATA_PINS

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      65       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      45       5       86.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      12       7       22.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      65      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 20 02:33:29 2024

   __end_of_Delete_Pre_Num 01C9                         l32 0649                         l43 01C8  
                       l35 0183                         l52 03AA                         l46 0348  
                       l62 0790                         l92 02C3                         l85 059C  
                       l69 07EA                         l96 02D8                         l88 0137  
          Print_Result@col 0031               ___awdiv@sign 002A            Print_Result@row 0030  
                       fsr 0004        ___wmul@multiplicand 0072                        l120 0088  
                      l130 065F                        l123 065B                        l140 0673  
                      l124 0655                        l133 0679                        l134 066F  
                      l230 00DD                        l143 0688                        l135 0669  
                      l127 0701                        l231 00DE                        l152 06A6  
                      l144 0682                        l232 00E4                        l153 069C  
                      l129 0665                        l233 00E5                        l162 06B5  
                      l154 0696                        l234 00EB                        l242 0217  
                      l171 06D3                        l163 06AF                        l172 06C9  
                      l148 0692                        l236 00EC                        l228 00D4  
           lcd_cmd@command 0075                        l181 06E2                        l173 06C3  
                      l149 068C                        l229 00D7                        l253 017C  
                      l245 0414                        l190 0700                        l182 06DC  
                      l510 0341                        l191 06F6                        l167 06BF  
                      l159 06A0                        l239 00CA                        l192 06F0  
                      l168 06B9                        l248 00B0                        l256 0098  
                      l186 06EC                        l178 06CD                        l187 06E6  
                      l259 0072                        l523 0270                        l197 06FA  
                      l357 00F9                        l359 0111                        l829 04FA  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
         Print_Result@flag 002F             Solve_Add_Sub@i 0026                        fsr0 0004  
                      indf 0000               ___awmod@sign 0075            ?_lcd_set_cursor 0074  
                     l2001 043E                       l2011 0462                       l2003 0445  
                     l2013 046E                       l2005 044B                       l2015 0477  
                     l2007 0458                       l2009 045C                       l1501 013E  
                     l1511 0160                       l1503 014B                       l1441 00E9  
                     l1433 00CC                       l1513 016D                       l1505 014E  
                     l1601 02F6                       l1521 0181                       l1435 00D0  
                     l1515 0170                       l1507 0154                       l1611 030E  
                     l1603 02FC                       l1451 0107                       l1443 00ED  
                     l1531 01B6                       l1523 0188                       l1437 00DB  
                     l1517 0176                       l1509 015A                       l1613 031F  
                     l1605 02FF                       l1621 0333                       l1453 010D  
                     l1445 00EF                       l1461 048E                       l1533 01BE  
                     l1525 0194                       l1541 034D                       l1711 06B3  
                     l1703 06A6                       l1631 064A                       l1439 00E2  
                     l1623 0338                       l1615 0325                       l1607 0306  
                     l1447 00F3                       l1471 04B1                       l1463 0497  
                     l1527 019F                       l1535 01C2                       l1519 017E  
                     l1551 0386                       l1543 0359                       l1705 06A8  
                     l1633 064E                       l1561 01CA                       l1625 033D  
                     l1617 0326                       l1609 030A                       l1449 0100  
                     l1481 04E5                       l1465 04A2                       l1457 0486  
                     l1529 01AA                       l1545 0364                       l1537 0345  
                     l1801 07B0                       l1707 06AB                       l1635 0651  
                     l1571 01ED                       l1563 01D0                       l1491 00B5  
                     l1619 032D                       l1483 04EA                       l1475 04BA  
                     l1467 04AA                       l1459 048A                       l1547 036F  
                     l1539 0346                       l1811 07E4                       l1803 07BB  
                     l1741 06D5                       l1581 020B                       l1573 01F0  
                     l1565 01D3                       l1493 00BB                       l1629 009A  
                     l1901 05CF                       l1485 04F6                       l1469 04AC  
                     l1821 051C                       l1557 039C                       l1549 037A  
                     l1805 07C8                       l1743 06D8                       l1735 06D1  
                     l1727 06C7                       l1719 06BD                       l1671 067E  
                     l1663 0677                       l1655 066D                       l1647 0663  
                     l1639 0659                       l1583 020E                       l1575 01F9  
                     l1567 01E1                       l1495 00BE                       l1911 060D  
                     l1903 05D9                       l1591 02E5                       l1479 04DA  
                     l1831 0556                       l1823 0522                       l1815 04FE  
                     l1807 07D1         Delete_Pre_Num@expr 0073                       l1577 01FF  
                     l1569 01E4                       l1497 00C7                       l1489 00B2  
                     l1921 0628                       l1905 05E3                       l1593 02E7  
                     l1585 02D9                       l1833 0562                       l1825 052E  
                     l1817 0503                       l1841 0589                       l1809 07D7  
                     l1771 06FE                       l1763 06F4                       l1755 06EA  
                     l1747 06E0                       l1739 06D3                       l1691 069A  
                     l1683 0690                       l1675 0686                       l1667 0679  
                     l1579 0202                       l1499 0139                       l1923 062E  
                     l1915 0617                       l1907 05F3                       l1595 02EB  
                     l1587 02DC                       l1851 0219                       l1843 0596  
                     l1835 056D                       l1827 053E                       l1819 0511  
                     l1931 0117                       l1669 067B                       l1917 0620  
                     l1925 0634                       l1909 05FE                       l1597 02F0  
                     l1589 02E0                       l1861 022D                       l1853 021D  
                     l1941 0277                       l1837 057A                       l1829 054E  
                     l1781 0705                       l1933 0125                       l1775 0700  
                     l1927 063C                       l1919 0622                       l1599 02F4  
                     l1871 0245                       l1863 0233                       l1855 0222  
                     l1847 008A                       l1951 02AC                       l1943 0278  
                     l1839 0583                       l1791 0735                       l1783 070A  
                     l1935 0133                       l1881 0267                       l1873 024F  
                     l1865 0236                       l1857 0224                       l1849 0218  
                     l1953 02B0                       l1945 027C                       l1793 0751  
                     l1785 0718                       l1929 0115                       l1961 03B3  
                     l1699 06A4                       l1779 006C                       l1891 05BB  
                     l1883 026C                       l1875 0255                       l1867 023D  
                     l1859 0228                       l1955 02C9                       l1947 028F  
                     l1939 0271                       l1795 0767                       l1787 0723  
                     l1971 03E4                       l1963 03B9                       l1893 05C3  
                     l1877 025C                       l1869 0241                       l1957 02CE  
                     l1949 0292                       l1797 079A                       l1789 0729  
                     l1981 0402                       l1973 03EA                       l1965 03C1  
                     l1887 05A0                       l1879 0262                       l1799 07A2  
                     l1983 0408                       l1975 03F0                       l1967 03D0  
                     l1959 03AB                       l1991 0415                       l1889 05B2  
                     l1985 040E                       l1977 03F6                       l1969 03D9  
                     l1993 0431                       l1899 05C7                       l1987 007B  
                     l1979 03FC                       l1995 043A                       l1989 0083  
      __end_of_Get_Pre_Num 03AB                       u1120 00D0                       u2000 021D  
                     u1200 0497                       u1121 00CF                       u2001 021C  
                     u1201 0496                       u1130 00DB                       u2010 0228  
                     u1210 04A2                       u1131 00DA                       u2011 0227  
                     u1211 04A1                       u1140 00E2                       u2100 05E3  
                     u2020 0233                       u1220 04AA                       u1300 0188  
                     u1141 00E1                       u2101 05E2                       u2021 0232  
                     u1221 04A9                       u1301 0187                       u1150 00E9  
                     u2110 05F3                       u1230 04B9                       u1310 0194  
                     u1151 00E8                       u2111 05F2                       u1231 04B8  
                     u1311 0193                       u2120 0616                       u2040 0245  
                     u1160 00F3                       u1240 04E5                       u1320 019F  
                     u1400 037A                       u2200 0481                       u2121 0615  
                     u2041 0244                       u1161 00F2                       u1241 04E4  
                     u1321 019E                       u1401 0379                       u2201 0480  
                     u2130 0620                       u2050 024F                       u1250 04EA  
                     u1330 01AA                       u1410 0386                       u2131 061F  
                     u2051 024E                       u2035 0237                       u1251 04E9  
                     u1331 01A9                       u1411 0385                       u1260 013E  
                     u2140 0649                       u1340 01B5                       u1261 013D  
                     u2141 0648                       u1341 01B4                       u1510 0333  
                     u1430 02E0                       u2070 0262                       u1190 010D  
                     u2150 027C                       u1350 01C8                       u1511 0332  
                     u1431 02DF                       u2071 0261                       u2055 024B  
                     u1191 010C                       u1175 00FA                       u2151 027B  
                     u1351 01C7                       u1600 0673                       u1280 0160  
                     u1520 0338                       u1440 02EB                       u2080 0267  
                     u2160 02C9                       u1360 034D                       u1601 0672  
                     u1425 01D6                       u1281 015F                       u2145 0645  
                     u1521 0337                       u1505 0327                       u1441 02EA  
                     u2081 0266                       u2065 0256                       u1185 0101  
                     u2161 02C8                       u1361 034C                       u1610 0677  
                     u2090 05B6                       u1450 02FC                       u2170 02CE  
                     u1370 0359                       u1611 0676                       u2307 0206  
                     u1275 0144                       u1451 02FB                       u2171 02CD  
                     u1371 0358                       u1700 06AF                       u1620 0682  
                     u1540 0655                       u1380 0364                       u2180 0435  
                     u1701 06AE                       u1621 0681                       u1541 0654  
                     u2317 0212                       u1381 0363                       u2237 03BD  
                     u1710 06B3                       u1630 0686                       u1550 0659  
                     u1470 030E                       u1390 036F                       u2190 0458  
                     u1711 06B2                       u1631 0685                       u1551 0658  
                     u1535 009D                       u1295 0166                       u1471 030D  
                     u1391 036E                       u2247 03C5                       u2191 0457  
                     u1800 06E6                       u1720 06B9                       u1640 068C  
                     u1560 065F                       u1801 06E5                       u1721 06B8  
                     u1641 068B                       u1561 065E                       u1465 0300  
                     u2257 03D4                       u1810 06EA                       u1730 06BD  
                     u1650 0690                       u1570 0663                       u1490 031F  
                     u1811 06E9                       u1731 06BC                       u1651 068F  
                     u1571 0662                       u1491 031E                       u2267 03E1  
                     u2195 0454                       u1820 06F0                       u1740 06C3  
                     u1660 0696                       u1580 0669                       u1900 07BB  
                     u1821 06EF                       u1741 06C2                       u1661 0695  
                     u1581 0668                       u2277 00C2                       u1485 030F  
                     u1901 07BA                       u1830 06F4                       u1750 06C7  
                     u1670 069A                       u1590 066D                       u1910 07C8  
                     u1831 06F3                       u1751 06C6                       u1671 0699  
                     u1591 066C                       u2287 01E8                       u1495 031B  
                     u1911 07C7                       u1840 06FA                       u1760 06CD  
                     u1680 06A0                       u1920 07E4                       u1841 06F9  
                     u1761 06CC                       u1681 069F                       u2297 01F4  
                     u1921 07E3                       u1850 06FE                       u1770 06D1  
                     u1690 06A4                       u1930 0511                       u1851 06FD  
                     u1771 06D0                       u1691 06A3                       u1931 0510  
                     u1915 07C4                       u1780 06DC                       u1940 051C  
                     u1860 0718                       u1781 06DB                       u1941 051B  
                     u1925 07E0                       u1861 0717                       u1790 06E0  
                     u1950 052E                       u1870 0723                       u1791 06DF  
                     u1951 052D                       u1871 0722                       u1960 0562  
                     u1880 0735                       u1961 0561                       u1881 0734  
                     u1970 056D                       u1890 07B0                       u1971 056C  
                     u1891 07AF                       u1980 057A                       u1981 0579  
                     u1990 0596                       u1991 0595                       u1985 0576  
                     u1995 0592              lcd_chr_cp@chr 0076                       _atoi 0485  
                     _main 0415                       btemp 007E                       start 0000  
          ??_Solve_Add_Sub 0022            ?_Delete_Pre_Num 0070            ??_Solve_Mul_Div 002F  
                    ?_atoi 0076                      ?_main 0070            __end_of___awdiv 0342  
          __end_of___awmod 0271            ___awdiv@divisor 0025            ___awdiv@counter 0029  
                    _PORTB 0006                      _TRISB 0086           ??_keypad_get_key 0070  
          __end_of_lcd_cmd 00B1            __end_of_lcd_chr 0099         Print_Result@result 002D  
             ?_keypad_init 0070                      atoi@n 007B                      atoi@s 007D  
                    main@i 0052             Solve_Mul_Div@i 0037                      status 0003  
                    wtemp0 007E             _LCD_Write_Char 01C9            __initialization 07EB  
             __end_of_atoi 04FB               __end_of_main 0485                     ??_atoi 0078  
                   ??_main 007E                _Get_Pre_Num 0342           ___awdiv@dividend 0027  
                   _TRISD0 0440                     _TRISD1 0441                     _TRISD2 0442  
                   _TRISD3 0443                     _TRISD4 0444                     _TRISD5 0445  
   __end_of_LCD_Write_Char 0218          Solve_Add_Sub@expr 0025           __end_of_lcd_init 0415  
          Get_Expression@i 0032                     ___wmul 00ED                  ??___awdiv 007E  
                ??___awmod 0074           ___awdiv@quotient 002B            ___awmod@divisor 0070  
          ___awmod@counter 0074                  ??_lcd_cmd 0074                  ??_lcd_chr 007C  
           Solve_expr@expr 003D                 _Solve_expr 0112            Get_Pre_Num@expr 0024  
  __end_of__initialization 07FC        Get_Expression@F1349 0054            ?_LCD_Write_Char 0070  
        _LCD_SEND_4BIT_CMD 00B1             __pcstackCOMMON 0070         ?_LCD_SEND_4BIT_CMD 0070  
           _Get_Expression 059D           ??_lcd_set_cursor 0075        ??_LCD_SEND_4BIT_CMD 0071  
        _Solve_Mul_Div$793 0030          _Solve_Mul_Div$794 0032                 __pbssBANK0 0054  
               __pbssBANK1 00A0  __end_of_LCD_SEND_4BIT_CMD 00CB           ??_Delete_Pre_Num 0071  
               __pmaintext 0415                    ?___wmul 0070     __end_of_Get_Expression 064A  
               _lcd_chr_cp 006B                ?_Solve_expr 0039                  ?_lcd_init 0070  
    __end_of_Solve_Add_Sub 059D              ?_Print_Result 002D                    ___awdiv 02D9  
                  ___awmod 0218            ?_Get_Expression 0070                    __ptext1 03AB  
                  __ptext2 007B                    __ptext3 0112                    __ptext4 0702  
                  __ptext5 0342                    __ptext6 017D                    __ptext7 04FB  
                  __ptext8 0485                    __ptext9 0271                    _lcd_cmd 0099  
                  _lcd_chr 0089      __end_of_Solve_Mul_Div 07EB               ?_Get_Pre_Num 0020  
         ___awmod@dividend 0072                    atoi@neg 007A                    clrloop0 0074  
               ??_lcd_init 0074       end_of_initialization 07FC             ??_Print_Result 007E  
              ?_lcd_chr_cp 0070                 lcd_chr@chr 007B                 lcd_chr@col 007A  
               lcd_chr@row 007C           ??_LCD_Write_Char 0071                 main@result 0050  
           __end_of___wmul 0112        start_initialization 07EB                   ??___wmul 0074  
                ___latbits 0002              __pcstackBANK0 0020       __end_of_Print_Result 02D9  
            ??_keypad_init 0070               ??_Solve_expr 007E         Get_Expression@expr 0020  
      lcd_set_cursor@High4 0078           ??_Get_Expression 007A                   ?___awdiv 0025  
                 ?___awmod 0070         __end_of_Solve_expr 0138                   ?_lcd_cmd 0070  
                 ?_lcd_chr 007A          _SET_LCD_DATA_PINS 00CB             _keypad_get_key 064A  
           ___wmul@product 0074        Solve_Mul_Div@result 0034         ?_SET_LCD_DATA_PINS 0070  
      __end_of_keypad_init 0089                  clear_ram0 0073            lcd_set_cursor@c 0074  
          lcd_set_cursor@r 0076                  main@F1377 00A0        ??_SET_LCD_DATA_PINS 0070  
        ___wmul@multiplier 0070               ??_lcd_chr_cp 0076  __end_of_SET_LCD_DATA_PINS 00ED  
   __end_of_keypad_get_key 0702               Get_Pre_Num@i 0020        LCD_Write_Char@High4 0074  
       __end_of_lcd_chr_cp 0073        Solve_Add_Sub@result 0023          Get_Expression@equ 0031  
       lcd_set_cursor@Low4 0077         lcd_set_cursor@Temp 0079       LCD_SEND_4BIT_CMD@CMD 0073  
                 __ptext10 0089                   __ptext11 00ED                   __ptext20 00CB  
                 __ptext12 0218                   __ptext21 064A                   __ptext13 02D9  
                 __ptext14 059D                   __ptext15 0138                   __ptext16 0099  
                 __ptext17 00B1                   __ptext18 006B                   __ptext19 01C9  
              _keypad_init 007B                   _lcd_init 03AB            ?_keypad_get_key 0070  
             _Print_Result 0271              _Solve_Add_Sub 04FB            Delete_Pre_Num@i 0070  
          Delete_Pre_Num@j 0072                   main@expr 003E              _Solve_Mul_Div 0702  
       LCD_Write_Char@Data 0075         LCD_Write_Char@Low4 0073             _lcd_set_cursor 0138  
        Solve_Mul_Div@expr 0036             ?_Solve_Add_Sub 0020             _Delete_Pre_Num 017D  
               _OPTION_REG 0081           Solve_expr@result 003B             ?_Solve_Mul_Div 002D  
            ??_Get_Pre_Num 0022     __end_of_lcd_set_cursor 017D      SET_LCD_DATA_PINS@Data 0070  
