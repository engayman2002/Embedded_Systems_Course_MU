

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Mar 31 11:50:09 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0008                     _PORTD	set	8
   167     0007                     _PORTC	set	7
   168     0088                     _TRISD	set	136
   169     0087                     _TRISC	set	135
   170                           
   171                           	psect	cinit
   172     07FC                     start_initialization:	
   173                           ; #config settings
   174                           
   175     07FC                     __initialization:
   176     07FC                     end_of_initialization:	
   177                           ;End of C runtime variable initialization code
   178                           
   179     07FC                     __end_of__initialization:
   180     07FC  0183               	clrf	3
   181     07FD  120A  118A  2F20   	ljmp	_main	;jump to C main() function
   182                           
   183                           	psect	cstackCOMMON
   184     0070                     __pcstackCOMMON:
   185     0070                     ?_main:
   186     0070                     ?___awdiv:	
   187                           ; 1 bytes @ 0x0
   188                           
   189     0070                     ___awdiv@divisor:	
   190                           ; 2 bytes @ 0x0
   191                           
   192                           
   193                           ; 2 bytes @ 0x0
   194     0070                     	ds	2
   195     0072                     ___awdiv@dividend:
   196                           
   197                           ; 2 bytes @ 0x2
   198     0072                     	ds	2
   199     0074                     ??___awdiv:
   200     0074                     ___awdiv@counter:	
   201                           ; 1 bytes @ 0x4
   202                           
   203                           
   204                           ; 1 bytes @ 0x4
   205     0074                     	ds	1
   206     0075                     ___awdiv@sign:
   207                           
   208                           ; 1 bytes @ 0x5
   209     0075                     	ds	1
   210     0076                     ___awdiv@quotient:
   211                           
   212                           ; 2 bytes @ 0x6
   213     0076                     	ds	2
   214     0078                     ?___awmod:
   215     0078                     ___awmod@divisor:	
   216                           ; 2 bytes @ 0x8
   217                           
   218                           
   219                           ; 2 bytes @ 0x8
   220     0078                     	ds	2
   221     007A                     ___awmod@dividend:
   222                           
   223                           ; 2 bytes @ 0xA
   224     007A                     	ds	2
   225     007C                     ??___awmod:
   226     007C                     ___awmod@counter:	
   227                           ; 1 bytes @ 0xC
   228                           
   229                           
   230                           ; 1 bytes @ 0xC
   231     007C                     	ds	1
   232     007D                     ___awmod@sign:
   233                           
   234                           ; 1 bytes @ 0xD
   235     007D                     	ds	1
   236                           
   237                           	psect	cstackBANK0
   238     0020                     __pcstackBANK0:
   239     0020                     ??_main:
   240                           
   241                           ; 1 bytes @ 0x0
   242     0020                     	ds	3
   243     0023                     main@num:
   244                           
   245                           ; 2 bytes @ 0x3
   246     0023                     	ds	2
   247                           
   248                           	psect	maintext
   249     0720                     __pmaintext:	
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 14 in file "main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;  num             2    3[BANK0 ] int 
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : B00/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   269 ;;      Params:         0       0       0       0       0
   270 ;;      Locals:         0       2       0       0       0
   271 ;;      Temps:          0       3       0       0       0
   272 ;;      Totals:         0       5       0       0       0
   273 ;;Total ram usage:        5 bytes
   274 ;; Hardware stack levels required when called: 1
   275 ;; This function calls:
   276 ;;		___awdiv
   277 ;;		___awmod
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283     0720                     _main:	
   284                           ;psect for function _main
   285                           
   286     0720                     l752:	
   287                           ;incstack = 0
   288                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   289                           
   290                           
   291                           ;main.c: 16:     int num=0;
   292     0720  1283               	bcf	3,5	;RP0=0, select bank0
   293     0721  1303               	bcf	3,6	;RP1=0, select bank0
   294     0722  01A3               	clrf	main@num
   295     0723  01A4               	clrf	main@num+1
   296                           
   297                           ;main.c: 18:     TRISC=0x00;
   298     0724  1683               	bsf	3,5	;RP0=1, select bank1
   299     0725  1303               	bcf	3,6	;RP1=0, select bank1
   300     0726  0187               	clrf	7	;volatile
   301                           
   302                           ;main.c: 19:     TRISD=0x00;
   303     0727  0188               	clrf	8	;volatile
   304                           
   305                           ;main.c: 21:     PORTC=0x00;
   306     0728  1283               	bcf	3,5	;RP0=0, select bank0
   307     0729  1303               	bcf	3,6	;RP1=0, select bank0
   308     072A  0187               	clrf	7	;volatile
   309                           
   310                           ;main.c: 22:     PORTD=0x00;
   311     072B  0188               	clrf	8	;volatile
   312     072C                     l754:
   313                           
   314                           ;main.c: 23:     _delay((unsigned long)((1000)*((8000000)/4000.0)));
   315     072C  300B               	movlw	11
   316     072D  1283               	bcf	3,5	;RP0=0, select bank0
   317     072E  1303               	bcf	3,6	;RP1=0, select bank0
   318     072F  00A2               	movwf	??_main+2
   319     0730  3026               	movlw	38
   320     0731  00A1               	movwf	??_main+1
   321     0732  305D               	movlw	93
   322     0733  00A0               	movwf	??_main
   323     0734                     u417:
   324     0734  0BA0               	decfsz	??_main,f
   325     0735  2F34               	goto	u417
   326     0736  0BA1               	decfsz	??_main+1,f
   327     0737  2F34               	goto	u417
   328     0738  0BA2               	decfsz	??_main+2,f
   329     0739  2F34               	goto	u417
   330                           
   331                           ;main.c: 26:     while(num<=9999)
   332     073A  2FEA               	goto	l776
   333     073B                     l756:
   334                           
   335                           ;main.c: 27:     {;main.c: 28:         PORTC=num%10;
   336     073B  300A               	movlw	10
   337     073C  00F8               	movwf	___awmod@divisor
   338     073D  3000               	movlw	0
   339     073E  00F9               	movwf	___awmod@divisor+1
   340     073F  1283               	bcf	3,5	;RP0=0, select bank0
   341     0740  1303               	bcf	3,6	;RP1=0, select bank0
   342     0741  0824               	movf	main@num+1,w
   343     0742  00FB               	movwf	___awmod@dividend+1
   344     0743  0823               	movf	main@num,w
   345     0744  00FA               	movwf	___awmod@dividend
   346     0745  120A  118A  2660  120A  118A  	fcall	___awmod
   347     074A  0878               	movf	?___awmod,w
   348     074B  1283               	bcf	3,5	;RP0=0, select bank0
   349     074C  1303               	bcf	3,6	;RP1=0, select bank0
   350     074D  0087               	movwf	7	;volatile
   351     074E                     l758:
   352                           
   353                           ;main.c: 29:         PORTD=~(0x08);
   354     074E  30F7               	movlw	247
   355     074F  0088               	movwf	8	;volatile
   356     0750                     l760:
   357                           
   358                           ;main.c: 30:         _delay((unsigned long)((30)*((8000000)/4000.0)));
   359     0750  304E               	movlw	78
   360     0751  1283               	bcf	3,5	;RP0=0, select bank0
   361     0752  1303               	bcf	3,6	;RP1=0, select bank0
   362     0753  00A1               	movwf	??_main+1
   363     0754  30EA               	movlw	234
   364     0755  00A0               	movwf	??_main
   365     0756                     u427:
   366     0756  0BA0               	decfsz	??_main,f
   367     0757  2F56               	goto	u427
   368     0758  0BA1               	decfsz	??_main+1,f
   369     0759  2F56               	goto	u427
   370     075A  0000               	nop
   371                           
   372                           ;main.c: 32:         PORTC=(num/10)%10;
   373     075B  300A               	movlw	10
   374     075C  00F8               	movwf	___awmod@divisor
   375     075D  3000               	movlw	0
   376     075E  00F9               	movwf	___awmod@divisor+1
   377     075F  300A               	movlw	10
   378     0760  00F0               	movwf	___awdiv@divisor
   379     0761  3000               	movlw	0
   380     0762  00F1               	movwf	___awdiv@divisor+1
   381     0763  1283               	bcf	3,5	;RP0=0, select bank0
   382     0764  1303               	bcf	3,6	;RP1=0, select bank0
   383     0765  0824               	movf	main@num+1,w
   384     0766  00F3               	movwf	___awdiv@dividend+1
   385     0767  0823               	movf	main@num,w
   386     0768  00F2               	movwf	___awdiv@dividend
   387     0769  120A  118A  26B9  120A  118A  	fcall	___awdiv
   388     076E  0871               	movf	?___awdiv+1,w
   389     076F  00FB               	movwf	___awmod@dividend+1
   390     0770  0870               	movf	?___awdiv,w
   391     0771  00FA               	movwf	___awmod@dividend
   392     0772  120A  118A  2660  120A  118A  	fcall	___awmod
   393     0777  0878               	movf	?___awmod,w
   394     0778  1283               	bcf	3,5	;RP0=0, select bank0
   395     0779  1303               	bcf	3,6	;RP1=0, select bank0
   396     077A  0087               	movwf	7	;volatile
   397     077B                     l762:
   398                           
   399                           ;main.c: 33:         PORTD=~(0x04);
   400     077B  30FB               	movlw	251
   401     077C  0088               	movwf	8	;volatile
   402     077D                     l764:
   403                           
   404                           ;main.c: 34:         _delay((unsigned long)((30)*((8000000)/4000.0)));
   405     077D  304E               	movlw	78
   406     077E  1283               	bcf	3,5	;RP0=0, select bank0
   407     077F  1303               	bcf	3,6	;RP1=0, select bank0
   408     0780  00A1               	movwf	??_main+1
   409     0781  30EA               	movlw	234
   410     0782  00A0               	movwf	??_main
   411     0783                     u437:
   412     0783  0BA0               	decfsz	??_main,f
   413     0784  2F83               	goto	u437
   414     0785  0BA1               	decfsz	??_main+1,f
   415     0786  2F83               	goto	u437
   416     0787  0000               	nop
   417                           
   418                           ;main.c: 36:         PORTC=(num/100)%10;
   419     0788  300A               	movlw	10
   420     0789  00F8               	movwf	___awmod@divisor
   421     078A  3000               	movlw	0
   422     078B  00F9               	movwf	___awmod@divisor+1
   423     078C  3064               	movlw	100
   424     078D  00F0               	movwf	___awdiv@divisor
   425     078E  3000               	movlw	0
   426     078F  00F1               	movwf	___awdiv@divisor+1
   427     0790  1283               	bcf	3,5	;RP0=0, select bank0
   428     0791  1303               	bcf	3,6	;RP1=0, select bank0
   429     0792  0824               	movf	main@num+1,w
   430     0793  00F3               	movwf	___awdiv@dividend+1
   431     0794  0823               	movf	main@num,w
   432     0795  00F2               	movwf	___awdiv@dividend
   433     0796  120A  118A  26B9  120A  118A  	fcall	___awdiv
   434     079B  0871               	movf	?___awdiv+1,w
   435     079C  00FB               	movwf	___awmod@dividend+1
   436     079D  0870               	movf	?___awdiv,w
   437     079E  00FA               	movwf	___awmod@dividend
   438     079F  120A  118A  2660  120A  118A  	fcall	___awmod
   439     07A4  0878               	movf	?___awmod,w
   440     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   441     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   442     07A7  0087               	movwf	7	;volatile
   443     07A8                     l766:
   444                           
   445                           ;main.c: 37:         PORTD=~(0x02);
   446     07A8  30FD               	movlw	253
   447     07A9  0088               	movwf	8	;volatile
   448     07AA                     l768:
   449                           
   450                           ;main.c: 38:         _delay((unsigned long)((30)*((8000000)/4000.0)));
   451     07AA  304E               	movlw	78
   452     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   453     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   454     07AD  00A1               	movwf	??_main+1
   455     07AE  30EA               	movlw	234
   456     07AF  00A0               	movwf	??_main
   457     07B0                     u447:
   458     07B0  0BA0               	decfsz	??_main,f
   459     07B1  2FB0               	goto	u447
   460     07B2  0BA1               	decfsz	??_main+1,f
   461     07B3  2FB0               	goto	u447
   462     07B4  0000               	nop
   463                           
   464                           ;main.c: 40:         PORTC=(num/1000)%10;
   465     07B5  300A               	movlw	10
   466     07B6  00F8               	movwf	___awmod@divisor
   467     07B7  3000               	movlw	0
   468     07B8  00F9               	movwf	___awmod@divisor+1
   469     07B9  30E8               	movlw	232
   470     07BA  00F0               	movwf	___awdiv@divisor
   471     07BB  3003               	movlw	3
   472     07BC  00F1               	movwf	___awdiv@divisor+1
   473     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   474     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   475     07BF  0824               	movf	main@num+1,w
   476     07C0  00F3               	movwf	___awdiv@dividend+1
   477     07C1  0823               	movf	main@num,w
   478     07C2  00F2               	movwf	___awdiv@dividend
   479     07C3  120A  118A  26B9  120A  118A  	fcall	___awdiv
   480     07C8  0871               	movf	?___awdiv+1,w
   481     07C9  00FB               	movwf	___awmod@dividend+1
   482     07CA  0870               	movf	?___awdiv,w
   483     07CB  00FA               	movwf	___awmod@dividend
   484     07CC  120A  118A  2660  120A  118A  	fcall	___awmod
   485     07D1  0878               	movf	?___awmod,w
   486     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   487     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   488     07D4  0087               	movwf	7	;volatile
   489     07D5                     l770:
   490                           
   491                           ;main.c: 41:         PORTD=~(0x01);
   492     07D5  30FE               	movlw	254
   493     07D6  0088               	movwf	8	;volatile
   494     07D7                     l772:
   495                           
   496                           ;main.c: 42:         _delay((unsigned long)((30)*((8000000)/4000.0)));
   497     07D7  304E               	movlw	78
   498     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   499     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   500     07DA  00A1               	movwf	??_main+1
   501     07DB  30EA               	movlw	234
   502     07DC  00A0               	movwf	??_main
   503     07DD                     u457:
   504     07DD  0BA0               	decfsz	??_main,f
   505     07DE  2FDD               	goto	u457
   506     07DF  0BA1               	decfsz	??_main+1,f
   507     07E0  2FDD               	goto	u457
   508     07E1  0000               	nop
   509     07E2                     l774:
   510                           
   511                           ;main.c: 44:         num++;
   512     07E2  3001               	movlw	1
   513     07E3  1283               	bcf	3,5	;RP0=0, select bank0
   514     07E4  1303               	bcf	3,6	;RP1=0, select bank0
   515     07E5  07A3               	addwf	main@num,f
   516     07E6  1803               	skipnc
   517     07E7  0AA4               	incf	main@num+1,f
   518     07E8  3000               	movlw	0
   519     07E9  07A4               	addwf	main@num+1,f
   520     07EA                     l776:
   521                           
   522                           ;main.c: 26:     while(num<=9999)
   523     07EA  1283               	bcf	3,5	;RP0=0, select bank0
   524     07EB  1303               	bcf	3,6	;RP1=0, select bank0
   525     07EC  0824               	movf	main@num+1,w
   526     07ED  3A80               	xorlw	128
   527     07EE  00FF               	movwf	btemp+1
   528     07EF  30A7               	movlw	167
   529     07F0  027F               	subwf	btemp+1,w
   530     07F1  1D03               	skipz
   531     07F2  2FF5               	goto	u405
   532     07F3  3010               	movlw	16
   533     07F4  0223               	subwf	main@num,w
   534     07F5                     u405:
   535     07F5  1C03               	skipc
   536     07F6  2FF8               	goto	u401
   537     07F7  2FF9               	goto	u400
   538     07F8                     u401:
   539     07F8  2F3B               	goto	l756
   540     07F9                     u400:
   541     07F9                     l18:
   542     07F9  120A  118A  2800   	ljmp	start
   543     07FC                     __end_of_main:
   544                           
   545                           	psect	text1
   546     0660                     __ptext1:	
   547 ;; *************** function ___awmod *****************
   548 ;; Defined at:
   549 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;  divisor         2    8[COMMON] int 
   552 ;;  dividend        2   10[COMMON] int 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  sign            1   13[COMMON] unsigned char 
   555 ;;  counter         1   12[COMMON] unsigned char 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  2    8[COMMON] int 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, btemp+1
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         4       0       0       0       0
   566 ;;      Locals:         2       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         6       0       0       0       0
   569 ;;Total ram usage:        6 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578     0660                     ___awmod:	
   579                           ;psect for function ___awmod
   580                           
   581     0660                     l714:	
   582                           ;incstack = 0
   583                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   584                           
   585     0660  01FD               	clrf	___awmod@sign
   586     0661                     l716:
   587     0661  1FFB               	btfss	___awmod@dividend+1,7
   588     0662  2E64               	goto	u311
   589     0663  2E65               	goto	u310
   590     0664                     u311:
   591     0664  2E6C               	goto	l722
   592     0665                     u310:
   593     0665                     l718:
   594     0665  09FA               	comf	___awmod@dividend,f
   595     0666  09FB               	comf	___awmod@dividend+1,f
   596     0667  0AFA               	incf	___awmod@dividend,f
   597     0668  1903               	skipnz
   598     0669  0AFB               	incf	___awmod@dividend+1,f
   599     066A                     l720:
   600     066A  01FD               	clrf	___awmod@sign
   601     066B  0AFD               	incf	___awmod@sign,f
   602     066C                     l722:
   603     066C  1FF9               	btfss	___awmod@divisor+1,7
   604     066D  2E6F               	goto	u321
   605     066E  2E70               	goto	u320
   606     066F                     u321:
   607     066F  2E75               	goto	l726
   608     0670                     u320:
   609     0670                     l724:
   610     0670  09F8               	comf	___awmod@divisor,f
   611     0671  09F9               	comf	___awmod@divisor+1,f
   612     0672  0AF8               	incf	___awmod@divisor,f
   613     0673  1903               	skipnz
   614     0674  0AF9               	incf	___awmod@divisor+1,f
   615     0675                     l726:
   616     0675  0878               	movf	___awmod@divisor,w
   617     0676  0479               	iorwf	___awmod@divisor+1,w
   618     0677  1903               	btfsc	3,2
   619     0678  2E7A               	goto	u331
   620     0679  2E7B               	goto	u330
   621     067A                     u331:
   622     067A  2EAA               	goto	l744
   623     067B                     u330:
   624     067B                     l728:
   625     067B  01FC               	clrf	___awmod@counter
   626     067C  0AFC               	incf	___awmod@counter,f
   627     067D  2E89               	goto	l734
   628     067E                     l730:
   629     067E  3001               	movlw	1
   630     067F                     u345:
   631     067F  1003               	clrc
   632     0680  0DF8               	rlf	___awmod@divisor,f
   633     0681  0DF9               	rlf	___awmod@divisor+1,f
   634     0682  3EFF               	addlw	-1
   635     0683  1D03               	skipz
   636     0684  2E7F               	goto	u345
   637     0685                     l732:
   638     0685  3001               	movlw	1
   639     0686  00FF               	movwf	btemp+1
   640     0687  087F               	movf	btemp+1,w
   641     0688  07FC               	addwf	___awmod@counter,f
   642     0689                     l734:
   643     0689  1FF9               	btfss	___awmod@divisor+1,7
   644     068A  2E8C               	goto	u351
   645     068B  2E8D               	goto	u350
   646     068C                     u351:
   647     068C  2E7E               	goto	l730
   648     068D                     u350:
   649     068D                     l736:
   650     068D  0879               	movf	___awmod@divisor+1,w
   651     068E  027B               	subwf	___awmod@dividend+1,w
   652     068F  1D03               	skipz
   653     0690  2E93               	goto	u365
   654     0691  0878               	movf	___awmod@divisor,w
   655     0692  027A               	subwf	___awmod@dividend,w
   656     0693                     u365:
   657     0693  1C03               	skipc
   658     0694  2E96               	goto	u361
   659     0695  2E97               	goto	u360
   660     0696                     u361:
   661     0696  2E9D               	goto	l740
   662     0697                     u360:
   663     0697                     l738:
   664     0697  0878               	movf	___awmod@divisor,w
   665     0698  02FA               	subwf	___awmod@dividend,f
   666     0699  0879               	movf	___awmod@divisor+1,w
   667     069A  1C03               	skipc
   668     069B  03FB               	decf	___awmod@dividend+1,f
   669     069C  02FB               	subwf	___awmod@dividend+1,f
   670     069D                     l740:
   671     069D  3001               	movlw	1
   672     069E                     u375:
   673     069E  1003               	clrc
   674     069F  0CF9               	rrf	___awmod@divisor+1,f
   675     06A0  0CF8               	rrf	___awmod@divisor,f
   676     06A1  3EFF               	addlw	-1
   677     06A2  1D03               	skipz
   678     06A3  2E9E               	goto	u375
   679     06A4                     l742:
   680     06A4  3001               	movlw	1
   681     06A5  02FC               	subwf	___awmod@counter,f
   682     06A6  1D03               	btfss	3,2
   683     06A7  2EA9               	goto	u381
   684     06A8  2EAA               	goto	u380
   685     06A9                     u381:
   686     06A9  2E8D               	goto	l736
   687     06AA                     u380:
   688     06AA                     l744:
   689     06AA  087D               	movf	___awmod@sign,w
   690     06AB  1903               	btfsc	3,2
   691     06AC  2EAE               	goto	u391
   692     06AD  2EAF               	goto	u390
   693     06AE                     u391:
   694     06AE  2EB4               	goto	l748
   695     06AF                     u390:
   696     06AF                     l746:
   697     06AF  09FA               	comf	___awmod@dividend,f
   698     06B0  09FB               	comf	___awmod@dividend+1,f
   699     06B1  0AFA               	incf	___awmod@dividend,f
   700     06B2  1903               	skipnz
   701     06B3  0AFB               	incf	___awmod@dividend+1,f
   702     06B4                     l748:
   703     06B4  087B               	movf	___awmod@dividend+1,w
   704     06B5  00F9               	movwf	?___awmod+1
   705     06B6  087A               	movf	___awmod@dividend,w
   706     06B7  00F8               	movwf	?___awmod
   707     06B8                     l270:
   708     06B8  0008               	return
   709     06B9                     __end_of___awmod:
   710                           
   711                           	psect	text2
   712     06B9                     __ptext2:	
   713 ;; *************** function ___awdiv *****************
   714 ;; Defined at:
   715 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  divisor         2    0[COMMON] int 
   718 ;;  dividend        2    2[COMMON] int 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  quotient        2    6[COMMON] int 
   721 ;;  sign            1    5[COMMON] unsigned char 
   722 ;;  counter         1    4[COMMON] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  2    0[COMMON] int 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0, btemp+1
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         4       0       0       0       0
   733 ;;      Locals:         4       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         8       0       0       0       0
   736 ;;Total ram usage:        8 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745     06B9                     ___awdiv:	
   746                           ;psect for function ___awdiv
   747                           
   748     06B9                     l670:	
   749                           ;incstack = 0
   750                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   751                           
   752     06B9  01F5               	clrf	___awdiv@sign
   753     06BA                     l672:
   754     06BA  1FF1               	btfss	___awdiv@divisor+1,7
   755     06BB  2EBD               	goto	u211
   756     06BC  2EBE               	goto	u210
   757     06BD                     u211:
   758     06BD  2EC5               	goto	l678
   759     06BE                     u210:
   760     06BE                     l674:
   761     06BE  09F0               	comf	___awdiv@divisor,f
   762     06BF  09F1               	comf	___awdiv@divisor+1,f
   763     06C0  0AF0               	incf	___awdiv@divisor,f
   764     06C1  1903               	skipnz
   765     06C2  0AF1               	incf	___awdiv@divisor+1,f
   766     06C3                     l676:
   767     06C3  01F5               	clrf	___awdiv@sign
   768     06C4  0AF5               	incf	___awdiv@sign,f
   769     06C5                     l678:
   770     06C5  1FF3               	btfss	___awdiv@dividend+1,7
   771     06C6  2EC8               	goto	u221
   772     06C7  2EC9               	goto	u220
   773     06C8                     u221:
   774     06C8  2ED2               	goto	l684
   775     06C9                     u220:
   776     06C9                     l680:
   777     06C9  09F2               	comf	___awdiv@dividend,f
   778     06CA  09F3               	comf	___awdiv@dividend+1,f
   779     06CB  0AF2               	incf	___awdiv@dividend,f
   780     06CC  1903               	skipnz
   781     06CD  0AF3               	incf	___awdiv@dividend+1,f
   782     06CE                     l682:
   783     06CE  3001               	movlw	1
   784     06CF  00FF               	movwf	btemp+1
   785     06D0  087F               	movf	btemp+1,w
   786     06D1  06F5               	xorwf	___awdiv@sign,f
   787     06D2                     l684:
   788     06D2  01F6               	clrf	___awdiv@quotient
   789     06D3  01F7               	clrf	___awdiv@quotient+1
   790     06D4                     l686:
   791     06D4  0870               	movf	___awdiv@divisor,w
   792     06D5  0471               	iorwf	___awdiv@divisor+1,w
   793     06D6  1903               	btfsc	3,2
   794     06D7  2ED9               	goto	u231
   795     06D8  2EDA               	goto	u230
   796     06D9                     u231:
   797     06D9  2F11               	goto	l706
   798     06DA                     u230:
   799     06DA                     l688:
   800     06DA  01F4               	clrf	___awdiv@counter
   801     06DB  0AF4               	incf	___awdiv@counter,f
   802     06DC  2EE8               	goto	l694
   803     06DD                     l690:
   804     06DD  3001               	movlw	1
   805     06DE                     u245:
   806     06DE  1003               	clrc
   807     06DF  0DF0               	rlf	___awdiv@divisor,f
   808     06E0  0DF1               	rlf	___awdiv@divisor+1,f
   809     06E1  3EFF               	addlw	-1
   810     06E2  1D03               	skipz
   811     06E3  2EDE               	goto	u245
   812     06E4                     l692:
   813     06E4  3001               	movlw	1
   814     06E5  00FF               	movwf	btemp+1
   815     06E6  087F               	movf	btemp+1,w
   816     06E7  07F4               	addwf	___awdiv@counter,f
   817     06E8                     l694:
   818     06E8  1FF1               	btfss	___awdiv@divisor+1,7
   819     06E9  2EEB               	goto	u251
   820     06EA  2EEC               	goto	u250
   821     06EB                     u251:
   822     06EB  2EDD               	goto	l690
   823     06EC                     u250:
   824     06EC                     l696:
   825     06EC  3001               	movlw	1
   826     06ED                     u265:
   827     06ED  1003               	clrc
   828     06EE  0DF6               	rlf	___awdiv@quotient,f
   829     06EF  0DF7               	rlf	___awdiv@quotient+1,f
   830     06F0  3EFF               	addlw	-1
   831     06F1  1D03               	skipz
   832     06F2  2EED               	goto	u265
   833     06F3  0871               	movf	___awdiv@divisor+1,w
   834     06F4  0273               	subwf	___awdiv@dividend+1,w
   835     06F5  1D03               	skipz
   836     06F6  2EF9               	goto	u275
   837     06F7  0870               	movf	___awdiv@divisor,w
   838     06F8  0272               	subwf	___awdiv@dividend,w
   839     06F9                     u275:
   840     06F9  1C03               	skipc
   841     06FA  2EFC               	goto	u271
   842     06FB  2EFD               	goto	u270
   843     06FC                     u271:
   844     06FC  2F04               	goto	l702
   845     06FD                     u270:
   846     06FD                     l698:
   847     06FD  0870               	movf	___awdiv@divisor,w
   848     06FE  02F2               	subwf	___awdiv@dividend,f
   849     06FF  0871               	movf	___awdiv@divisor+1,w
   850     0700  1C03               	skipc
   851     0701  03F3               	decf	___awdiv@dividend+1,f
   852     0702  02F3               	subwf	___awdiv@dividend+1,f
   853     0703                     l700:
   854     0703  1476               	bsf	___awdiv@quotient,0
   855     0704                     l702:
   856     0704  3001               	movlw	1
   857     0705                     u285:
   858     0705  1003               	clrc
   859     0706  0CF1               	rrf	___awdiv@divisor+1,f
   860     0707  0CF0               	rrf	___awdiv@divisor,f
   861     0708  3EFF               	addlw	-1
   862     0709  1D03               	skipz
   863     070A  2F05               	goto	u285
   864     070B                     l704:
   865     070B  3001               	movlw	1
   866     070C  02F4               	subwf	___awdiv@counter,f
   867     070D  1D03               	btfss	3,2
   868     070E  2F10               	goto	u291
   869     070F  2F11               	goto	u290
   870     0710                     u291:
   871     0710  2EEC               	goto	l696
   872     0711                     u290:
   873     0711                     l706:
   874     0711  0875               	movf	___awdiv@sign,w
   875     0712  1903               	btfsc	3,2
   876     0713  2F15               	goto	u301
   877     0714  2F16               	goto	u300
   878     0715                     u301:
   879     0715  2F1B               	goto	l710
   880     0716                     u300:
   881     0716                     l708:
   882     0716  09F6               	comf	___awdiv@quotient,f
   883     0717  09F7               	comf	___awdiv@quotient+1,f
   884     0718  0AF6               	incf	___awdiv@quotient,f
   885     0719  1903               	skipnz
   886     071A  0AF7               	incf	___awdiv@quotient+1,f
   887     071B                     l710:
   888     071B  0877               	movf	___awdiv@quotient+1,w
   889     071C  00F1               	movwf	?___awdiv+1
   890     071D  0876               	movf	___awdiv@quotient,w
   891     071E  00F0               	movwf	?___awdiv
   892     071F                     l257:
   893     071F  0008               	return
   894     0720                     __end_of___awdiv:
   895     007E                     btemp	set	126	;btemp
   896     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1772
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     904
                                              8 COMMON     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Mar 31 11:50:09 2024

                     l18 07F9             ___awdiv@sign 0075                      l270 06B8  
                    l257 071F                      l700 0703                      l710 071B  
                    l702 0704                      l704 070B                      l720 066A  
                    l706 0711                      l730 067E                      l722 066C  
                    l714 0660                      l708 0716                      l740 069D  
                    l732 0685                      l724 0670                      l716 0661  
                    l670 06B9                      l742 06A4                      l734 0689  
                    l726 0675                      l718 0665                      l680 06C9  
                    l672 06BA                      l736 068D                      l728 067B  
                    l744 06AA                      l760 0750                      l752 0720  
                    l690 06DD                      l682 06CE                      l674 06BE  
                    l746 06AF                      l738 0697                      l770 07D5  
                    l762 077B                      l754 072C                      l692 06E4  
                    l684 06D2                      l676 06C3                      l748 06B4  
                    l772 07D7                      l764 077D                      l756 073B  
                    l694 06E8                      l686 06D4                      l678 06C5  
                    l774 07E2                      l766 07A8                      l758 074E  
                    l696 06EC                      l688 06DA                      l768 07AA  
                    l776 07EA                      l698 06FD                      u210 06BE  
                    u211 06BD                      u300 0716                      u220 06C9  
                    u301 0715                      u221 06C8                      u230 06DA  
                    u310 0665                      u231 06D9                      u311 0664  
                    u320 0670                      u400 07F9                      u321 066F  
                    u401 07F8                      u250 06EC                      u330 067B  
                    u251 06EB                      u331 067A                      u245 06DE  
                    u405 07F5                      u270 06FD                      u350 068D  
                    u271 06FC                      u351 068C                      u360 0697  
                    u265 06ED                      u361 0696                      u345 067F  
                    u417 0734                      u290 0711                      u291 0710  
                    u275 06F9                      u427 0756                      u380 06AA  
                    u285 0705                      u381 06A9                      u365 0693  
                    u437 0783                      u390 06AF                      u391 06AE  
                    u375 069E                      u447 07B0                      u457 07DD  
           ___awmod@sign 007D                     _main 0720                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___awdiv 0720  
        __end_of___awmod 06B9          ___awdiv@divisor 0070          ___awdiv@counter 0074  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0020  
       ___awdiv@dividend 0072                ??___awdiv 0074                ??___awmod 007C  
       ___awdiv@quotient 0076          ___awmod@divisor 0078          ___awmod@counter 007C  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0720  
                ___awdiv 06B9                  ___awmod 0660                  __ptext1 0660  
                __ptext2 06B9         ___awmod@dividend 007A                  main@num 0023  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0078  
